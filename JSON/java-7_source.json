{
    "java.math.BigDecimal.subtract(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferRB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.isAlive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.rotate(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.updateRegion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.readPassword()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOError", 
            "IOException"
        ]
    }, 
    "java.util.Collections.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.GeneralPath.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.consume()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.1DisposeAction.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.getTotalOut()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.io.FilePermission.getMask(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Comparators.NaturalOrderComparator.compare(Comparable, Comparable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ProfileRGB.getXYZTag(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.IntCumulateTask.getPendingCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.addLocalLogger(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.tableswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.eventTypeEnabled(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.isConstantZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.equals(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Method.getGenericReturnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getNextRightHit(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getCurrentSequencedEvent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Exception.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getSystemContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.updateForm(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createImage(ImageProducer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.Collections.emptyList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.nextSetBit(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StrictMath.abs(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.intersects(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getPixelSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashSet.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.shortcuts()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.sendUrgentData(int)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.printAll(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.expandAffixes()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamClass.access$1400(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.lang.reflect.Field.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getGlobalActiveWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermissionCollection.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.WindowEvent.getWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.stripZerosToMatchScale(BigInteger, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.math.BigDecimal.bigMultiplyPowerTen(BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.DatagramPacket.setAddress(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.zero(sun.invoke.util.Wrapper, Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.PlainDatagramSocketImpl.getOption(SocketOption)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.setCurrentEventAndMostRecentTime(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.text.ChoiceFormat.nextDouble(double, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.tableswitch($i1)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.paramString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.LongWrappingSpliterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.DataBufferUShort.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.addAllForTreeSet(SortedSet, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Ser.readInternal(byte, ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.toHex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.shutdownOutput()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.register(ObjectInputValidation, int)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Float.append(PathIterator, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.getNextEntry()": {
        "intra_proced": [], 
        "inter_proced": [
            "ZipException", 
            "ZipException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.isVarargsCollector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.preparedLambdaForm(MethodType, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.security.KeyStore.store(KeyStore.LoadStoreParameter)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printDateTime(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.IndexColorModel.getDataElements(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.lang.ThreadGroup.threadTerminated(Thread)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "NullPointerException"
        ]
    }, 
    "sun.invoke.util.Wrapper.forPrimitiveType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getStackTrace()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.Package.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.processDropTargetEvent(sun.awt.dnd.SunDropTargetEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.geom.AffineTransform.getRotateInstance(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.isLeapYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.actualMonthLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.WindowTranslucency.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.IOException.addSuppressed(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.removePropertyStrings(Service)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getAnnotatedParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedParametersException"
        ]
    }, 
    "java.lang.IllegalArgumentException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.halt(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.XmlSupport.mportSubtree(Preferences, org.w3c.dom.Element)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getColor(String, Color)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.reflect.ReflectAccess.getMethodAccessor(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.scanByte(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.removeNodeChangeListener(NodeChangeListener)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.reverseAllValidSurrogatePairs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Image.getGraphics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.getProlepticMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.setWindingRule(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Iterable.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.CallSite.maybeReBoxElements(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Terminator.handle(sun.misc.Signal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.list(PrintStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.setImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.floatValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.AccessMode.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.StringBuilder.insert(int, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.getPathIterator(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PeerPaintCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.create(long, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.foundResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.startDrag(DragGestureEvent, Cursor, Transferable, DragSourceListener, FlavorMap)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.net.Socket.isInputShutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.Bits.putDouble(long, double, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.NativeLibLoader.loadLibraries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.MutableBigInteger.modInverseMP2(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.ThreadLocal.expungeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.hitClip(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.assertIsBasicType()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitNewArray(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AWTAccessor.getInvocationEventAccessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getDefaultToolkit()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.lang.StringBuilder.append(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ThreadGroup.add(ThreadGroup)": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.getFD()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.text.Collator.equals(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.subSequence(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.putLongB(ByteBuffer, int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.StringCharBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.SignedMutableBigInteger.toBigInteger(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.getOutputShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(MethodHandle, int, Object, NamedFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkSetFactory()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.io.BufferedReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getForeground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createDirectories(Path, FileAttribute[])": {
        "intra_proced": [
            "FileSystemException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.leave(InetAddress, NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.getMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.remove(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.iterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.ClassLoader.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Duration.between(Temporal, Temporal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "sun.awt.PeerEvent.coalesceEvents(sun.awt.PeerEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.put(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dimension.setSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicIterator.isDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.maskToRangeSet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCertPath(InputStream, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.max(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "SecurityException"
        ]
    }, 
    "java.util.logging.Level.matches(Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getFocusTraversalPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.run()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IOException", 
            "NoSuchElementException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.floatValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.size()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getItemListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.TextField.setEchoChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.getMenuCountImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextHitInfo.afterOffset(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.transform(double[], int, float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.impliesIgnoreMask(FilePermission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Long.compare(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.checkPermission(Permission)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "AccessControlException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.getDisplayName(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.SecurityManager.checkAccept(String, int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Component.AccessibleAWTComponent.getAccessibleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.arrayOffset()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.SimpleBeanInfo.getIcon(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getSimpleName()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.clone()": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.EventQueue.getPriority(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.contains(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.synchronizedSet(Set, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.DeferredCloseInputStream.raise()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleMatcher.filterTags(List, Collection, FilteringMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.take()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.clearMostRecentFocusOwnerOnHide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.mixOnValidating()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDateTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ProfileGray.getMediaWhitePoint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getHierarchyBoundsListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.MenuItem.getMaximumAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads(AbstractQueuedSynchronizer.ConditionObject)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.unicodeBlockPropertyFor(String)": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.predecessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setLineIncrement(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mouseMove(Event, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToShear(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.withSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.getPropertiesEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeTypeString(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.create(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.makeNodeBuilder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.uxxxx()": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.hasQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.getSampleFloat(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.add(long, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.util.Locale.getObject(LocaleNameProvider, Locale, String, Object[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyToIntArray(long, Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.batchRemove(Collection, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getWeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.calculateChildSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getMinY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.findBoundCallerClass(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.keys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.3.range()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.areInputMethodsEnabled()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.Component.FlipSubRegionBufferStrategy.contentsLost()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ModalEventFilter.createFilterForDialog(Dialog)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.updateAutoscroll(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(BigDecimal, int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Toolkit.createScrollPane(ScrollPane)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.LocaleServiceProvider.isSupportedLocale(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.getActionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.NumberFormat.getInstance(sun.util.locale.provider.LocaleProviderAdapter, Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.MatchOps.makeRef(Predicate, MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.config(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.adjustDescendants(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.getKeyEventChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarEntry.getCertificates()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.access$000(WritableByteChannel, ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalBlockingModeException", 
            "RuntimeException"
        ]
    }, 
    "java.security.Provider.implRemove(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.isLoopback()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getResourceBundle()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.beans.EventSetDescriptor.getMethod(MethodDescriptor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.toExcessNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "java.nio.HeapFloatBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.sequential()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeEnum(Enum, ObjectStreamClass, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.divideUnsigned(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.subtract(int[], long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Frame.setOpacity(float)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.geom.Path2D.writeObject(ObjectOutputStream, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.io.FileOutputStream.access$000(FileOutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getAnnotatedReceiverType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.atMonth(Month)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.CharacterData0E.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(Object[], Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.casAnnotationType(Class, sun.reflect.annotation.AnnotationType, sun.reflect.annotation.AnnotationType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.transform(double[], int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(CharSequence, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "OutOfMemoryError"
        ]
    }, 
    "sun.awt.image.SunWritableRaster.stealData(DataBufferInt, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newDirectoryStream(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachEntry(long, Function, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.getTargetVolatile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.consumeNextKeyTyped(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.isClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.containsMapping(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.TreeMap.KeySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.viewAsTypeChecks(MethodType, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getTranslateX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.noneOf(Class)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.catchException(MethodHandle, Class, MethodHandle)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandles", 
            "MethodHandles"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "WrongMethodTypeException"
        ]
    }, 
    "java.net.UnknownHostException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.releaseFD()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.newInstanceGeneric(Object)": {
        "intra_proced": [
            "NoSuchAlgorithmException", 
            "NoSuchAlgorithmException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Dialog.getModalityType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.NativeLibLoader.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.util.IdentityHashMap.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.asin(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.normalize(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.argument(int, BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.isMalformed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Species_L.copyWith(MethodType, LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.getMatchedGroupIndex(String)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.yearMonthToDayOfYear(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addVetoableChangeListener(String, VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.RoundingMode.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.processParentHandlers(Logger, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.MethodArray.remove(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.memberRefersTo(MemberName, Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.evaluate(TerminalOp)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getBestConfiguration(GraphicsConfigTemplate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putShortB(ByteBuffer, int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.istty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.join(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.reduce(LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.UNIXProcess.helperPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.dispatchEventImpl(AWTEvent, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.io.BufferedOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.UNIXProcess.lambda$launchMechanism$261()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.ZonedDateTime.withMinute(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigInteger.jacobiSymbol(int, BigInteger)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.io.PrintStream.println(float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.nio.DoubleBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.period(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getMousePosition(boolean)": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipSubRegionBufferStrategy.showSubRegion(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.update()": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.io.File.listFiles(FileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.bindTo(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.nio.HeapShortBufferR.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.Checkbox.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getScrollType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.removeSpi(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedOutputStream.flushBuffer()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.add(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getOutline(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.beforeExecute(Thread, Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.defineClass(String, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoClassDefFoundError", 
            "SecurityException", 
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapLongBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.createSubsetSampleModel(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readLongUTF()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.GetField.get(String, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.packedBytes(int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.getException()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.jar.Attributes.Name.isValid(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.checkImage(Image, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypes(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.prestartCoreThread()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.nio.file.Files.next()": {
        "intra_proced": [
            "UncheckedIOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.oIDCheck(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.getContents(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.withYear(JapaneseEra, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.setPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.image.Raster.getSampleModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.addMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.bindArgumentF(int, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.net.Inet6Address.isDifferentLocalAddressType(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Font.isTransformed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.tableswitch(c0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.color.ICC_Profile.getDeferredInstance(ProfileDeferralInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.wrap(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.cursor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.fromMap(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.invokeWriteReplace(Object)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.Window.closeSplashScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.access$000(SystemTray, String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.submit(Runnable, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AbstractMethodError"
        ]
    }, 
    "java.time.chrono.ChronoPeriodImpl.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.getTimeToLive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.ownedCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.previousClearBit(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Optional.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.loadAssistiveTechnologies()": {
        "intra_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "ClassNotFoundException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Double.parseDouble(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.charPropertyFor(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapKeyIterator.removeAscending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.insert(int, char)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.image.MemoryImageSource.newPixels(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.classModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.Redirect.2.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.list(PrintWriter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PopupMenu.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isDefined(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.ObjectStreamClass.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Collectors.throwingMerger()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStreamReader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getHostName()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.ServerSocket.isClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setCopies(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.List.deselect(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.init(String, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.lookupswitch(b1)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Properties.forEach(BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.clean(TransferStack.SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.set(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertPath.getCertificates()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalQueries.zoneId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.TypeResolver.erase(Type[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.PriorityQueueSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.transform(float[], int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(StringBuilder, double, Locale, Formatter.Flags, char, int, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Field.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.eras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ExtendedOptionsImpl.checkSetOptionPermission(SocketOption)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.setCurrency(Currency)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.io.OutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.throwException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.getMinute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.CopyMoveHelper.convertMoveToCopyOptions(CopyOption[])": {
        "intra_proced": [
            "AtomicMoveNotSupportedException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.codePointCount(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.setAlignment(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.findVirtualForMH(String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.parse(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.net.URLClassLoader.getPackage(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.isCharSpace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashSet.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.hw.ExtendedBufferCapabilities.getVSync()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getRGBdefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.NoSuchMethodException.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.clip(double, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.OffsetDateTime.isEqual(OffsetDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.PlainSocketImpl.setOption(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.add(TrayIcon)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "Vector"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.WeakHashMap.removeMapping(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.toLowerCaseCharArray(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.makeInt(byte, byte, byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.requiresBidi(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDragEvent.acceptDrag(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getComponents(int, int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isDisplayable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.put(byte[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.lightweightPrint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.absFloor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.OriginType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDragSourceContextPeer.checkEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.producePermutations(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.readInt()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.focusNextComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.AttributedString.addAttribute(AttributedCharacterIterator.Attribute, Object)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i8)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.copy(Path, Path, CopyOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "FileAlreadyExistsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.net.DatagramPacket.setData(byte[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getNativesForFlavor(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DuplicateFormatFlagsException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.awt.geom.AffineTransform.setTransform(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getMinX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.LayoutPath.pathToPoint(Point2D, boolean, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getMaximumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.createBufferStrategy(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.format.Parsed.resolveTimeLenient()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.range(ChronoField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceKeysTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getShort(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.isZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.access$1200(IdentityHashMap, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.checkPackageAccess(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.floorKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.prolepticYear(Era, int)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.Beans.invokePropertyChange(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.close(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.font.AttributeValues.equals(sun.font.AttributeValues)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.pointRelativeToComponent(Point)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalComponentStateException"
        ]
    }, 
    "java.awt.MenuBar.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.List.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "HeadlessException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.Image.getScaledInstance(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "sun.util.logging.PlatformLogger.finest(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.open(String, int, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isFieldSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setPixels(int, int, int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Math.min(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.nanoTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readUnsignedShort()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.isStrongDirectional(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.countMenus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.putBoolean(byte[], int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.BltSubRegionBufferStrategy.contentsLost()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.BidiUtils.getLevels(Bidi)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.consume()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.resolveYearOfEra(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.BitSet.wordIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getClassLoader(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.LocalizedOffsetIdPrinterParser.appendHMS(StringBuilder, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.equals(DisplayMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(MethodHandle, int, Object, String, boolean, LambdaForm.NamedFunction, LambdaForm.NamedFunction)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.getWeeksInWeekYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.setSample(int, int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.isFocusable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.initCause(Throwable)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.reflect.annotation.AnnotationType.isInherited()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.createAttributedCharacterIterator(AttributedCharacterIterator, Attribute, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setExtendedState(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException"
        ]
    }, 
    "java.lang.StringBuffer.insert(int, CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicLong.floatValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.getSum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.PutFieldImpl.writeFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getDayOfWeek(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.DoubleUnaryOperator.compose(DoubleUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.contains(PathIterator, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.permitStatus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.setDateFormatSymbols(DateFormatSymbols)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.image.Raster.createCompatibleWritableRaster(Rectangle)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.useCount(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.range(Enum, Enum)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ClassCastException"
        ]
    }, 
    "java.awt.geom.Line2D.getBounds2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.set(String, String, int, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.redispatchEvent(Component, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.addLocalLogger(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(MouseListener, MouseListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.forEach(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.LongBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.printBoolean(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.indexOf(char[], int, int, String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getBaselineFor(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeDouble(Supplier, ObjDoubleConsumer, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawImage(Image, int, int, int, int, int, int, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.getAccessControlContext(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.io.UnixFileSystem.isAbsolute(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.parse(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipUtils.unixTimeToFileTime(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.readAttributes(Path, String, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putByte(long, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJDouble.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getDigit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Collector.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.FutureTask.removeWaiter(FutureTask.WaitNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.defaultWriteObject()": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.beans.Introspector.makeQualifiedMethodName(String, String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.SocksSocketImpl.tableswitch(i18)": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.offer(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createBufferStrategy(int)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.setEagerValidation(JarFile, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.isNonOpaqueForMixing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.Calendar.toInstant()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.math.MutableBigInteger.binaryGcd(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.scaleByPowerOfTen(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.Color.getComponents(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.parameterCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.WorkQueue, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.put(IntBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getData(Profile, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.InstantiationException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.invalidateParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeUTF(String, long)": {
        "intra_proced": [
            "UTFDataFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeSpreadArguments(MethodHandle, Class, int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodType", 
            "MethodType", 
            "MethodHandleStatics", 
            "NullPointerException"
        ]
    }, 
    "java.awt.PrintJob.end()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.toPattern()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setFieldsComputed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.fill()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.appendCodePoint(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "OutOfMemoryError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Frame.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.checkAccess(Path, AccessMode[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.isInfinite()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.onUnmappableCharacter(CodingErrorAction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.getterFunction(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.printf(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferRL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Value.compareTo(Value)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.io.ObjectInputStream.tableswitch($s5)": {
        "intra_proced": [
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Component.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextField.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectMethodForConstant(byte, Class, MemberName)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageMediaEntry.imageUpdate(Image, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.updateCursorImmediately()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.getNano()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Collections.lastIndexOfSubList(List, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.isPopupTrigger()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.subtractFrom(Temporal)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.file.Files.isWritable(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.initialize(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "InternalError"
        ]
    }, 
    "java.time.DayOfWeek.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.spliterator()": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.notExists(Path, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.resolveOrFail(byte, Class, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.bitLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToRotation(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.checkPackageAccess(ClassLoader, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "NullPointerException"
        ]
    }, 
    "java.util.ResourceBundle.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.insets()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.Arrays.toString(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Checkbox.addItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.MatchOps.BooleanTerminalSink.getAndClearState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.canConvert(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyFromLongArray(Object, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.hasLayoutAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.lookupswitch($i1)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "Component", 
            "AssertionError"
        ]
    }, 
    "java.nio.DirectCharBufferU.put(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontLineMetrics.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.bindArgumentI(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.CharacterData01.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRound(BigInteger, long, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.dnd.DropTargetContext.setTargetActions(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.assertCorrectArity(MethodHandle, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.rotate270()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PushbackInputStream.unread(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.make(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodType"
        ]
    }, 
    "java.text.SimpleDateFormat.encode(int, int, StringBuilder)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.Semaphore.tryAcquire(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.awt.Toolkit.createImage(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.internalGet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.setPort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.newProxy(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.getText()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.lockRunState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitArrayStore(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getURLStreamHandler(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ClassNotFoundException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.Preferences.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.complete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferB.put(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.ulp(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.entries2(JarFile)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.resolveYearOfEra(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "ClassCastException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.security.CodeSource.writeObject(ObjectOutputStream)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.Arrays.deepToString(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.print(String, BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.awt.EventQueue.isDispatchThreadImpl(EventQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.createDateTime(LocalDateTime, ZoneOffset, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.AdjustmentEvent.getAdjustmentType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayReader.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ChangeListenerMap.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.getZipFileCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.fireVetoableChange(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.PipelineHelper.copyInto(Sink, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectByteBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.absolutePath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.adjustInto(Temporal)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Short.valueOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.chunkFor(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.acquireUninterruptibly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.compare(short, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getHeavyweight(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Constructor.getGenericParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IllegalFormatPrecisionException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.function.Function.compose(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.lookingAt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.actionPerformed(ActionEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.readResolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.DoublePredicate.and(DoublePredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.toEpochSecond(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.add(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.readResolve()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.replaceNames(LambdaForm.Name[], LambdaForm.Name[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, short, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setDialog(DialogType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.returnCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(char[], int, int, char[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.dropArguments(MethodHandle, int, List)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.Collections.checkedSortedMap(SortedMap, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.ReduceOps.5.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.readConfigProperties(String)": {
        "intra_proced": [
            "PrivilegedActionException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.lookupswitch(i12)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isLetter(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectIterator.currentSegment(double[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceName(int, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.security.SecureRandom.getInstanceStrong()": {
        "intra_proced": [
            "NoSuchAlgorithmException", 
            "NoSuchAlgorithmException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.KeyEvent.isControlDown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.ArrayAccessor.name(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.setLayout(LayoutManager)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.eraseThreadLocals()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.setDifference(CharProperty, CharProperty)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.packedBytes(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.join(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getAlpha(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.resize(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "Component", 
            "AssertionError"
        ]
    }, 
    "java.awt.Frame.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.of(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProviders()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.elementAt(int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectIntBufferRU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.BasicPermissionCollection.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getRemoveListenerMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiplyDivideAndRound(long, long, long, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Long.stringSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.toArray()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.EventQueue.setCurrentEventAndMostRecentTimeImpl(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setSidesToDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getInterfaces0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSigner.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.ofInstant(Chronology, Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.StringCoding.StringDecoder.requestedCharsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isExternallySet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.subList(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.ResourceBundle.access$500(ResourceBundle.CacheKey, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.toHexString(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Math.log1p(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.access$100(Formatter.Flags, Formatter.Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.probeBackupLocations(ClassValue.Entry[], ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.setStub(AppletStub)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.dnd.DropTarget.addDropTargetListener(DropTargetListener)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "TooManyListenersException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.toLocalDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.putLong(byte[], int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getLogicalBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getDataElements(int, int, int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.tableswitch($i6)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayDeque.pop()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.io.ObjectInputStream.readBlockHeader(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.offsetByCodePoints(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.LoggerWeakRef.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.closeSplashScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getBandOffsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.SocketPermission.authorizedIPv4(String, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.replace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.font.NumericShaper.rangeForCodePoint(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.forEachRemaining(Consumer)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makePairwiseConvertByEditor(MethodHandle, MethodType, boolean, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodHandleStatics", 
            "NullPointerException", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.awt.Toolkit.loadSystemColors(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.oldSpeciesData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FocusTraversalPolicy.getComponentAfter(Container, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchMappingsTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.createIndicesArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EnumMapIterator.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withDecimalStyle(DecimalStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.useProtocolVersion(int)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Thread.enumerate(Thread[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl.targetCheck(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.access$200(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.lookupPrintServices()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.toUnsignedBigInteger(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ref.Finalizer.hasBeenFinalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.valueOf(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Scrollbar.removeAdjustmentListener(AdjustmentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.compareAndSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.stream(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.prepareImage(Image, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.setHelpMenu(Menu)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.refill()": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextInt(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.access$200(EventQueue, sun.awt.FwDispatcher)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagConstraints.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ProfileRGB.getMatrix()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Buffer.truncate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.floatValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ProcessEnvironment.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.setActive(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.elementData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.time.MonthDay.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.hashCode(URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.NetworkInterface.getByName0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.hash(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleServiceProviderPool.getLocalizedObject(sun.util.locale.provider.LocaleServiceProviderPool.LocalizedObjectGetter, Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.hasMoreSpecificClass(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.readResolve()": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.print.PrinterJob.defaultPage(PageFormat)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putLong(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.setOption(SocketOption, Object)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setModal(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.resolve(byte, MemberName, Class)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "LinkageError", 
            "LinkageError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.CharacterData00.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.Cleaner.setContextClassLoader(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getDefaultUncaughtExceptionHandler()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getRootUpperBound(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.DebugTraceInfoStack.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getSamples(int, int, int, int, int, double[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.getInputContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withMinute(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.edit(File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Calendar.computeFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.math.MutableBigInteger.getMagnitudeArray()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.getSample(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.put(String, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.runFinalization()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.load(Class, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.end(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.typeCheck(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.checkBadFlags(Formatter.Flags[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.checkfpx(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GridBagLayout.getLayoutDimensions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Parts.getQuery()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachEntryTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isFocusable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setMaxPage(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.setIndex(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.EventQueue.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "SecurityException", 
            "SecurityException", 
            "SecurityException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.canEncode(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "CharsetEncoder", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.String.offsetByCodePoints(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.BitSet.recalculateWordsInUse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAppliedShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.time.ZonedDateTime.toLocalDateTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchKeysTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addMouseListener(MouseListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.parameterCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeUTF(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.floatsToBytes(float[], int, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.finishPoll(RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isRecursivelyVisibleUpToHeavyweightContainer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.classNamesEqual(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.getField()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.getUniverse(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.update(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getAnnotatedSuperclass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.setColor(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.prefixLength(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.mapToInt(LongToIntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.tryAdvance(LongConsumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.getAndVerifyPackage(String, Manifest, URL)": {
        "intra_proced": [
            "SecurityException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.addAll(Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.focusedWindowChanged(Component, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Variable.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isModalExcluded(ModalExclusionType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.5.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getOrientation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.invoker(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.io.CharArrayWriter.write(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.setCachedMethodHandle(MethodHandle[], int, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Frame.setState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.lookup(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.UNIXProcess.lambda$new$265(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.dispatchMouseWheelToAncestor(MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Map.computeIfAbsent(Object, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.multiplyExact(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setBounds(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferStrategy.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isBmpCodePoint(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.minimumSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.hashCode(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontResolver.getFontIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.println(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.HashMap.split(HashMap, HashMap.Node[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.inRange(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.returnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.ensureCapacity(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Era.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ClassValue.castEntry(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.floatValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getLocale()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalComponentStateException"
        ]
    }, 
    "java.awt.event.MouseEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.access$300(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Component.removeInputMethodListener(InputMethodListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.makeChild(Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeIterator.next()": {
        "intra_proced": [
            "IllegalStateException", 
            "NoSuchElementException"
        ], 
        "inter_proced": [
            "UncheckedIOException", 
            "IllegalStateException", 
            "NoSuchElementException", 
            "UncheckedIOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedValueTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.remove()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.TextComponent.AccessibleAWTTextComponent.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readClassDesc(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.dispose()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "InvocationTargetException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Font.access$000(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.ScrollPaneAdjustable.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.toFront()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.PriorityQueue.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.Reader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.createThreadGroup()": {
        "intra_proced": [
            "Error", 
            "Error"
        ], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.nio.file.FileSystem.provider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isLinkerMethodInvoke(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.getEventQueue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getTileWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.checkInsertProvider(String)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.makePairwiseConvert(MethodHandle, MethodType, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.awt.Choice.countItems()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.copyInto(Object[], int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.updateCurrentCursor(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int, int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AWTException"
        ]
    }, 
    "java.util.Formatter.Conversion.isCharacter(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.cancel(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "FutureTask"
        ]
    }, 
    "java.io.ObjectInputStream.skipBytes(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.countItems()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.removeLastOccurrence(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getAllWindows()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.charset.Charset.1.getNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.replaceAll(BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.newPropertyChangeEvent(Object, String, Object, Object)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.Introspector.findMethod(Class, String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigestSpi.engineGetDigestLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long3(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.tableswitch(c0)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.withLaterOffsetAtOverlap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.equals(FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getItem(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.BufferedOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.delete(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DigitList.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.beans.BeanDescriptor.getBeanClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.severe(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.subLowest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.insert(int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.io.ObjectOutputStream.isCustomSubclass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSet(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readChar()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.lang.reflect.Constructor.getRawAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeInjectedInvoker(Class)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "InternalError"
        ], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.parallelPrefix(long[], LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.BigDecimalLayout.mantissa()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.getAnnotatedType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.inheritIO()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isFocused()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.nextDouble(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getJustifiedLayout(float)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.geom.AffineTransform.getRotateInstance(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.accumulateAndGet(long, LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.orderBands(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.subdivide(CubicCurve2D, CubicCurve2D, CubicCurve2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isAsciiDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.validateUnconditionally()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.tableswitch(b12)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntryMethod(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Rectangle.contains(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.isVisible(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.indexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.net.SocketFlow.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.put(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.checkInitted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef.permitStatus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.hw.ExtendedBufferCapabilities.derive(VSyncType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readShort()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.badElementMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getHigherEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getAndSetInt(Object, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextArea.replaceText(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Method.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getHScrollbarHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.expandBigIntegerTenPowers(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.isInvokeSpecial()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.erasedType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketConnect(InetAddress, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.getCodeSource(JarFile, URL, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException"
        ]
    }, 
    "java.security.PermissionsHash.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.TaskQueue.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isLetterOrDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.ColorType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.ensureCache()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.skipCustomData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setPrinterResolution(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.unorderedSkipLimitSpliterator(Spliterator.OfLong, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.subtractExact(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readArray(boolean)": {
        "intra_proced": [
            "InternalError", 
            "InternalError"
        ], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.checkValidYear(long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.EventSetDescriptor.getParameterTypes(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.1.unorderedSkipLimitSpliterator(Spliterator, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.curveTo(float, float, float, float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.adjustStamp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.getSourceAsDragGestureRecognizer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.tableswitch(c18)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.RGBImageFilter.filterRGB(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readUTF(DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.processActionEvent(ActionEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.floor(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.ObjectStreamClass.writeNonProxy(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.Duration.create(boolean, long, long, long, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.io.ObjectInputStream.GetFieldImpl.getFieldOffset(String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.TreeMap.subFloor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.ProviderList.getIndex(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.intersection(CharProperty, CharProperty)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.awt.datatransfer.DataTransferer.getDefaultUnicodeEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getFocusCycleRootAncestor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToLongTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putIntL(ByteBuffer, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.initHtmlDataFlavor(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.color.ICC_Profile.getMinorVersion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getFocusTraversalKeys(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.enabledOnToolkit(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.batchRemove(Collection, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.getSourceClassName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.tailMap(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.reset()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Properties.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.put(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.reportException(int)": {
        "intra_proced": [
            "CancellationException"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Dialog.doDispose()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "InvocationTargetException"
        ]
    }, 
    "java.math.BigDecimal.doRound(BigInteger, int, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "sun.invoke.util.VerifyAccess.isMemberAccessible(Class, Class, int, Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.valueOf(LongBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.casReflectionData(Class, SoftReference, SoftReference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logging.getParentLoggerName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.Entry.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getCanonicalFile()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.GraphicsCallback.PaintAllCallback.runComponents(Component[], Graphics, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfLong.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parseObject(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.StrictMath.rint(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(MouseListener, MouseListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Ser.tableswitch(b0)": {
        "intra_proced": [
            "InvalidClassException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.String.valueOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.CodePointIterator.create(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyToShortArray(long, Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.write(ByteBuffer[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.drain()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.localizedMagnitude(StringBuilder, char[], Formatter.Flags, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createDefaultFileTypeDetector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addWindowFocusListener(WindowFocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getPSName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.encode(String, char[], int, int)": {
        "intra_proced": [
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "Error", 
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.io.Writer.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitReturn(LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.toConcurrentMap(Function, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.getShortB(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeBooleans(boolean[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.loadLibrary(Class, String, boolean)": {
        "intra_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError"
        ], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "EmptyStackException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "ArrayIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.awt.dnd.SunDropTargetEvent.getDispatcher()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "sun.util.calendar.CalendarUtils.floorDivide(int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(boolean[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.getQueuedSubmissionCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.getIssuerDN()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.getNano()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextGaussian()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getInstance(String, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.setTransient(Transient)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Component.processHierarchyEvent(HierarchyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.getBeginIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.get(short[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.println(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.awt.event.MouseWheelEvent.getScrollAmount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getInputStream()": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.handlePossibleCancellationInterrupt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.compile(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.caretBoundingShape(int, int, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.closeDeferred(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.applyCurrentShapeBelowMe()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.removeFromWindowList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.clearGlobalFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "NullPointerException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.BitSet.lambda$stream$71()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CoreMetrics.effectiveBaselineOffset(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.CumulateTask.getPendingCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getImplicitDownCycleTraversal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.navigableKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextAttribute.readResolve()": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.getAndAdd(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.getAccessibleChild(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.put(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setFocusTraversalKeysEnabled(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.scanHexPost(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.addToPanel(Component, Object, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readDoubles(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isSelectAlternative(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.char0(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.getOption(int)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.wait()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getNativeContainer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.checkValidValue(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "sun.util.calendar.ZoneInfoFile.getZoneInfo(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AWTAutoShutdown.notifyThreadFree(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.internalSetIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PeerPaintCallback.runOneComponent(Component, Rectangle, Graphics, Shape, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.wrap(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getConstructorAccessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.tableswitch($i5)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.net.SocketInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.Random.initialScramble(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.clearMostRecentFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setPrinterResolution(int[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.resolveYD(JapaneseEra, int, Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.checkAccess(byte, Class, MemberName)": {
        "intra_proced": [
            "AssertionError", 
            "MemberName", 
            "MemberName"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.temporal.TemporalAccessor.range(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Long.getChars(long, int, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.AccessibleAWTContainer.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getGenericExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.compareTo(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getY2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.listFiles(FilenameFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Toolkit.firePropertyChange(PropertyChangeEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getKey(String, char[])": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.ensureInitialized()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodType"
        ]
    }, 
    "java.time.ZoneOffset.getTotalSeconds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Base64.base64ToByteArray(String, boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectStreamClass.lookupAny(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.List.isEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getSendBufferSize()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.time.MonthDay.compareTo(MonthDay)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.toBundleName(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.sort(List, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getParameters()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "AbstractMethodError"
        ]
    }, 
    "java.lang.ClassLoader.setDefaultAssertionStatus(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapIntBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getOwningFrameDialog(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.set(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.text.SimpleDateFormat.toPattern()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AlphaComposite.derive(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Branch.add(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.min(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.put(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.getFlavorListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.init(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PasswordAuthentication.getUserName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.setTimeZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.Component.getLocale()": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException"
        ]
    }, 
    "java.lang.reflect.Proxy.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ExtendedOptionsImpl.checkGetOptionPermission(SocketOption)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.show()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.String.format(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException", 
            "DuplicateFormatFlagsException"
        ]
    }, 
    "java.time.temporal.Temporal.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.invoke.LambdaForm.basicType(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.doubleToRawLongBits(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setGlobalFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.tableswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.initialize(int, int, ColorModel, Object, int, int, Hashtable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.WeakIdentityMap.transfer(WeakIdentityMap.Entry[], WeakIdentityMap.Entry[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(PrimitiveIterator.OfDouble, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.isInterrupted(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.makeInt(AbstractPipeline, long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.EnumSet.addRange(Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.getChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.addDecoration(sun.font.Decoration, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.security.Provider.implRemoveService(Provider.Service)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.CharacterData.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readLongs(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.offer(Delayed, long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandleStatics.message(String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.AWTKeyStroke.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToDoubleTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferShort.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.toCharset(String)": {
        "intra_proced": [
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.cpPatches(byte[])": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.processHierarchyBoundsEvent(HierarchyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.NoSuchAlgorithmException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.regionStart()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.setBlockDataMode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.applyCurrentShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToIntTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivilegedWithCombiner(PrivilegedAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getDisplayNames(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setTitle(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.walk(Path)": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.MonthDay.isBefore(MonthDay)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getNextRightHit(int, TextLayout.CaretPolicy)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Toolkit.getEventQueue()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.CharacterName.get(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "EOFException", 
            "IndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.nio.DirectLongBufferU.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.min()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Path2D.lineTo(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.setSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.getAnnotationsByType(Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.transferAfterCancelledWait(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getSystemSelection()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.io.ObjectOutputStream.PutField.put(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(String, String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.parseServer(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.identityForm(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setTitle(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.retargetUnexpectedFocusEvent(FocusEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.getDirectMethodNoRestrict(byte, Class, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.LocaleNameProvider.getDisplayCountry(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.lookupswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.Component.isMixingNeeded()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDate.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.image.WritableRaster.getDataBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.markException(int, ClassNotFoundException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.AdaptedRunnableAction.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.toInstant(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.text.SimpleDateFormat.getDisplayNamesMap(int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.buildId(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.EventSetDescriptor.appendTo(StringBuilder, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "java.lang.invoke.MethodHandle.asTypeCached(MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.dateEpochDay(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.beans.Introspector.getTargetDefaultPropertyIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(long[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isSurrogatePair(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.tableswitch($b1)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.Component.getMaximumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.rebind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.beans.EventSetDescriptor.getListenerMethods()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeObjectOverride(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.setMainTableEntry(char, char, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.iterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.logging.LogRecord.getResourceBundle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.initialize(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectByteBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.safeLeftShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.equals(Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.subFormat(int, int, FieldDelegate, StringBuffer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.getLong(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.connectInternal(InetAddress, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.subList(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "IndexOutOfBoundsException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toChars(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(boolean[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipCoder.isUTF8()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isDigit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.wrap(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.12ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferInt.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setFileName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setNormalizedDate(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapKeyIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getMaximum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.put(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getItalicAngle(Font, AffineTransform, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.finalizeImpl(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.put(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.add(DragSourceMotionListener, DragSourceMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.AccessibleAWTComponent.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectIterator.isDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Exception.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.severe(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.Reflection.quickCheckMemberAccess(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.internalPropagateException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.getRunCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.normalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern"
        ]
    }, 
    "java.util.logging.LogManager.LoggerContext.getGlobalLogger()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ChangeListenerMap.remove(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.pinDayOfMonth(sun.util.calendar.LocalGregorianCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.stream(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.JarURLConnection.getCertificates()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.minimumLayoutSize(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "InternalError"
        ]
    }, 
    "java.util.logging.Logger.logrb(Level, String, String, String, String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.ArrayDeque.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.util.ResourceBundle.CacheKey.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.collect(Supplier, ObjDoubleConsumer, BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.Bits.short0(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getManifestDigests()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.QNode.casItem(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getMinimum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.layoutGlyphVector(FontRenderContext, char[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getMinimumFractionDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isOtherUppercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillWithArguments(Object[], int, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setComponentOrientation(ComponentOrientation)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getCodeSource(URL, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getEntry(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistEra.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DecimalFormat.expandAffix(String, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.LightweightDispatcher.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.intLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.recordExceptionalCompletion(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.forEach(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.setSecurityWarningPosition(Window, Point2D, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentMap.forEach(BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.longPrimitiveParameterCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.put(Class, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.convert(Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.removePropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.getLower(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectStreamField.getTypeCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getNextEvent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getImplClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isShowing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.setState(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divideOneWord(int, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getSiblingIndexAbove()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.awt.Font.getItalicAngle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.loadProviderAsService(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.lookupswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Frame.getExtendedState(Frame)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.x509.X509CertImpl.getSubjectX500Principal(X509Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(HierarchyListener, HierarchyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.getEmptyResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divide(MutableBigInteger, MutableBigInteger, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.regex.Pattern.escape(boolean, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.isExecutable(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.getAudioClip(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.invokeWithArgumentsTracing(Object[])": {
        "intra_proced": [
            "AssertionError", 
            "LambdaForm"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Character.toUpperCaseCharArray(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitConst(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.access$600(InetSocketAddress.InetSocketAddressHolder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setResizable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getBootstrapResources(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.dequeueKeyEvents(long, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.cosh(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.setSystemGenerated(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.PipelineHelper.exactOutputSizeIfKnown(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divide(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.HeapLongBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.addAdjustmentListener(AdjustmentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomLongsSpliterator.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.parsePastWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.adjustInto(Temporal, long)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getInt(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.jar.JarEntry.getTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.equalParamTypes(Class[], Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.setFormatter(Formatter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.getRunLimit(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.2.apply(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarUtils.sprintf0d(StringBuilder, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.collectArgumentArrayForm(int, MethodHandle)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.reflect.Reflection.getCallerClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.isAccessible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.add(Object)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.awaitFulfill(QNode, Object, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.eras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SortedOps.opWrapSink(int, Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Dialog.checkShouldBeBlocked(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.skipForward(InputStream, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.focusPreviousComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.next()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Node.asArray(IntFunction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.extendedProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.unpack(long, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lambda$static$264()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.IndexColorModel.getAlphas(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.isStandardAttr(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.getPrincipals()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getTemporaryLostComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.FloatingDecimal.toJavaFormatString(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.FinalReference.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.isAssignable(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.put(ShortBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getTaskCount()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.findComponentAt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleExtensions.getUnicodeLocaleKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.postWindowEvent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.setVarargs(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.finalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.classFilePrologue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.bisectRootWithHint(double[], double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.tableswitch(b0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.node(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.ProcessPipeInputStream.drainInputStream(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.indexedBinarySearch(List, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.upFocusCycle(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setReceiveBufferSize(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.event.MouseEvent.getMouseModifiersText(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MissingResourceException"
        ]
    }, 
    "java.beans.PropertyChangeSupport.extract(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getOffset(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCertPath(InputStream)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.Collectors.joining(CharSequence, CharSequence, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapKeyIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.getElemFloat(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.Math.lookupswitch(i0)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.createGraphics(BufferedImage)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putShort(long, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneRegion.getRules()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ZoneRulesException", 
            "ZoneRulesException"
        ]
    }, 
    "java.lang.invoke.MethodType.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Dimension2D.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Object, Function)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentHashMap"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.ensureValid(Chronology, Temporal)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.addFlag()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarUtils.floorDivide(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.charset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.isClosedOrPending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.create(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.UnixFileSystem.delete(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addMouseWheelListener(MouseWheelListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.dropComplete(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.minusMillis(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.file.StandardCopyOption.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.subformat(Object[], StringBuffer, FieldPosition, List)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.HeapLongBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadIterator.currentSegment(float[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkPropertiesAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.nio.DirectIntBufferU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.basicType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.insert(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.distanceSq(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFully(byte[], int, int, boolean)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createCustomCursor(Image, Point, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.concurrent.CountedCompleter.quietlyCompleteRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.lowMask(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(BigDecimal, StringBuffer, Format.FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.longValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.EntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getBlockIncrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getTranslateInstance(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.set(int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.createTransformedShape(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.Temporal.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.includesEphemerals()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getTargetPropertyInfo()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.util.TreeMap.buildFromSorted(int, Iterator, ObjectInputStream, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferInt.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.firePropertyChange(PropertyChangeEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretShape(TextHitInfo, Rectangle2D)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectCharBufferU.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.draw3DRect(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.security.ProtectionDomain.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.read(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IOException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Formatter.checkCharacter()": {
        "intra_proced": [
            "IllegalFormatPrecisionException", 
            "MissingFormatWidthException"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divide(MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.IntPipeline.distinct()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.FocusTraversalPolicy.getDefaultComponent(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateEncodingException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.println()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.setSocketAddress(SocketAddress)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl.ensureProtectedAccess(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.setIndexedWriteMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.io.FileInputStream.access$000(FileInputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.setPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.failMismatch(Formatter.Flags, char)": {
        "intra_proced": [
            "FormatFlagsConversionMismatchException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.access$100(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendZoneOrOffsetId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.processDragEnter(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getConstantPool()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharAdvance(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.subparse(String, ParsePosition, String, String, DigitList, boolean, boolean[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.List.removeAccessibleSelection(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.DeqSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.access$300(byte[], int, Charset, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readUnsignedByte()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectConstructorNoSecurityManager(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.bitLengthForInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.filter(IntPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.isPackageAccessible(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.isDateBased()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.leftShift(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.reverseRange(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeDouble(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.failMismatch(Flags, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.put(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getInstance(String, Provider)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getFont(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Canvas.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.invoke.util.VerifyAccess.isTypeVisible(MethodType, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.setPixels(int, int, int, int, ColorModel, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.toURI()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.read(Manifest.FastInputStream, byte[])": {
        "intra_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DoubleBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InvocationEvent.isDispatched()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.Cache.getPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isEnum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isSynthetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.anyNonDefault(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachKeyTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkMethod(byte, Class, MemberName)": {
        "intra_proced": [
            "MemberName"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.image.ComponentColorModel.getRed(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.intrinsicName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.getConstructorAccessor(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.AnnotationType.invocationHandlerReturnType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getMostRecentKeyEventTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.cancelLaterNodes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isLoopbackAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getAnnotatedReturnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.stopDispatching()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.max(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.put(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.addTextListener(TextListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.JRootPane.getLayeredPane()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.FlatteningPathIterator.next(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.getShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.setSize(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.net.SocketPermissionCollection.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDropEvent.rejectDrop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AppContext.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPrimCast(sun.invoke.util.Wrapper, sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permissions.add(Permission)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.setRect(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.readAllLines(Path)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Formatter.isValid(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.CharPropertyNames.CharPropertyFactory.make()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.lightweightPaint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getDocumentRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.append(StringBuilder, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.solveEqn(double[], int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.get(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfInt.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.Cache.create(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.get(ListIterator, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getDescent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.PointerInfo.getLocation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.checkAccess(File, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readShorts(short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.loadManifest(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.initDispatchThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchEntriesTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getStringBounds(char[], int, int, Graphics)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextField.minimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.GetInstance.getInstance(String, Class, String, Provider)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Value.valueOfQueryOnly(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getInstance(String)": {
        "intra_proced": [
            "KeyStoreException", 
            "KeyStoreException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Component.isOpaque()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.values()": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.fireVetoableChange(PropertyChangeEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.isModalityTypeSupported(ModalityType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setPriority(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.util.calendar.CalendarUtils.floorDivide(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.putService(Provider.Service)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.security.Provider.implRemove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToIntTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.CharPropertyNames.charPropertyFor(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.waitForAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getLineMetrics(CharacterIterator, int, int, Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDropEvent.getTransferable()": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.isCoalescingEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.eq(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getItemImpl(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.setComponentZOrder(Component, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.newProxy(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.setElemFloat(int, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.io.LineNumberReader.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.awt.Toolkit.createChoice(Choice)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.lambda$comparingDouble$8dcf42ea$1(ToDoubleFunction, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getSoTimeout()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.DirectByteBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.format(long, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.checkElementIndex(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.getHour()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isAccessibleFrom(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.withHour(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Executable.getGenericInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.getPrintService()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getInstance(String)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.font.TextLine.getCharXPosition(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Choice.select(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.read(long, long, long, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.updateCache(String, SpeciesData)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarSystem.forName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(HierarchyBoundsListener, HierarchyBoundsListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.getAuthority()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.PropertyDescriptor.getReturnType(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.quietlyComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getActionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.setZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.makeLong(AbstractPipeline, long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.DatagramSocket.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.net.URLStreamHandler.equals(URL, URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.DeferredCloseInputStream.closeDeferred(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getDescent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.autoProcessMouseWheel(MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.socketListen(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.applyLocalizedPattern(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.AttributedString.getAttributeCheckRange(Attribute, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.setPriority(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.distinct()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.List.isMultipleMode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.getPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.match(ClassValue.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfPrimitive.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.renderable.RenderContext.concetenateTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.resolve(File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.StandardOpenOption.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.HeapShortBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GradientPaintContext.clipFillRaster(int[], int, int, int, int, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.methodType(Class, List)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.file.Files.isAccessible(Path, AccessMode[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringReader.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.showIfNotLost(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.findExplicitBeanInfo(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.TypeAnnotationParser.buildAnnotatedInterfaces(byte[], sun.reflect.ConstantPool, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.setInput(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.loadFromXML(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAlignmentY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isEnabled(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.getPasswordAuthentication()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.match(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readUTFBody(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.write(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.io.ObjectInputStream.readDoubles(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.setDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.getOpacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.getBytesRead()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.JobAttributes.setPageRanges(int[][])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.upFocusCycle(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.isWord(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.recordExceptionalCompletion(Throwable)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.getMaximumWindowBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int, int, ImageCapabilities, int)": {
        "intra_proced": [
            "AWTException"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.isInvokeBasic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.ConstructorRepository.getParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.min(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.scanHexPost(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.put(long[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.util.ResourceBundle.getBundle(String, Locale, ResourceBundle.Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.getCodeSources(JarFile, URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException"
        ]
    }, 
    "java.util.Random.ints()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.getEntryAfterMiss(ThreadLocal, int, ThreadLocalMap.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getISOCountries()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Integer.toUnsignedLong(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.isValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.System.setProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.security.KeyStoreSpi.engineEntryInstanceOf(String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.isActive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.copyConstructor(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.assertNotPromise()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IllegalFormatConversionException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.awt.EventQueue.5.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.allowsCoreThreadTimeOut()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.isCompatibleRaster(Raster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ValueIterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.isOwnerAppContextDisposed(SequencedEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.bind(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getParams()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.Values.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStreamWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.save(ObjectOutputStream, String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException"
        ]
    }, 
    "java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.firePropertyChange(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(ComponentListener, ComponentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.Entry.setTimestamp(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.Window.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "NullPointerException", 
            "NotActiveException", 
            "NotActiveException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.time.OffsetDateTime.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Rectangle.setLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContent(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.HashMap.untreeify(HashMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.LazyIterator.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.lambda$find$84(FileTreeWalker.Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.getDragSourceListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "SocketException"
        ]
    }, 
    "java.nio.DirectFloatBufferU.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.lookupswitch(c2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.tableswitch($b6)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getSampleDouble(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.previous()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.removeService(Provider.Service)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.Frame.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.canExecute()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.misc.VM.initializeOSEnvironment()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretInfo(int, Rectangle2D, float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.SimpleMethodHandle.copyWithExtendJ(MethodType, LambdaForm, long)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.CountedCompleter.internalPropagateException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getFreeSpace()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.zip.Inflater.needsDictionary()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.grow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IllegalFormatWidthException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getBootstrapResource(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.format(Object[], StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.FieldPosition.getFieldAttribute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.remove(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.lengthOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.buildVarargsArray(MethodHandle, MethodHandle, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "ClassCastException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.setCompletion(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ProcessBuilder.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.parseUnsignedLong(String, int)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "FormatterClosedException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.clearExceptionalCompletion()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.removeRange(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Line2D.ptLineDistSq(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingSubMap.inRange(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.toExternalForm(URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Collections.CheckedQueue.typeCheck(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isMimeTypeEqual(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.definePackageInternal(String, Manifest, URL)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "SecurityException", 
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.postsOldMouseEvents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setFocusableWindowState(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.shutdownNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.Class.isAnonymousClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Socket.setBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkSecurityManager(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.invoke.MethodType.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.time.temporal.IsoFields.ensureIso(TemporalAccessor)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.isOne()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getMaximumYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(FocusListener, FocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getMinimumFractionDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.renameParameter(int, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.offer(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.removeFirstRequest()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Window.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.ServiceLoader.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.getEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.oddModPow(BigInteger, BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.net.URL.getPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.getPropertyChangeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStreamWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.getNano()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.JobAttributes.MultipleDocumentHandlingType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocus(boolean, sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.enable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitTypeInsn(int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.range()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.getAutoDelay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getMostRecentEventTimeImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.lowSurrogate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getTransparency()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findVirtualForMH(String, MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.rethrow(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.setLenient(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.font.TextHitInfo.trailing(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubListIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.arrayContentsEq(Object[], Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Throwable.getLocalizedMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.makeArgumentCombinationForm(int, MethodType, boolean, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCRLs(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.of(ZoneOffset, ZoneOffset, List, List, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parseUnresolved0(CharSequence, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "Error", 
            "Error", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.io.ObjectStreamClass.getClassDataLayout0()": {
        "intra_proced": [
            "InvalidClassException"
        ], 
        "inter_proced": [
            "InternalError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InternalError", 
            "InvalidClassException"
        ]
    }, 
    "java.util.Locale.convertOldISOCodes(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.isConsumed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.createStore(TemporalField, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.util.logging.Level.computeLocalizedLevelName(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.reflect.Method.hasGenericInformation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getCurrencySymbol()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createCompatibleWritableRaster(int, int)": {
        "intra_proced": [
            "RasterFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Choice.addItem(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Character.isMirrored(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.toNanoOfDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.isFixedWidth(DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.moveTo(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCertPath(InputStream, String)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Math.getExponent(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getModifiersExText(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.transferStealCount(ForkJoinPool)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttributeRunData(AttributedCharacterIterator.Attribute, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormat.getDateInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.Collectors.lambda$summarizingInt$175(IntSummaryStatistics, IntSummaryStatistics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchMappingsTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isJavaLetterOrDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "ClassCastException"
        ]
    }, 
    "java.awt.Dialog.ModalityType.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.tableswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.im.InputContext.removeNotify(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(short[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getAlpha(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.lookup(Class, boolean)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.Parser.at(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "javax.xml.parsers.DocumentBuilderFactory.setIgnoringElementContentWhitespace(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.getConstantPoolSize(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getMinY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.put(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getDefinition()": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics"
        ]
    }, 
    "sun.awt.datatransfer.DataTransferer.canonicalName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.lambda$static$2241c452$1(ChronoZonedDateTime, ChronoZonedDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapIntBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.toMillis()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "AbstractMethodError"
        ]
    }, 
    "java.io.OutputStreamWriter.getEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointCount(CharSequence, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.appendAffix(StringBuffer, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.validateUnconditionally(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.access$500(EventQueue, AWTEvent, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.demandLogger(String, String, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapIntBufferR.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransition.of(LocalDateTime, ZoneOffset, ZoneOffset)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.isLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.putTreeVal(int, Object, Object)": {
        "intra_proced": [
            "TreeBin", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.mkdirs()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.disconnect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.isLocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.GetField.get(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.readResolve()": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.postAccept()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getPeer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.6ReducingSink.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.StyledParagraph.getDecorationAt(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.BufferedImage.getMinX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.lastUseIndex(LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendText(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.processEvent(Component, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.connect(SocketAddress, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "SocketException"
        ]
    }, 
    "java.lang.Byte.decode(String)": {
        "intra_proced": [
            "NumberFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.divide(BigInteger, int, BigInteger, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.nio.CharBufferSpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.checkIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getGreatestMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.lambda$spliterator$107()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.stream.Streams.RangeLongSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.toOffsetDateTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.getAccessibleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.readLine(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.math.BigDecimal.add(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.now()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.getPlatformMappingsForFlavor(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.DateTime.isValid(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.pollLast()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.MethodRepository.make(String, sun.reflect.generics.factory.GenericsFactory)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setCurrentAccessibleValue(Number)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.isFixed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "InternalError"
        ]
    }, 
    "java.io.StringWriter.write(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setSoTimeout(int)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.Currency.readStringArray(DataInputStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getFloatL(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.addAllIfNotPresent(MethodArray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.checkPort(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.prepend(Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.prolepticYear(Era, int)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.readResolve()": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.ensureInitialization()": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "JarException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.ScrollPane.isWheelScrollingEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.DatagramChannel.write(ByteBuffer[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getLastModified()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectIntBufferS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.io.File.canRead()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.AbstractExecutorService.invokeAny(Collection)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "TimeoutException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReduceOps.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.min(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketAccept(SocketImpl)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.Head.isParallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mixOnValidating()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.readSymbolicLink(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.Platform.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.lookupswitch($i5)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.lazySet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.EntrySpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.eraOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.format(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException", 
            "DuplicateFormatFlagsException"
        ]
    }, 
    "java.io.ObjectInputStream.tableswitch($s28)": {
        "intra_proced": [
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.ofLocale(Locale)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.OffsetDateTime.minusHours(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.isCompatibleSampleModel(SampleModel)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getDoubleL(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.getImage(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.computeValueConversions(MethodType, MethodType, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.getLocation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.changeName(int, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractPlainSocketImpl"
        ]
    }, 
    "java.util.Date.getTime()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.reflect.Proxy.getProxyClass0(ClassLoader, Class[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.TextComponent.minimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.ceil(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.Collections.synchronizedMap(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.getHostAddress(URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException"
        ]
    }, 
    "java.util.LinkedList.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "sun.awt.SunToolkit.isSystemGenerated(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.TzdbZoneRulesProvider.provideRules(String, boolean)": {
        "intra_proced": [
            "ZoneRulesException", 
            "ZoneRulesException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.MonthDay.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getLocationOnScreen()": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.findMethodHandleType(Class, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.tableswitch($i1)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SliceOps.flags(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.WeakClassKey.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.access$600(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.font.TextLayout.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.nextGetIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt.makeSpliterator(OfInt)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.lastElement()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.atStartOfDay(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.makeLong(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.canDisplay(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.valueMatches(BasicType, Class, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.defaultThreadID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeLong(LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.end(int)": {
        "intra_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.CoderResult.isUnderflow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.Float.setLocation(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.implies(ProtectionDomain, Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfLong.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.addExact(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getShortcut()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.getDragSourceMotionListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.LineNumberReader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.nio.DirectShortBufferU.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getKerning()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.checkCache(int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.isAccessible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.hasNextService()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetTime.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendLiteral(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.fastFormat(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptLineDist(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getDefaultFocusTraversalPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setGlobalCurrentFocusCycleRoot(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.regex.Pattern.compile()": {
        "intra_proced": [
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.getPreparedForm(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Integer.toUnsignedString(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.updateZOrder()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.squareToomCook3()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.reflect.Method.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.toStreamFlags(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.equalLimitedContext(AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(double, StringBuffer, Format.FieldDelegate)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.FilterOutputStream.write(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.typeCheck(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.quietlyInvoke()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchKeysTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ExecutionException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getTextTypeToNative()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownServiceException"
        ]
    }, 
    "java.awt.dnd.DragGestureEvent.startDrag(Cursor, Transferable)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer"
        ]
    }, 
    "java.awt.datatransfer.MimeType.getPrimaryType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeIntSpliterator.splitPoint(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.init(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.checkIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getMouseInfoPeer()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getPathIterator(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getPixels(int, int, int, int, double[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.toSeconds()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.ConcurrentModificationException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.autoProcessMouseWheel(MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.first()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.File.slashify(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.IntBuffer.compare(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntStream.of(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.width(String)": {
        "intra_proced": [
            "IllegalFormatWidthException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.Kind.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.within(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.setAddListenerMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.nio.DirectByteBufferR.asFloatBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(Class, LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.getFieldDelegate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getAlpha()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.PeerEvent.getFlags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJObject.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getReuseAddress()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.getWeek(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getReturnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.etMinSize(Container, GridBagLayoutInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.font.StyledParagraph.findRunContaining(int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeClass(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.Toolkit.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getPlatformLogger(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.awt.CheckboxGroup.getCurrent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.setFollowRedirects(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.Clock.system(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getWindowFocusListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.toArray(Object[])": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newWriter(WritableByteChannel, CharsetEncoder, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.security.AccessController.getCallerPD(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.decapitalize(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.fill()": {
        "intra_proced": [
            "OutOfMemoryError", 
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessBuilder.redirectError(ProcessBuilder.Redirect)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.maybeAddLeadingDot(char[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.darker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getFixedDate(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.copyPrivateDataInto(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isOtherAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getMinimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.signum(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.equalContext(AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.bindArgumentJ(int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.LongPipeline.distinct()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.HttpConnectSocketImpl.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.nextElement()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getConstructors(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.doAccessibleAction(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.Float.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.checkShutdownAccess()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.Character.isValidCodePoint(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.XmlSupport.loadProviderFromProperty(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.HeadlessToolkit.getUnderlyingToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.time.Instant.ofEpochMilli(long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.GraphicsConfiguration.createCompatibleImage(int, int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.function.BiPredicate.and(BiPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.copyConstructors(Constructor[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.getFrom(TemporalAccessor)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.BandedSampleModel.getDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Double.setWindingRule(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.acos(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getLinearRGB16TosRGB8LUT()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.getBounds2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getHours()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.isParallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.PutFieldImpl.getFieldOffset(String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.OfInt.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.stream.DoublePipeline.summaryStatistics()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.Inet6Address.init(byte[], NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.image.SampleModel.setPixels(int, int, int, int, double[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.or(BitSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isPrivate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.list(PrintStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.findNodeFromTail(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(float, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.Container.isAncestorOf(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.getDeclaredAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.Character.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.toURL()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.Entry.getUpperCase()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.markClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.checkMemberAccess(int, Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Container.deliverEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.read(ByteBuffer[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfDouble.makeSpliterator(OfDouble, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.withFixedOffsetZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.locate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail(Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.privateEraFrom(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.toFormatter(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.invoke.MethodType.parameterSlotDepth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.subtractAndApplyShape(Region)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.Class.getClassLoader0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.countBits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToDoubleTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.tableswitch($i11)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.PopupMenu.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.Boolean.valueOf(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.tableswitch($i9)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "sun.nio.cs.StreamDecoder.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.toRGB(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.access$000()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodType", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.text.SimpleDateFormat.matchDSTString(String, int, int, int, String[][])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.tableswitch($i7)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.copy()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.HashMap.tieBreakOrder(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getPathIterator(AffineTransform, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.isBridge()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createTextArea(TextArea)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.isAfter(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.doesSubtypeSupportCharset(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.coalescePaintEvent(PaintEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.nio.FloatBuffer.compare(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.getTemporal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.mulsubBorrow(int[], int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isAfterI(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.DataBufferDouble.getBankData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.getNumericValue(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.getUTFLength(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.getItemCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.scale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.AccessibleAWTComponent.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.Providers.getProviderList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.get(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.text.AttributedCharacterIterator.Attribute.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawRect(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.newMemberBuffer(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoEra.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getMouseMotionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectCharBufferS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.math.BigDecimal.unscaledValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionsEnumerator.getNextEnumWithMore()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.put(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.set(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.defineClassSourceLocation(ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.ListItr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ModalEventFilter.acceptWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getShortMonths()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.matchZoneString(String, int, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Number.shortValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getBeanInfoSearchPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.StringEncoder.encode(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.statusID(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BufferCapabilities.getFrontBufferCapabilities()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.StringBuilderHelper.putIntCompact(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError"
        ]
    }, 
    "java.awt.Dialog.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputEvent.getMaskForButton(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ExecutorCompletionService.newTaskFor(Runnable, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOrderedTask.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.tryAcquire(int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putCharL(ByteBuffer, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.isLenient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.file.FileTreeWalker.EventType.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PrintHeavyweightComponentsCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.getToolkitImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getComponentDownCycle(Component, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetDateTime.atZoneSameInstant(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.logging.LogManager.SystemLoggerContext.findLogger(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.probeHomeLocation(ClassValue.Entry[], ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.ArraySpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.AWTKeyStroke.getKeyChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.relativize(URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.LightweightDispatcher.stopListeningForOtherDrags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putOrderedLong(Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ItemEvent.getStateChange()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Choice.addItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.getScheme()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getTransferType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.makeRef(Predicate, MatchOps.MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.calculateBaseline(Component, GridBagConstraints, Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getInstance(InputStream)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.contains(Object)": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkRead(String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.image.WritableRaster.setPixel(int, int, float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createInterleavedRaster(int, int, int, int, Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.isErrorID(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.expr(Pattern.Node)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.awt.image.DataBufferDouble.setElemFloat(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.SoftCache.put(Object, LinkedHashSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FocusTraversalPolicy.getInitialComponent(Window)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.toByteArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.io.ObjectInputStream.get(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.addRange(Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isMimeTypeSerializedObject()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getFixedDate(int, int, int, sun.util.calendar.BaseCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.getComparator()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.addFocusListener(FocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.isIso(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.copySign(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Component, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.SecurityManager.checkPrintJobAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.logging.LogManager.getLevelProperty(String, Level)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.match(CharSequence, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.recursiveSubtractAndApplyShape(Region, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(LambdaForm.Name, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.maybeBindCaller(MemberName, MethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.passesMillerRabin(int, Random)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferL.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.close()": {
        "intra_proced": [
            "AbstractPlainSocketImpl"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.spliterator(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.setSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.addAll(Collection, Field[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isInstance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.getFromBackup(ClassValue.Entry[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassValueMap"
        ]
    }, 
    "java.awt.Scrollbar.getLineIncrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isDefined(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getCtrlX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.pack()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.OffsetTime.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.initWords(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.time.chrono.Era.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "DateTimeException"
        ]
    }, 
    "sun.awt.util.IdentityArrayList.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isCutoverYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getLineMetrics(char[], int, int, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.TzdbZoneRulesProvider.load(DataInputStream)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "EOFException", 
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.fieldTypeChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.addArgumentForm(int, BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.setLastModifiedTime(Path, FileTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.ints(long, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.removeDragGestureListener(DragGestureListener)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.openSelector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.transferFocusBackward(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketImpl.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.tableswitch(i0)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.append(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.prefListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.acquireFD()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(int, Month, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.argumentTypesMatch(String, Object[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ]
    }, 
    "java.util.zip.Inflater.getBytesWritten()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.arrangeGrid(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "NullPointerException", 
            "Component", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.text.DateFormatSymbols.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.WriteAbortedException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.getMouseEventTargetImpl(int, int, boolean, Container.EventTargetFilter, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.copyAndShift(int[], int, int, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.needIncrement(MutableBigInteger, int, int, MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.put(byte[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.put(String, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.lookupswitch(b13)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.EntrySet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttributes(Map, int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.grow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.setURLStreamHandlerFactory(URLStreamHandlerFactory)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.join(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URISyntaxException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBuffer.put(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.reversed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.KeySpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getShearInstance(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setFieldAccessor(sun.reflect.FieldAccessor, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.set(Object)": {
        "intra_proced": [
            "IllegalStateException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.lookupswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.io.Writer.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSetAll(int[], IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.renderable.RenderContext.preConcetenateTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.countItemsImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.net.URI.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachValueTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.Redirect.append()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getStringProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.probeHomeLocation(Entry[], ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.emptyDoubleSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.set(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentI(BoundMethodHandle, int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Class.copyFields(Field[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.Font.getFamily(Locale)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Menu.removeAll()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.isNormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.filter(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.setData(int, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubListIterator.hasPrevious()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Method.specificToStringHeader(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.getConstructorParameterClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.geom.FlatteningPathIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.newInstance()": {
        "intra_proced": [
            "IllegalAccessException"
        ], 
        "inter_proced": [
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapByteBuffer.putChar(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.StandardCopyOption.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectLongBufferRU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.lang.invoke.MethodType.checkRtype(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.LongUnaryOperator.compose(LongUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.append(StringBuffer, String, FieldDelegate, FieldPosition[], Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getCerts(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxGroup.setCurrent(Checkbox)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.objectFieldOffset(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.resolveYAA(Map, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectShortBufferS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.parseShort(String, int)": {
        "intra_proced": [
            "NumberFormatException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.abs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getItalicBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretInfoTestInternal(TextHitInfo, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.bisectRoot(double[], double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.helpStealer(ForkJoinPool.WorkQueue, ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.image.PixelGrabber.imageComplete(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.getObjectLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.match(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.showStatus(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.EntrySet.add(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readByte()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(double[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.ReplaceTable.assign(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.putFields()": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": [
            "NotActiveException"
        ]
    }, 
    "java.awt.event.MouseWheelEvent.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.destroyForcibly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.isConvertibleFrom(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayCountry(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.CharacterData00.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.LineNumberReader.reset()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.awt.Container.validate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.echo(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilder.getDOMImplementation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Collator.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.getRawAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.setBackground(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getTrafficClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.jar.Manifest.fill()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.copyNamesInto(Name[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getDateFormatSymbolsProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getMaxDescent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getFlatness(double, double, double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getSplashScreen()": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.isProxyActiveImpl(KeyEvent)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getModifiersEx()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Polygon.currentSegment(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.generateLambdaFormInterpreterEntryPointBytes()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.RuntimeException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.3.resolve(Map, TemporalAccessor, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.setOut(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.awt.datatransfer.DataTransferer.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageMediaEntry.setStatus(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToLongTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDropEvent.dropComplete(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.removeImage(Image)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.MethodRepository.getParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.defineAll(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeListenerProxy.vetoableChange(PropertyChangeEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaEntry.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.getAndUpdate(IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getX1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.rename(File, File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeRef(Object, BiFunction, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeUTF(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.SettingsParser.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.isFullyNormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.toASCIIString()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.FileDialog.setMode(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.hasPrevious()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.compactAndTrim()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.findTransitionArray(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.emitPushFields(String, String, jdk.internal.org.objectweb.asm.MethodVisitor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomDoublesSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.RunnableExecuteAction.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.ProcessEnvironment.validateVariable(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.invoke.util.VerifyAccess.isSamePackage(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.nodeName(Class)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.passesLucasLehmer()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Polygon.intersects(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.TextLabelFactory.setLineContext(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.readObject(ObjectInputStream)": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.nio.Bits.getCharL(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.mergeForceCollapse()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedValueTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.BnM.optimize(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilderFactory.newInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.setParameters(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getLastEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.createConstant(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.mix32(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.checkAndSetFastPathStatus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$1700(Class, String, Class[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.acceptConsumed(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.getByAddress(String, byte[], int)": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(Iterator, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getAbsolutePath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.check(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.ResourceBundle.CacheKey.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.OfInt.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.getOption(int)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Flags, char, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.of(Enum, Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.logging.Logger.log(Level, Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.resolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readLong()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapByteBuffer.getLong(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setLocation(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.2.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.contains(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.forEach(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.beans.PropertyChangeEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.createGroup(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.EnclosingMethodInfo.isPartial()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.show()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.zone.TzdbZoneRulesProvider.provideVersions(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.time.LocalTime.tableswitch($i5)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.getZero(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.getNumDataElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineStore(OutputStream, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.isLeap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.arrayForEach(Object, int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "Error", 
            "InvocationTargetException", 
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.String.split(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "Pattern", 
            "Pattern", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.text.AttributedCharacterIterator.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.put(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(BigInteger, int, BigInteger, int, long, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Toolkit.getColorModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.access$200(Console)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.nio.HeapIntBuffer.put(IntBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.Choice.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.Semaphore.Sync.drainPermits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getFloatB(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getHours()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.chrono.Chronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.withNano(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.io.ObjectOutputStream.put(String, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.computeInitialPreparedForms()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "LambdaForm", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.StringBuffer.getChars(int, int, char[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.walk(Path, FileVisitOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "FileTreeIterator", 
            "NullPointerException"
        ]
    }, 
    "java.time.Period.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.malformedForLength(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.getLong(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.Semaphore.drainPermits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.updateAndGet(IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.isAbsolute(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.TypeResolver.erase(Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withSecond(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.RenderingHints.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.createChildHierarchyEvents(int, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.minimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.emptyLongSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.AreaAveragingScaleFilter.makeAccumBuffers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.append(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.compareAndIncrementWorkerCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontManagerFactory.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.2ReducingSink.combine(2ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.AnnotationSupport.getDirectlyAndIndirectlyPresent(Map, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.toCIEXYZ(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.put(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.restrictReceiver(MemberName, DirectMethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setTcpNoDelay(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.invoke.MethodType.methodType(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.isCallerSensitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.setCurve(Point2D[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.toInstant(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isRepresentationClassByteBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.5.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.comparingInt(ToIntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.intersects(PathIterator, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.setDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException"
        ]
    }, 
    "java.nio.ByteBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PrivilegedActionException.getException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.checkScaleNonZero(long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Character.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.add(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.fine(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.io.ObjectInputStream.lookupswitch(b1)": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "FormatterClosedException", 
            "InternalError", 
            "StreamCorruptedException", 
            "InvalidObjectException", 
            "InvalidObjectException"
        ]
    }, 
    "java.awt.AWTKeyStroke.readResolve()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.ArrayPrefixHelpers.DoubleCumulateTask.getPendingCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.getScopeId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.previous()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.doubleStream(Supplier, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "HeadlessException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.datatransfer.SystemFlavorMap.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.getElemDouble(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.format(Object, StringBuffer, FieldPosition)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.doIntersectionPrivilege(PrivilegedAction, AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Menu.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isModalBlocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.compare(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.subtractFrom(Temporal)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.MediaTracker.removeImageImpl(Image, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.isItemEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.getResponseCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.java2d.pipe.Region.getInstance(Shape, AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.put(int[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.setLevel(Level)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.store0(BufferedWriter, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.lang.reflect.Constructor.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.handleShortcut(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.removeDragSourceListener(DragSourceListener)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putChar(Object, long, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printBoolean(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.hasPrimitives()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.put(LongBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.util.stream.Collectors.lambda$joining$119(StringBuilder, StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Button.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.checkGenericType(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError"
        ]
    }, 
    "java.time.OffsetDateTime.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.noneMatch(IntPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeFloat(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.bindArgumentD(int, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.Character.codePointCountImpl(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.getInIfOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Robot.delay(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.loadLibrary(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.updateGraphicsData(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.time.LocalDateTime.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.file.Files.1.accept(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.ensureValid(Chronology, Temporal)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Toolkit.remove(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.isConnected()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.acos(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.following(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.get(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.djustForGravity(GridBagConstraints, Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.setDaemon(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.valueOf(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.mod2(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.EmbeddedFrame.getAppletIfAncestorOf(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GradientPaintContext.cycleFillRaster(int[], int, int, int, int, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TimeZone.setDefault(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.getReadClassBytesTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.checkID(int, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.handleException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.resize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.getEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.io.Writer.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.getBaseType()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.Intrinsic.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.shapeContextually(char[], int, int, Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getComponents(int, int[], int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Font.getAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.isIdentity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedMappingTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.comparableClassFor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.isEnum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.currentThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.tableswitch($i3)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.getHierarchyListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.FutureTask.removeWaiter(WaitNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Crossings.covers(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachValueTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.handleEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.4.range()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.MulticastSocket.leaveGroup(InetAddress)": {
        "intra_proced": [
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Window.updateOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getProtectionDomain()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.io.ObjectInputStream.resolveProxyClass(String[])": {
        "intra_proced": [
            "IllegalAccessError", 
            "ClassNotFoundException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.event.KeyEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.Debug.getInstance(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.getElemDouble(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.chunkFor(long)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.replace(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.encodeJavaMIMEType(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Line2D.ptSegDistSq(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.arraycopy(Object, int, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getShortWeekdays()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.countTokens()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.get(String, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.getCrossings(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.translate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityException.addSuppressed(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.hideAndDisposePreHandler()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.copyData(WritableRaster)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.toZonedDateTime()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBuffer.put(ByteBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.unregisterListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BorderLayout.addLayoutComponent(String, Component)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.flip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.lines(Path, Charset)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.security.PermissionsEnumerator.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.KeySet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.dupArgumentForm(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Component.getAlignmentX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isRepresentationClassSerializable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.add(Component, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.util.calendar.CalendarUtils.sprintf0d(StringBuffer, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.ensureInitialized(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.time.zone.ZoneRulesProvider.getAvailableZoneIds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeExternalData(Externalizable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getPublicDeclaredMethods(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(Object[], int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.LongPipeline.peek(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStroke(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NoSuchFieldException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.getDefaultRepresentationClassAsString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubListIterator.previousIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.PropertyExpander.expand(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.doSetLevel(Logger, Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCRL(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.filter(DoublePredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.parameterType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getMonthLength(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.permuteArgumentChecks(int[], MethodType, MethodType)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.MethodArray.addIfNotPresent(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.getBufferStrategy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.valEquals(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.emitPushFields(String, String, jdk.internal.org.objectweb.asm.MethodVisitor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withChronology(Chronology)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.getFlatnessSq(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.stripLeadingZeroInts(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Throwable.getStackTraceDepth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretPath(TextHitInfo, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.StrictMath.toIntExact(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.contentsLost()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.lambda$static$40(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.codePointBefore(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setPixel(int, int, float[], DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfigTemplate.getBestConfiguration(GraphicsConfiguration[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getClassSignature(Class)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Parameter.getRealName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectIterator.currentSegment(double[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.waitForProcessExit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.setObject(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.remainder(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.readObject0(boolean)": {
        "intra_proced": [
            "OptionalDataException", 
            "OptionalDataException"
        ], 
        "inter_proced": [
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.image.IndexColorModel.tableswitch($i1)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.setNewModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.addMouseMotionListener(MouseMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferShort.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.updateWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.map(DoubleUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.cos(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.typesMatch(BasicType, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.noteDuplicate(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.event.MouseEvent.setNewModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setFocusCycleRoot(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodRef.isSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getExtension(char)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.supportsKeyFormat(Key)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadIterator.currentSegment(double[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.mul(int, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.image.SurfaceManager.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permissions.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedEntryTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.connect(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractPlainSocketImpl", 
            "UnknownHostException", 
            "NullPointerException", 
            "InetAddress", 
            "SocketException", 
            "AbstractPlainSocketImpl", 
            "AbstractPlainSocketImpl", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException"
        ]
    }, 
    "java.lang.Thread.sleep(long, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.setThreshold(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getAnnotatedReturnType0(Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.isRemote(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getGreen(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getTraversalRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.prepareForInvoker(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodType", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.beans.PropertyChangeSupport.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getBigDecimalMultiplier()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.hashCode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.bind(SocketAddress, int)": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "SocketException"
        ]
    }, 
    "java.util.stream.AbstractPipeline.parallelPrepare(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.tableswitch($i10)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.poll(long, TimeUnit)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "ReentrantLock", 
            "AbstractMethodError"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferRL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.RGBImageFilter.substituteColorModel(ColorModel, ColorModel)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.ptypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.DirectoryNode.stream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.group()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.getMethods()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayName(String, boolean, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.AttributedStringIterator.getString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.higherKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Double.moveTo(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.afterNodeInsertion(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.compareComparables(Class, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(AbstractQueuedSynchronizer.Node, AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.getNameString(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.emptyEnumeration()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getBytes(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "UnsupportedEncodingException", 
            "Error", 
            "UnsupportedCharsetException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.removeIf(Predicate)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.BaselineResizeBehavior.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.isLoggable(sun.util.logging.PlatformLogger.Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.toLongArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getFlatness(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.nativeToFlavorLookup(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.security.AccessControlContext.getDebug()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.CopyMoveHelper.moveToForeignTarget(Path, Path, CopyOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "FileAlreadyExistsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.MethodTypeForm.hasNonVoidPrimitives()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.geom.Rectangle2D.intersect(Rectangle2D, Rectangle2D, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.drop(DropTargetDropEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.lambdaForm()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.Character.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.remove(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.HeadlessToolkit.createSystemTray(SystemTray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "NullPointerException", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.Window.ownedInit(Window)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.checkCalendarInit()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "PrivilegedActionException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.overflowFree(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.image.VSyncedBSManager.vsyncAllowed(BufferStrategy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.fullAddCount(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.atMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectShortBufferS.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.JInternalFrame.getMostRecentFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEntrySet.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleMatcher.lookupTag(List, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.isConsumed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.equals(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getContainingWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.spliterator(long[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DoubleBuffer.compare(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ColorPaintContext.getColorModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Policy.addStaticPerms(PermissionCollection, PermissionCollection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkSymbolicClass(Class)": {
        "intra_proced": [
            "MemberName"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.stream.Streams.RangeLongSpliterator.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.newConstructorForSerialization(Class, Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.unsignedLongCompareEq(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeIntrinsic(MethodType, LambdaForm, Intrinsic)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.canBeCalledVirtual(MemberName)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.equal(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(BigDecimal, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.highestOneBit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.EventListenerAggregate.remove(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.throwIllegalStateException(int, int)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.font.AttributeValues.isNonDefault(sun.font.EAttribute)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.sorted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.resolveYMD(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.EnumMap.EntryIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.access$500(NumericShaper.Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.execute(Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AbstractMethodError"
        ]
    }, 
    "java.time.chrono.HijrahDate.of(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawPolygon(Polygon)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.getEndIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.dragDropEnd(DragSourceDropEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(int, Month, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.TextArea.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.BltBufferStrategy.showSubRegion(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printEnclosedStackTrace(Throwable.PrintStreamOrWriter, StackTraceElement[], String, String, Set)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.EventQueue.getNextEventPrivate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getTileHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.isVertical()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.getParent()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.CharacterData00.isOtherAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getOOBInline()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.io.Writer.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.indexOf(Object, Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(BigDecimal, MathContext)": {
        "intra_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.AbstractPipeline.onClose(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readUTFChar(StringBuilder, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.setState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ContainerEvent.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.clearMarkers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.checkRange(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.ofYears(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.FlatteningPathIterator.isDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.getLocalResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.getRunLimit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getDataElements(float[], int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Thread.setPriority0(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.cacheEQItem(sun.awt.EventQueueItem)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.1ReducingSink.combine(1ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.put(Object, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withResolverFields(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.NumberFormatProvider.getPercentInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.findFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.makeCbmhCtor(Class, String)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.UNIXProcess.destroy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.PeekInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getInsets()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.stream.ReduceOps.makeDouble(DoubleBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.runFinalization()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getColor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.ensureCapacity(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.isDynamicLayoutSet()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.regex.Pattern.x()": {
        "intra_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Toolkit.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.2.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.isAfter(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readUTFChar(StringBuilder, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.getScript()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.newTable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.getQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.setEchoCharacter(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToDoubleTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.intStream(Supplier, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getMostRecentFocusOwner(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.createCompatibleSampleModel(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.isUnmappable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.Cache.createObject(LocaleKey)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readFloats(float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.checkImage(Image, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.addAll(int, Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getResourceBundleBased()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setSamples(int, int, int, int, int, double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.Raster.getTransferType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.hasLongPrimitives()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.Calendar.isNarrowStyle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.shouldSpin(SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.pollAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.expandAffix(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamEncoder.forOutputStreamWriter(OutputStream, Object, Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.insert(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.spi.CharsetProvider.charsetForName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectIterator.currentSegment(float[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.copyOf(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.getNumBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretShape(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitReturn(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.removeVetoableChangeListener(VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.image.IntegerComponentRaster.getDataStorage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAllByName0(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectFloatBufferS.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.access$000(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.evaluateSequential(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isType(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleArrayNode.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.out()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.Entry.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchValuesTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.getPathIterator(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.keyIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.parallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.newPixels(int[], ColorModel, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.paintHeavyweightComponents(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.setLabel(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.ofLenient(LocalDateTime, ZoneOffset, ZoneId)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Integer.getInteger(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Character.isUpperCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getSecurityManager()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.substring(int, int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileTypeDetector.probeContentType(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.subListRangeCheck(int, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.mouseWheel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.getStringBuilder()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.Console.access$500()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getLastHWRequest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getCurrentEvent()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.nio.DirectIntBufferRU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.getFromHashMap(Class)": {
        "intra_proced": [
            "ClassValueMap"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getsRGBComponentFromLinearRGB(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getListenerMethods0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.setAccessible(AccessibleObject[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(MemberName, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.FloatBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.checkError()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.awt.event.MouseEvent.isConsumed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocusInWindow(sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.isOwnedBy(AbstractQueuedSynchronizer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.reduce(BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.RoundRectangle2D.setRoundRect(RoundRectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.update(ByteBuffer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException", 
            "UnsupportedOperationException", 
            "ReadOnlyBufferException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.Component.setEnabled(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getComparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.BindCaller.makeInjectedInvoker(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.getWeekRange(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Collectors.reducing(Object, Function, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.access$200(JarFile)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.ResourceBundle.lookupswitch($i7)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.setLine(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getDataBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.deleteCharAt(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TimeZone.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.hitTestChar(float, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.math.BigInteger.lucasLehmerSequence(int, BigInteger, BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.SerializedLambda.getImplMethodKind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeChars(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setClientSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lower()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.run()": {
        "intra_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "Error", 
            "ClassNotFoundException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapCharBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.jar.JarVerifier.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getPropertyChangeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getNormalizedYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createButton(Button)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CloneNotSupportedException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.getDropTargetContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isMulticastAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble.makeSpliterator(OfDouble)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.access$100()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodType", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getPrimaryType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.equalIgnoringCase(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.siftUpUsingComparator(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.getOutputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getDropTargetContextPeer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setLocation(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "Component", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.StreamOpFlag.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.DatagramSocketImpl.leaveGroup(SocketAddress, NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.StringSelection.isDataFlavorSupported(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getFontName()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.jar.Manifest.getAttributes(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "InternalError"
        ]
    }, 
    "java.text.CharacterIteratorFieldDelegate.formatted(Field, Object, int, int, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.convertToMemberName(byte, Member)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayLanguage(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.PageAttributes.setPrintQuality(PrintQualityType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.removeShutdownHook(Thread)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "sun.awt.geom.Curve.pointCrossingsForQuad(double, double, double, double, double, double, double, double, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.addToCache(ClassValue.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.math.BigDecimal.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.Bits.getFloat(ByteBuffer, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.toInstant(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.getBeanInfoFinder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.CodePointIterator.charIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.defaultFileSystem()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getFirstComponent(Container)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.force()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypes(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.skipWhiteSpace(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.isViewableAs(MethodType, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.startEntry(ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getMaxY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SentEvent.dispatch()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "SecurityException", 
            "SecurityException", 
            "SecurityException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.Arrays.binarySearch(float[], int, int, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.Double.quadTo(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.run(Component, Graphics)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.beans.Introspector.throwsException(Method, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(HierarchyListener, HierarchyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.evaluate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isVarargs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.awt.Component.getBaseline(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.ListItr.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.toCIEXYZ(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.List.selectAllAccessibleSelection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mouseUp(Event, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getGlobalFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawPolygon(int[], int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isRunning(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.IntStream.range(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.endOptional()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createLabel(Label)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getObject(LocaleServiceProvider, Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Curve.rectCrossingsForLine(int, double, double, double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.getRangeSet()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ClassCastException", 
            "AssertionError"
        ]
    }, 
    "java.lang.ThreadGroup.checkAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransition.isOverlap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getMTU()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.lastIndexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.coerceData(WritableRaster, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.DirectoryNode.skip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.translate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Crossings.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getMinutes()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.StrictMath.pow(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.entryDislocation(Entry[], int, Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.finder.BeanInfoFinder.getPackages()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.resolveYMD(JapaneseEra, int, Map, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "ClassCastException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.AffineTransform.concatenate(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.read1(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "IOException"
        ]
    }, 
    "java.nio.HeapByteBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.getExtendedKeyUsage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.remove(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.getBigDecimal()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.Float.isFinite(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.terminated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.demandLogger(String, String, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.nio.HeapShortBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.checkForTypeAlias()": {
        "intra_proced": [
            "LinkageError", 
            "LinkageError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.io.PrintWriter.print(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.lang.String.contains(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isFocusableWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.put(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.redirectPlatformLoggers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDisplayName(boolean, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.asVarargsCollector(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "WrongMethodTypeException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.CharacterData02.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.revealDirect(MethodHandle)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.InvalidClassException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.im.InputContext.endComposition()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.withEarlierOffsetAtOverlap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.walkFileTree(Path, Set, int, FileVisitor)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "AssertionError"
        ]
    }, 
    "java.util.Formatter.Conversion.isGeneral(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isOtherAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.beans.PropertyDescriptor.setWriteMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.text.DecimalFormat.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.LockSupport.park()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.put(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.math.BigDecimal.divide(long, int, BigInteger, int, long, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.time.chrono.JapaneseEra.getAbbreviation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getWeekdays()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getAccessibleSelection(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.parameterSlotCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getPercentInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.compareTo(ProcessEnvironment.Value)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.io.FilePermission.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.util.jar.JarFile.getCodeSigners()": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "JarException"
        ]
    }, 
    "java.util.SimpleTimeZone.getOffsets(long, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfInt.makeSpliterator(OfInt, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.getOrientationRequested()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.getInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DecimalFormat.getGroupingSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Inet6Address.isMulticastAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getOpacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermission.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.setFlavorsForNative(String, DataFlavor[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MemberName.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.addFonts(char[], Map, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.util.Properties.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.list(PrintStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.nio.charset.CoderResult.Cache.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.setConstructorAccessor(sun.reflect.ConstructorAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getWeekYear()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Year.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getZipEntry(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.YearMonth.lengthOfMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.RenderingHints.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.readObject(ObjectInputStream)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.TextField.setText(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.refKindOpcode(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.reducePermits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getGamma(int)": {
        "intra_proced": [
            "ProfileDataException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.getProperty(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.IntStreamBuilderImpl.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.accept()": {
        "intra_proced": [
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException", 
            "NullPointerException"
        ]
    }, 
    "java.net.URLClassLoader.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.add(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.Duration.multipliedBy(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.CharacterData.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parseResolved0(CharSequence, ParsePosition)": {
        "intra_proced": [
            "DateTimeParseException", 
            "DateTimeParseException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.PageAttributes.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getJarCodeSigners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.join(CharSequence, Iterable)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipCoder.get(Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.loadAndInitializeInvokerClass(byte[], Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.viewAsTypeChecks(MethodType, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setDestination(DestinationType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.getCombiner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.treeifyBin(HashMap.Node[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.processKeyEvent(Component, KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(ContainerListener, ContainerListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.1.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.normalized()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.font.NumericShaper.Range.inRange(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.checkURL(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.HeadlessException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.ParsePosition.getErrorIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.printFloat(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.getAndSet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJInt.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CollationKey.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readString(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeInts(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divideKnuth(MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.revalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.XmlSupport.exportMap(OutputStream, Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.MediaTracker.waitForID(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.WeakClassKey.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.open()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.getItemListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.arityCheck(int, Class, MethodHandle, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.appendTo(StringBuilder, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.testColorValueRange(float, float, float, float)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.recursiveHideHeavyweightChildren()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.Parsed.resolveTime(long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.MinguoDate.tableswitch($i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.getContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.postEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.downFocusCycle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.multiplyExact(long, long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.valueOf(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "Error"
        ]
    }, 
    "java.time.LocalDate.until(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.StringBuffer.setLength(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Panel.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.isWindowPerpixelTranslucencySupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.ResourceBundle.CacheKey.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.isLeftToRight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.Name.isAlpha(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.nextIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.prependPrefix(char[], int, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.getFileAttributeView(Path, Class, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendOffset(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InvalidClassException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getAccessibleParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.Certificate.getEncoded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.containsAlias(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.MouseInfo.areScreenDevicesIndependent(GraphicsDevice[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.getAccessibleComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.jar.JarFile.getManifestFromReference()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readDouble()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.logrb(Level, String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.File.renameTo(File)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.HijrahDate.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.put(double[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.awt.TextArea.minimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.setSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.get(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodTypeForm.setCachedMethodHandle(int, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ByteArrayOutputStream.writeTo(OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.discardKeyEvents(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.update(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.transfer(ConcurrentHashMap.Node[], ConcurrentHashMap.Node[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PushbackInputStream.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.tableswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.ArrayList.SubList.listIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.address()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.lazySet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.chars()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.dateYearDay(Era, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.charset.CoderResult.isOverflow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.ValueRange.getMaximum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Toolkit.5.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.initCache()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.FileDialog.setDirectory(FileDialog, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.makeFieldName(String, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.setWeekCountData(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DoubleSummaryStatistics.getMax()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.createBufferStrategy(int, BufferCapabilities)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(double[], int, int, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.resolveYMD(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.create(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.getFontMetrics(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.isLeftToRight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.LongWrappingSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.releasePermit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.tryAdvance(IntConsumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.toDays()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.blockedOn(sun.nio.ch.Interruptible)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.copyArrayUnboxing(Object[], int, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.multiplyByInt(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectOutputStream.write(ObjectOutput)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createMenu(Menu)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.lookup(List, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.startLWModal()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.stream.ReduceOps.makeDouble(double, DoubleBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.setComponentScaling()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(BigInteger, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocksSocketImpl.socksBind(InetSocketAddress)": {
        "intra_proced": [
            "AssertionError", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "AssertionError", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException", 
            "AssertionError", 
            "AssertionError", 
            "SocketException", 
            "AssertionError", 
            "SocketException", 
            "SocketException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.getInCache(LambdaFormEditor.Transform)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.delete(int, int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.contains(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ApplicationProxy.create(Proxy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.LazyIterator.nextService()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.EmptyTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.send(DatagramPacket)": {
        "intra_proced": [
            "SocketException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.dumpRequests()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.text.CalendarBuilder.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Proxy.getProxyClass(ClassLoader, Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.time.chrono.HijrahEra.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.getCursor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.evalQuadratic(double[], int, boolean, boolean, double[], double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.clearBit(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContentType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.setIndex(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.cloneWithIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.getTransferType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(long[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.Entry.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeExact(MethodHandle, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.tableswitch($b3)": {
        "intra_proced": [
            "InternalError", 
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.Character.isHighSurrogate(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.offer(Runnable, long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getY2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getDefaultTransferType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Decoration.getDecoration(sun.font.AttributeValues)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.removeActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isUndecorated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(Object[], Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.net.Inet6Address.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.Float.setRect(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.toRangeMask(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InterfaceAddress.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getSample(int, int, int, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read(CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.awt.Container.getComponent(int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.getConstraints(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.nonfairTryAcquire(int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getActions(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.DataInputStream.tableswitch($s6)": {
        "intra_proced": [
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException", 
            "UTFDataFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.tableswitch(b3)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "DateTimeException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.HttpURLConnection.getResponseMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Matcher.getTextLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.allocateElements(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Curve.pointCrossingsForCubic(double, double, double, double, double, double, double, double, double, double, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AttributeValue.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.put(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isInterface()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.StringBuilder.append(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.text.DecimalFormat.getNegativePrefixFieldPositions()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.interpretName(Name, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.expm1(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getBufferSize()": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.current()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(Class, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.math.BigDecimal.longMultiplyPowerTen(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.access$301(ScheduledThreadPoolExecutor.ScheduledFutureTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.ClassValue.get(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceTask.getLocalResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getSuperclass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getWindowStateListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.URL.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.security.KeyStore.load(InputStream, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.iccCStoJCS(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isParentOf(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.demandSystemLogger(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Objects.toString(Object, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readEnum(boolean)": {
        "intra_proced": [
            "InternalError", 
            "InvalidClassException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedHashMap.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getNativeToFlavor()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownServiceException"
        ]
    }, 
    "java.lang.reflect.Proxy.ProxyClassFactory.apply(ClassLoader, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getSuperscript()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.getElem(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.subMap(Object, boolean, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeGetters(Class, String, MethodHandle[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.getSurplusQueuedTaskCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.connect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.growNames(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.DatagramSocket.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getGlobalPermanentFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.of(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.Bits.getIntB(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.enableEvents(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.connect(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.generateSeed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.EntrySpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Calendar.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.triggerTime(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.util.Locale.LocaleNameGetter.getObject(LocaleNameProvider, Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.split(CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.PopupMenu.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.rectCrossings(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.withNanos(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.checkInitialized(MemberName)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.Console.printf(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.lang.reflect.Executable.declaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Timestamp.getTimestamp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEntrySet.vvEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getAllAttributeKeys()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.GroupCurly.match1(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.setEndRule(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.reflect.Field.setInt(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.wrap(float[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Security.initialize()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "UnknownServiceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.SystemTray.getPropertyChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.PeekInputStream.readFully(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getParameter(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.put(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.fireDragGestureRecognized(int, Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextHitInfo.leading(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.Values.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.remove(Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.GraphicsDevice.isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.SubList.rangeCheckForAdd(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.newWorkStealingPool()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharLinePosition(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.AnnotationParser.parseMemberValue(Class, ByteBuffer, sun.reflect.ConstantPool, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.dispatchEventToSelf(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.reflect.Method.getAnnotatedReturnType0(Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.lookup(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJFloat.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.newWrongMethodTypeException(MethodType, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.getProperty(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.processMouseEvent(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.printDialog(PrintRequestAttributeSet)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DigitList.parseInt(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.debugString(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.Invokers.spreadInvoker(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodType", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.ZoneId.getRules()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$100(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "SecurityException", 
            "NoSuchAlgorithmException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "UTFDataFormatException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJShort.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitLdcInsn(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineLoad(InputStream, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.lambda$distinct$200(Integer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.put(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getTransferData(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PrimitiveIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.findStatic(Class, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.toFront()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.access$000(AttributedString, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.format(DateTimePrintContext, StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getRed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Value.valueOfQueryOnly(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputMethodEvent.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.security.cert.Certificate.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.access$200(ArrayDeque, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.text.ParsePosition.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.FloatingDecimal.parseDouble(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputEvent.access$000()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.put(char[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.ImageMediaEntry.startLoad()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.isCustomSubclass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.privilegedDoTunnel(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.eraOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.sin(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.awt.image.IndexColorModel.installpixel(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.invokeReadObjectNoData(Object)": {
        "intra_proced": [
            "InternalError", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.Window.access$100(sun.awt.AppContext, WeakReference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.sum()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.SecurityManager.checkPermission(Permission, Object)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "AccessControlException", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.DelayQueue.iterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.datatransfer.Clipboard.getAvailableDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.holder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.flip(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.getPrimitiveClass(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.canBeCached(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ExecutorCompletionService.take()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.isEnumConstant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.set(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.InetAddress.InetAddressHolder.getHostName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.append(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.atDay(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.format.TextStyle.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.restoreFocus(Window, Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.isOrdered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEntrySet.2.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readTypeString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getKeyChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collection.parallelStream()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapLongBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.setRemoveListenerMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.ThreadGroup.setDaemon(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.print.PrinterJob.printDialog()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.isConsumed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.compareTo(Character)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.arrayForEach(long[], int, int, LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.format(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "sun.misc.Unsafe.getLong(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getKeyEventDispatchers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readDouble()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.time.format.DecimalStyle.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Enum.valueOf(Class, String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NoSuchMethodException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Random.tryAdvance(IntConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectShortBufferU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.print.attribute.standard.MediaPrintableArea.getPrintableArea(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AWTAccessor.getEventQueueAccessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.setBound(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.copyOf(Collection)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ClassCastException", 
            "AssertionError"
        ]
    }, 
    "java.awt.MenuBar.getShortcutMenuItem(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(Name, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.InternalLocaleBuilder.getBaseLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.annotationData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.newInstance()": {
        "intra_proced": [
            "InternalError", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "sun.font.CoreMetrics.get(LineMetrics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.doubles(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.access$000(InfoFromMemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "NoSuchFieldException", 
            "NoSuchMethodException", 
            "InternalError", 
            "NoSuchFieldException", 
            "NoSuchMethodException", 
            "NoSuchMethodException"
        ]
    }, 
    "java.util.Collections.unmodifiableMap(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.ceil(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.logging.Handler.setEncoding(String)": {
        "intra_proced": [
            "UnsupportedEncodingException", 
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getBitOffsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.SoftCache.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findClass(String)": {
        "intra_proced": [
            "ClassNotFoundException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.findMatchingSigners(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.repaintParentIfNeeded(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.unpark(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getLanguage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystemException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getYearLength(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.isSameFile(Path, Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.identity(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.contains(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.treeifyBin(Node[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.getCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.toEnvironmentBlock(Map, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.castReference(Class, Object)": {
        "intra_proced": [
            "MethodHandleImpl"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.getArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.put(Object, Object)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.MenuShortcut.equals(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferFloat.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.editor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isDisplayable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.comparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.exportNode(OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.security.Provider.getServices()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.TemporalAdjusters.lastDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getDoubleL(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.fixAfterDeletion(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.getText(TemporalField, long, TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.printf(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.io.CharArrayReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.isSupported(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalCharsetNameException", 
            "IllegalCharsetNameException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.execute(ForkJoinTask)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.lang.AbstractStringBuilder.insert(int, String)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Date.getCalendarDate()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.beans.FeatureDescriptor.setTransient(Transient)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectIntBufferU.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.ChoiceFormat.setChoices(double[], String[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.getByteArray(String, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Sink.accept(Long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.PrintStreamOrWriter.println(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAccessibleParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.acquireUninterruptibly(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.toGenericString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessEnvironment.toString(ProcessEnvironment.Value)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.listIterator(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodType.listToArray(List)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.DirectCharBufferU.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.until(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.ZoneOffset.tableswitch($i4)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.LongPipeline.adapt(Spliterator)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.of0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readObject()": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.EntrySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toBigDecimal(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Collections.setValue(Object)": {
        "intra_proced": [
            "ClassCastException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.putAll(Map)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Point.setLocation(double, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.TextComponent.setText(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredField(String)": {
        "intra_proced": [
            "NoSuchFieldException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getComponentAfter(Container, Component)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.resolveDate(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.regex.Pattern.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.BorderLayout.preferredLayoutSize(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.image.DataBuffer.getElemFloat(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.tableswitch(i0)": {
        "intra_proced": [
            "InternalError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getPermanentFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.removeLastFocusRequest(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "javax.swing.JComponent.setOpaque(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getFlavorToNative()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownServiceException"
        ]
    }, 
    "java.util.BitSet.get(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarFile.getJarEntry(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.await(long, TimeUnit)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.nio.DirectShortBufferU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.getLabel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getGenericSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.reverseOrder(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.setZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.numericToTextFormat(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.keySpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getRGB(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getPixelBounds(FontRenderContext, float, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.net.DatagramSocket.disconnect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarEntry.isDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.nio.DirectShortBufferS.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEntry.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.seeAllp()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferRL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.setLength(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.charset.Charset.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isFullyNormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.VerifyAccess.isClassAccessible(Class, Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferInt.getBankData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.lang.CharacterData.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.createIntersection(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.getDisplayName(TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.limit(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedEntryTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getFloat(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.next(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.instantiate(Class, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Component.keyDown(Event, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.intern()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.lambdaFormEditor(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.mappingLength(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.canDisplayUpTo(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.createSymbolicLink(Path, Path, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.getLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isStatic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getBaselineFromGraphic(GraphicAttribute)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.isUp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getKeyListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.copyOfRange(short[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.DirectLongBufferU.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.getTriggerEvent()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.LongBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.wrap(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.getLocationOnScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.listIterator(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.getAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.varargsArray(Class, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.awt.image.IndexColorModel.getMapSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.createFont(int, InputStream)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IOException", 
            "IOException", 
            "OutputStream", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.tryAdvance(LongConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Stream.of(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.invokeWithArguments(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.withSecond(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.file.FileTreeWalker.isOpen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.9ReducingSink.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.getPermits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.NetHooks.beforeTcpBind(FileDescriptor, InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.stream(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.beans.Introspector.getBeanInfo(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectShortBufferU.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setBoundsOp(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextSeed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferFloat.setElemFloat(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.isLeftCompleted(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.tableswitch(i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.suggestTargetSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lambda$helperPath$260()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.listen(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doReleaseShared()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.getClass(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isPrimitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.lookupswitch($i5)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.unlock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.getArcWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.vminfoIsConsistent()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.lang.Class.access$200(Field[], String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.checkInt(Class, Object)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.interruptBlocking()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.LocalDateTime.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.ResourceBundle.setName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.setOwner(Path, UserPrincipal)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Short.hashCode(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mouseEnter(Event, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.checkCtorArgs()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.remove(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.probablePrime(int, Random)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.TimSort.gallopRight(Object, Object[], int, int, int, Comparator)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.HashMap.EntrySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.toLocalDateTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.checkBasicType()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.skipBlockData()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.rotate(List, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getDataElements(int, int, int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.getGraphicsConfiguration()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.isSigningRelated(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(String[], String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "sun.reflect.annotation.AnnotationType.getInstance(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.put(String, InetAddress[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.load(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.testAnyFlags(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InvocationEvent.getThrowable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.parameterConstraint(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SpinedBuffer.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getObjectLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isAfterSoftDotted(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getSampleSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.charWidth(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.AccessController.getStackAccessControlContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.visualToLogical(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.bind0(int, InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.isWrapperType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.layout()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.access$400(float[], int, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkWrite(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "sun.font.LayoutPathImpl.mapShape(Shape)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.toLower(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeDoubles(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Throwable.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.EventSetDescriptor.getListenerMethodDescriptors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.packedBytes(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.max(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.arrayHash(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.isLenient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.Double.setRect(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.updateGenericsFor(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.nio.channels.ServerSocketChannel.setOption(SocketOption, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.resolveOrFail(byte, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getDurationSeconds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.averageCharsPerByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.previous()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Button.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.Container.getComponentAt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getSampleDouble(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getDayOfWeekDateOnOrBefore(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.parse(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.namesOK(int, LambdaForm.Name[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Float.intBitsToFloat(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseCaseInsensitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getGenericParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.makeNodeBuilder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeVarargsCollector(MethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SortedOps.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String, int, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.descendingKeySpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.setMaxDelimCodePoint()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.setToRotation(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.last()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToIntTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.resolveOffset(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setValueIsAdjusting(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.numberOfLeadingZeros(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.lookupswitch($b0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.insert(int, CharSequence, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Map.tableswitch(b0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.interpretWithArgumentsTracing(Object[])": {
        "intra_proced": [
            "AssertionError", 
            "LambdaForm"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Frame.isDisplayable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.isFlavorCharsetTextType(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.initElementsFromCollection(Collection)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Random.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putShort(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.addAll(int, Collection)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.cert.CertPath.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.tryLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.setPosture(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putLongL(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.copyWithExtendL(MethodType, LambdaForm, Object)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.io.File.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.repaint(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.isLeap(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.sendUrgentData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.Function.identity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.WrappingSpliterator.doAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.removeDelicately(Component, Container, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeLongs(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "sun.invoke.util.Wrapper.basicTypeChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.getDragSourceContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.sleep(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.getFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.scope.ClassScope.make(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getBaselineOffsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableSet(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isOtherLowercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.arrayElementGetter(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Toolkit.initAssistiveTechnologies()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.isLeapYear(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigestSpi.engineUpdate(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.EntryFuture.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.isNaN()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.Entry.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.initForBootstrap()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.setClip(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.invalidateCache()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.get(byte[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.getFieldOffset(String, Class)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.fireVetoableChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getOption(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getSimpleBinaryName()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.WaitDispatchSupport.access$800(WaitDispatchSupport)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.abs(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getFixedDateJan1(sun.util.calendar.BaseCalendar.Date, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.assign(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.add0(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.identityForm(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.forEach(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.math.BigDecimal.valueOf(long, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.copy(InputStream, Path, CopyOption[])": {
        "intra_proced": [
            "NullPointerException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.MethodArray.hasDefaults()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.minimumSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.headSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.checkInteger()": {
        "intra_proced": [
            "IllegalFormatPrecisionException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.addURL(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getHour()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.createDropTargetAutoScroller(Component, Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.getContextualShaper(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.Introspector.getBeanInfo(Class, Class, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.System.checkIO()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.lang.Character.isWhitespace(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.setState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.toString(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.HeavyweightFocusRequest.getFirstLightweightRequest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.WorkQueue, CountedCompleter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoUnit.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Dialog.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.misc.ASCIICaseInsensitiveComparator.lowerCaseHashCode(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.redispatchEvent(Component, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.ensureOpen()": {
        "intra_proced": [
            "FormatterClosedException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createTempFile(Path, String, String, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReference.set(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.addDragGestureListener(DragGestureListener)": {
        "intra_proced": [
            "TooManyListenersException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.isArgBasicTypeChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.getHeaderFieldDate(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.BufferedImage.getRGB(int, int, int, int, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absCeiling(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.buildFiller(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.awt.Graphics2D.translate(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.NativeLibrary.unload(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.containsValue(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.recursiveApplyCurrentShape(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.toArray()": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.processExited()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.isPopupTrigger()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setExtendedState(Frame, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointBefore(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.tableswitch(c0)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuComponent.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.getAttributes(Path, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getNumericShaping(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.readObject(ObjectInputStream)": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.nio.charset.Charset.atBugLevel(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.getQueuedTaskCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.findKeyword(String, String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StrictMath.nextUp(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.valueOfQueryOnly(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.reflect.Modifier.isVolatile(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Insets.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.nio.DirectShortBufferRS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getSeed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PushbackInputStream.unread(byte[], int, int)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arguments(int, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduce(long, BiFunction, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.getCallSiteTarget(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.tableswitch($i10)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Scrollbar.getMaximumAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.makeNominalGetters(String, LambdaForm.NamedFunction[], MethodHandle[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.dispatchEventImpl(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.nio.file.attribute.FileTime.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.member()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isObjectPublicMethod()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.math.BigDecimal.doRound(long, int, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Currency.getCurrencyCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.currentLoadedClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Rectangle.createUnion(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.FlatteningPathIterator.ensureHoldCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.fork()": {
        "intra_proced": [], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getOutputStream()": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.access$300(ObjectOutputStream, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InternalError"
        ]
    }, 
    "java.awt.Window.access$500(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Reference.enqueue()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.logging.LogManager.findLogger(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.time.Instant.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.text.DecimalFormat.subformat(StringBuffer, Format.FieldDelegate, boolean, boolean, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.IntPipeline.summaryStatistics()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.recursiveShowHeavyweightChildren()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SortedOps.makeInt(AbstractPipeline)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.access$400(String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setOrientation(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.round(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.getNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.setAll(int[], IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.toDays(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.put(CharBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.time.zone.Ser.writeEpochSec(long, DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.inside(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCharacterLevel(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.tableswitch($i0)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.net.URI.hashIgnoringCase(int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.setModifiers(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.write(byte[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.TimeUnit.toMicros(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.pollAndExecAll()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.AWTEvent.setSource(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicType(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.3.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleExtensions.getExtensionValue(Character)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.fieldType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.setGroupingUsed(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.ensureInitialized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.lookupswitch($c1)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.PrivilegedActionException.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.EventQueue.invokeAndWait(Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "InvocationTargetException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Font.getMaxCharBounds(FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isCoalesceEventsOverriden(Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NoSuchMethodException", 
            "AssertionError", 
            "NoSuchMethodException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.removeEQ(Object)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.throwing(String, String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getFocusTraversalCycle(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.font.NumericShaper.access$100(NumericShaper.Range, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Selector.open()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntryTime(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.3.isSupportedBy(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.implConfigureBlocking(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceValues(long, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.clearLightweightDispatcherOnRemove(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.isHidden(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getPCSType(Profile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoUnit.isDateBased()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpEvents(int, Conditional)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.BeanDescriptor.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.enumerate(Thread[], int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createFileDialog(FileDialog)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.canDisplayUpTo(CharacterIterator, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachMappingTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.EnclosingMethodInfo.getEnclosingClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.removePropertyStrings(Provider.Service)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.transferFocusDownCycle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PrimitiveIterator.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isFlavorSerializedObjectType()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.getWaitQueueLength(Condition)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.trimToSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.parse(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodType.changeReturnType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.containsKey(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Color.getRGBColorComponents(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.grow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.lookup(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putCharB(ByteBuffer, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.acquireConstructorAccessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ContainerEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(double, StringBuffer, FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.IntPipeline.boxed()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.PlainSocketImpl.setAddress(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitSelectAlternative(Name, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.activateDeferredProfile()": {
        "intra_proced": [
            "ProfileDataException", 
            "ProfileDataException", 
            "ProfileDataException", 
            "ProfileDataException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.FilterInputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getFirstQueuedThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.IntCumulateTask.compareAndSetPendingCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.assign(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToIntTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.isLoggerImplFrame(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.addPropertyDescriptor(PropertyDescriptor)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.util.logging.LogManager.LoggerContext.getRootLogger()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.storeToXML(OutputStream, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigDecimal.checkScale(long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getBundle(String, ResourceBundle.Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "sun.awt.EventListenerAggregate.getListenersInternal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.fs.DefaultFileTypeDetector.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.getVetoableChangeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isAnyLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableSortedMap(SortedMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.generateNamedFunctionInvoker(MethodTypeForm)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodHandleStatics", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.text.DecimalFormat.getMaximumIntegerDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.asLongBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.replace(CharSequence, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.JobAttributes.setMinPage(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.ValueSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.access$001(JarFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.speciesData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.replaceAll(BiFunction)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.isGeneric()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.put(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "sun.java2d.pipe.RenderingEngine.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.pinDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.AbstractMap.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.compareTo(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getTargetMethodInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.canAccessClipboard()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.getHostName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.isFinite(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getInstance(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.isEqual(OffsetTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.access$800(byte[], int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToDoubleTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.finish(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.balanceInsertion(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeExact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.FormatStyle.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpOneEventForFilters(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SecurityException", 
            "SecurityException", 
            "SecurityException", 
            "SecurityException"
        ]
    }, 
    "java.text.AttributedString.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.declaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.getMinValue(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.sieveSearch(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.ArrayListSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.setErr(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.URLStreamHandler.openConnection(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.init(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.BreakIteratorCache.createBreakInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.convertToOld()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getDialog()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.compare(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashSet.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeShort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.newLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.getThreadGroup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.fullyUnlock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getTypeAnnotationBytes0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getFromPage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.put(Object, Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(LambdaForm, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "InternalError"
        ]
    }, 
    "javax.print.attribute.standard.MediaSize.getY(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.access$100(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.internalNextDouble(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.getProperty(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.toUpperCaseEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.wrapWithPrims(MethodType)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.ReducedPrinterParser.setValue(DateTimeParseContext, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.createAttributedCharacterIterator(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.initSystemFlavorMap()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.compileToBytecode()": {
        "intra_proced": [
            "AssertionError", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "MethodType", 
            "MethodHandleStatics", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.Timer.scheduleAtFixedRate(TimerTask, long, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.ProcessEnvironment.StringEntry.setValue(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterInputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.getX1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.trySplit()": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectDoubleBufferS.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.execute(Runnable)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.time.chrono.ChronoPeriodImpl.monthRange()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.createBufferStrategy(int, BufferCapabilities)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AppContext.getAppContexts()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getGlyphOutline(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharYPosition(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.transferFocusBackward()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.startListeningForOtherDrags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findVirtual(Class, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketPermission.authorized(String, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "UnknownHostException", 
            "UnknownHostException"
        ]
    }, 
    "java.util.zip.Inflater.ensureOpen()": {
        "intra_proced": [
            "AssertionError", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.withConstraint(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getPostscriptName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfLong.emptyConsumer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.asSpreaderChecks(Class, int)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLine.draw(Graphics2D, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterName.initNamePool()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "EOFException", 
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.text.NumberFormat.Field.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.getTimeout()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getGenericInterfaces()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.fastCreateTextLine(FontRenderContext, char[], Font, sun.font.CoreMetrics, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.Raster.getDataElements(int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.flush(CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.text.DecimalFormatSymbols.getPatternSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.extract(VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setOpacity(Window, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.geom.RoundRectangle2D.getArcHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SimpleMethodHandle.copyWith(MethodType, LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.EntrySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.ensureInitialized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getGreatestMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.TextLabelFactory.createExtended(Font, sun.font.CoreMetrics, sun.font.Decoration, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.forEach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.getLength(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getMaximumCursorColors()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.Random.setSeed(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToDoubleTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.JRootPane.setOpaque(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.auditSubclass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFatalException()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.parseExp(char[], int, int)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.shutdownOutput()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.nextClearBit(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureClassLoader.check()": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretInfo(TextHitInfo, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.DataBufferInt.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.invokeAll(Collection, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AbstractMethodError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.text.SimpleDateFormat.compile(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.flattenLong(OfLong)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.access$200(HttpConnectSocketImpl, String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.io.ObjectInputStream.GetField.get(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getParent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.matchRef(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.update(long, int[], int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.tryLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.dateNow(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Window.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputMethodEvent.getMostRecentEventTimeForSource(Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.coerceData(WritableRaster, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.atOffset(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getDataElements(int[], int, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.removeTextListener(TextListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.validate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.supportsKeyClass(Key)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.isReadOnly()": {
        "intra_proced": [
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.applet.Applet.getAudioClip(URL, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.asSpecial()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsGetter(byte)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.minusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.dateNow(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.ZonedDateTime.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.image.Raster.getDataElements(int, int, int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.LightweightDispatcher.trackDropTargetEnterExit(Component, MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.math.BigDecimal.compactValFor(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getActionCommandImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.RGBImageFilter.setPixels(int, int, int, int, ColorModel, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getSamples(int, int, int, int, int, double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.IndexColorModel.getTransparentPixel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.implCloseChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Short.shortValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.primitiveType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.initCursorDir()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getTransferable()": {
        "intra_proced": [
            "InvalidDnDOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.System.getRawExecutableTypeAnnotations(Executable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.areBoundsValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.getSuppressed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.ASCII.toUpper(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.apply(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.newFileSystem(URI, Map, ClassLoader)": {
        "intra_proced": [
            "ProviderNotFoundException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Error"
        ]
    }, 
    "java.util.Formatter.Flags.dup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.clone()": {
        "intra_proced": [
            "CloneNotSupportedException", 
            "CloneNotSupportedException"
        ], 
        "inter_proced": [
            "CloneNotSupportedException"
        ]
    }, 
    "java.text.DecimalFormat.getCurrency()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.geom.Path2D.append(Shape, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.hasWaiters(AbstractQueuedSynchronizer.ConditionObject)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.compareTo(LongBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.stream(Spliterator, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(short[], int, int, short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedCharacterIterator.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getFrame()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.finer(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.printHeavyweightComponents(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.StringJoiner.setEmptyValue(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.makeSpliterator(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.write(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachEntryTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.isUnresolved()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilderFactory.setValidating(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.getDomainCombiner()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.Class.getClasses()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Object.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.EntrySet.deepCopy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.prevEntry()": {
        "intra_proced": [
            "NoSuchElementException", 
            "ConcurrentModificationException", 
            "NoSuchElementException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$500(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.fromMethodDescriptorString(String, ClassLoader)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics"
        ]
    }, 
    "java.net.DatagramSocketImpl.getOption(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.tailMap(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.enableInputMethodsIfNecessary()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.nio.file.FileTreeWalker.next()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.EventQueue.access$000(EventQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getVetoableChangeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.spliterator()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.getBankIndices()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.setValue(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.acceptDrag(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.BeanDescriptor.setName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.AccumulatingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.isLeapYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.resolveOrFail(byte, MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.of(Transform.Kind, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.addArguments(int, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.hash(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getSampleFloat(int, int, int, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.preferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.offerLast(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsSetter(byte)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.CharArrayWriter.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.concat(LongStream, LongStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.setComposite(Composite)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.scale(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.arrayForEach(int[], int, int, IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getAlpha(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(TemporalAccessor, char, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.checkForComodification()": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.flushPendingEvents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.impliedRestargType(MethodType, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.setReadOnly(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.Bits.putDoubleL(long, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.fire(PropertyChangeListener[], PropertyChangeEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.setColor(Entry, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRound(long, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.ComponentOrientation.getOrientation(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.getDateTimeInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodType.leadingReferenceParameter()": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.toCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocus(sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractQueue.addAll(Collection)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "sun.awt.EventListenerAggregate.add(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getAllGenericParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException"
        ]
    }, 
    "java.math.BigDecimal.subtract(BigDecimal, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.beans.PropertyDescriptor.createPropertyEditor(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalAccessException", 
            "NoSuchMethodException"
        ]
    }, 
    "java.util.TreeMap.descendingMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.info(String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.bitsArrayHelper(int[], int, ColorSpace, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.tooComplex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.parse(DateTimeParseContext, CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.canBeFocusOwnerRecursively()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MemberName.isAbstract()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.ConstantCallSite.dynamicInvoker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayCountry()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.CharSequence.nextInt()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.List.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.newIllegalArgumentException(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.insert(String, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.getRGB(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.awt.EventQueueDelegate.getDelegate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getBlue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.isAlphaPremultiplied()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.hasLightweightDescendants()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.access$000(SocksSocketImpl, String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.pollAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionCollection.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.getNumberOfButtons()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.CalendarDataUtility.retrieveFirstDayOfWeek(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.initIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.processDragExit(DragSourceEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.annotation.RetentionPolicy.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.isInvokeBasic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getPrinter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(Object[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.paint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireShared(int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getGreens(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.constant(Class, Object)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.beans.FeatureDescriptor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.typeChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.getManifestDigests(JarFile)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException"
        ]
    }, 
    "java.util.regex.Matcher.start()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.grow(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implReplace(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getRGB(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getPercentInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.text.spi.BreakIteratorProvider.getCharacterInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.processAdjustmentEvent(AdjustmentEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntStream.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.inheritedChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getImplMethodSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.VerifyAccess.isSamePackageMember(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.StringDecoder.charsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.Month.firstDayOfYear(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseLenient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putShortL(long, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.replaceCurrencyData(Pattern, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.invoke.MemberName.isInvocable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.makeDouble(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.node(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(byte[], int, int, byte)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.security.SecureRandom.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectLongBufferS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.put(ShortBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.lastInMonth(DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.beans.PropertyChangeEvent.getNewValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.appendCodePoint(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "OutOfMemoryError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.StringBuilder.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.getOwnerlessWindows()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.getSiblingIndexBelow()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.awt.Component.requestFocusHelper(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i25)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.CalendarDate.getZoneOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.peekFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.processCurrentLightweightRequests()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.ValueConversions.widenSubword(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.check(BigDecimal)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.complement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.lookupswitch(c14)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Component.setVisible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parse(CharSequence, TemporalQuery)": {
        "intra_proced": [
            "DateTimeFormatter"
        ], 
        "inter_proced": [
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.awt.im.InputContext.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelPrefix(double[], DoubleBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AnnotatedElement.isAnnotationPresent(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.copyAsPrimitiveArray(sun.invoke.util.Wrapper, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.Format.createAttributedCharacterIterator(String, AttributedCharacterIterator.Attribute, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.XmlSupport.mportPrefs(Preferences, org.w3c.dom.Element)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.OfLong.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readUnsignedShort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "HeadlessException"
        ]
    }, 
    "java.nio.channels.Channels.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.readResolve()": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.reject(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.copyInto(Object, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.match(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.FieldReflector.setObjFieldValues(Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.2Adapter.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Timer.schedule(TimerTask, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.Component.requestFocusHelper(boolean, boolean, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.Dialog.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoUnit.isTimeBased()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.getEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.equals(short[], short[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getMethodOrFieldType()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "sun.nio.cs.StreamEncoder.getEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Stream.concat(Stream, Stream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.bigMultiplyPowerTen(long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.OffsetTime.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.getValue(Attributes.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.fillInStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.doAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.nodeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getNano()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachMappingTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getBigIntegerMultiplier()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BufferCapabilities.isPageFlipping()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.enqueuePreferenceChangeEvent(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getMaxCharBounds(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.remove(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isModalExcluded(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.FocusEvent.getOppositeComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.parseObject(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.stopOrSuspend(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.System.setOut0(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divWord(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.hasMoreSpecificClass(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.logp(Level, String, String, String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.defineClass1(String, byte[], int, int, ProtectionDomain, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.waitForAll(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.activate()": {
        "intra_proced": [], 
        "inter_proced": [
            "ProfileDataException", 
            "ProfileDataException", 
            "ProfileDataException", 
            "ProfileDataException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.WritableRaster.setPixels(int, int, int, int, double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.normalizedHash(int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.firstKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.setPosixFilePermissions(Path, Set)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.acquirePermit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.reducing(Object, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.getLimits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.nextDouble()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.set(File, OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ProxySelector.connectFailed(URI, SocketAddress, IOException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.engineGetDigestLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.remove(DragSourceListener, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.wakeup(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.set(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.getMembers(Class, String, Object, int, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.lookUpTable(String, int, Locale, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Frame.setResizable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermissionCollection.add(Permission)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.inverseTransform(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.interruptIdleWorkers(boolean)": {
        "intra_proced": [
            "Worker", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.Socket.createImpl(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divWord(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.checkGD(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getViewportSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseException.getErrorIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.removeDropTargetListener(DropTargetListener)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.NativeLibrary.load(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isConditionMet(String, int, Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.pop()": {
        "intra_proced": [], 
        "inter_proced": [
            "EmptyStackException"
        ]
    }, 
    "java.util.IllegalFormatFlagsException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindHasReceiver(byte)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.centerVertically(GridBagConstraints, Rectangle, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Label.setAlignment(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.exec()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.hasListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getPixel(int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getSoftReference(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getStart(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar$Date, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferUShort.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isOtherLowercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.getLocalResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.ConcatSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getMonths()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.getElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.registerSubclass(Class)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ClassCastException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.CharBuffer.hasRemaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.List.getAccessibleChild(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.reset()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.checkName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.toHexString(float)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.regex.Matcher.usePattern(Pattern)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.poll(long, TimeUnit)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.awt.EventQueue.peekEvent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getWeakReference(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.isOrdered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.createAndStripZerosToMatchScale(BigInteger, int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.security.Security.getImpl(String, String, Provider)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.Component.getLocationOnWindow()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.prefs.Preferences.node(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.startDrag(Cursor, Image, Point, Transferable, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer"
        ]
    }, 
    "java.util.MissingFormatArgumentException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.getFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.insertArgumentPrimitive(BoundMethodHandle, int, Class, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.getResource(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getCtrlY1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getOffset(Instant)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.getHWPeerAboveMe()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Graphics2D.setTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.contentEquals(StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.lookupswitch($c1)": {
        "intra_proced": [
            "IllegalFormatFlagsException", 
            "MissingFormatWidthException", 
            "IllegalFormatWidthException", 
            "IllegalFormatFlagsException", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.filterArgument(MethodHandle, int, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "NullPointerException", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.StrictMath.subtractExact(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.relativeCCW(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.getChild(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.LinkedHashSet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.assign(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getParameterAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.visit(Path, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.time.OffsetTime.toEpochNano()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.www.URLConnection.isProxiedHost(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.resolveInstantFields0(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.ReduceOps.10ReducingSink.combine(10ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Iterable.forEach(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferByte.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.compute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getKeyCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.toMap(Function, Function, BinaryOperator, Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.DatagramChannel.read(ByteBuffer[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.classValueOrNull()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.reverseRange(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.treeifyBin(ConcurrentHashMap.Node[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getInstance(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.LocaleNameProvider.getDisplayScript(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceEntriesTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.tryLock(long, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.UnknownFormatConversionException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.awt.GraphicsEnvironment.getHeadlessProperty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.removeEventFilter(EventFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.UnmodifiableNavigableSet.descendingSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.minusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOp.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getLocalSocketAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Button.getActionCommand()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.get(char[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.getSubjectDN()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashSet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.getSystemEventQueueImplPP(sun.awt.AppContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpEventsForHierarchy(Conditional, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkAccess(Thread)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Toolkit.getPropertyChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.count()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.typeCheck(Object)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.ofHoursMinutesSeconds(int, int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.PageAttributes.setOrientationRequestedToDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.FlatteningPathIterator.getFlatness()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.appendContents(StringBuffer, CharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.io.PrintStream.println(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.io.ObjectInputStream.readBoolean()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readUnsignedByte()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.3ReducingSink.combine(3ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.countComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.text.SimpleDateFormat.formatToCharacterIterator(Object)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.argument(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageMediaEntry.matches(Image, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.shutdownOutput()": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.text.DecimalFormat.appendSuffix(char[], int, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.getShaper(NumericShaper.Range)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.net.URI.Parser.scanByte(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getImageableX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getNativesForFlavors(DataFlavor[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ImageFilter.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.getScript()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.minusHours(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getAttributes()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.ProcessBuilder.redirectError(Redirect)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getCenterY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.contains(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.interpretWithArguments(Object[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "LambdaForm", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Spliterators.spliterator(OfInt, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashSet.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkWrite(FileDescriptor)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.ClassLoader.register(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.resize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getVisibleAmount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.connectOwnedWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.lookupswitch(i2)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Integer.parseInt(String, int)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarVerifier.signerMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.removeContainerListener(ContainerListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.hasHeavyweightDescendants()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getBaseName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.AWTEventListenerProxy.getListener()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.SubList.remove(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.blockedOn(Thread, sun.nio.ch.Interruptible)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getAnnotatedType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setContextClassLoader(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.SimpleTimeZone.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.convertToIntDiscrete(Raster, boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.PrintStream.requireNonNull(Object, String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.time.format.DateTimeFormatter.format(Object, StringBuffer, FieldPosition)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.Math.atan2(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AppContext.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getDefaultComponent(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.Collectors.joining(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EntrySet.fillEntryArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getComponentOrientation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.create(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.compareTo(Float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.truncate(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.getResource(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.element()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GradientPaint.getTransparency()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.CaseInsensitiveComparator.compare(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getWeekNumber(long, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getLineMetrics(CharacterIterator, int, int, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getAscent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getSigners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.isEqual(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.forDigit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.mergeHi(int, int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.lengthOfYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.DataOutputStream.writeBoolean(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getString(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "sun.nio.cs.StreamEncoder.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDropTargetEvent.isConsumed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.componentHidden(ComponentEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.setRoundingMode(RoundingMode)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getNode(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.isValidToken(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.forEachRemaining(IntConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getGreen(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.tableswitch($i14)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasReadObjectMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.inRange(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.beans.PropertyDescriptor.setName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.BandedSampleModel.getSampleDouble(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.eraOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getMinY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Collator.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.time.format.SignStyle.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.asCollector(Class, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "ClassCastException", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.awt.Graphics.clipRect(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getIP()": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.DirectColorModel.tableswitch($i0)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.Channels.WritableByteChannelImpl.end(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.toCharset(String)": {
        "intra_proced": [
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.font.TextLayout.hitToPoint(TextHitInfo, Point2D)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.findIndexedPropertyType(Method, Method)": {
        "intra_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.initFocusTraversalKeysSet(String, Set)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NoSuchFieldException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuffer.expandCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStreamWriter.flushBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getAlpha(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ResourceManager.afterUdpClose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getSampleModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getIDstring()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.getRootGroup()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarVerifier.update(int, sun.security.util.ManifestEntryVerifier)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.findSpecial(Class, String, MethodType, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.setLastModified(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.FindOps.makeInt(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.parseShort(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleStatics.newIllegalArgumentException(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.saveInternal(ObjectOutputStream, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.time.OffsetTime.withHour(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.GregorianCalendar.monthLength(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.scanEscape(int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.doLayout()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.UnsafeHolder.putMag(BigInteger, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.handleParameterNumberMismatch(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.isUntrusted()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.ScrollPane.remove(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isInstanceOf(Object, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.notifyAWTEventListeners(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.defRange(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.isMixed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.put(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.getTransformType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicIterator.currentSegment(double[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.isRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.makeEntry(Version, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontDesignMetrics.getMetrics(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.searchFields(Field[], String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkDelete(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.security.Provider.Service.addAttribute(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setFocusTraversalKeys(int, Set)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(char[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.BltBufferStrategy.createBackBuffers(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachEntryTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newChannel(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.removeFocusListener(FocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.interruptIfStarted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.ConcurrentWeakInternSet.expungeStaleElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.removeImage(Image, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.BreakIteratorProvider.getSentenceInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectableChannel.register(Selector, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.checkDeserialize()": {
        "intra_proced": [
            "ExceptionInfo"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getOutline(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.connect(SocketAddress, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "SocketException", 
            "SocketException", 
            "AssertionError", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SocketException", 
            "AssertionError", 
            "SocketException", 
            "SocketException", 
            "NullPointerException", 
            "NullPointerException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Polygon.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(double[], double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.dispatchEventImpl(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.image.BufferedImage.isStandard(ColorModel, WritableRaster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.getPathIterator(AffineTransform, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.getAndSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectMethod(byte, Class, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.offset(Clock, Duration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getAvailableIDs(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.getLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.awt.font.TextLine.expandArray(sun.font.TextLineComponent[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.mapSignersToCodeSources(URL, List, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.read1(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isMoreAbove(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ShortBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.fullFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.setFile(FileDialog, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.processContainerEvent(ContainerEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getCodeSources(URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Object.getClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.deriveFont(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectLongBufferRS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summarizingDouble$178(ToDoubleFunction, DoubleSummaryStatistics, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontUtilities.isComplexText(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.nextUp(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.lambda$dayOfWeekInMonth$52(int, int, Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.charWidth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.isStandaloneStyle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createBackBuffers(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.nextIndex()": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.createNewFile()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.MenuComponent.getAccessibleIndexInParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.isOpen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.writeObject(ObjectOutputStream)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.nio.HeapCharBufferR.subSequence(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.absLower(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.toString(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.isClosedOrPending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.3Adapter.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedCollection.badElementMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.getExponent(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.node(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isDisplayable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getPreciseWheelRotation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setSample(int, int, int, float, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Locale.isUnicodeExtensionKey(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphJustificationInfo.priorityIsValid(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.evaluate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toBigInteger()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.SampleModel.setSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getObjectLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "Error", 
            "Error", 
            "Error", 
            "NullPointerException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.time.OffsetDateTime.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.findResources(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.OptionalInt.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.toLocalDateTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.reduce(Object, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferRB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isLinkLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.compareMethods(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.lockRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.tableswitch($i1)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.onMalformedInput(CodingErrorAction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.forEachOrdered(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Package.isSealed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.parseServerAuthority()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.LongPipeline.average()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.TreeMap.rightOf(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.publicLookup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.setWeight(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.mergeLo(int, int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.Clock.tickSeconds(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.Math.pow(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.AreaAveragingScaleFilter.setHints(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.lowMask(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.tableswitch($b1)": {
        "intra_proced": [
            "InternalError", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.copyWithExtendD(MethodType, LambdaForm, double)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.print.PrinterJob.getPrinterJob()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Locale.setDefault(Category, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getNormalizedOffsets(float[], byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putBoolean(Object, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.closeLoaders()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getCalendarDate(long, sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getKeyText(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putDoubleB(long, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.isReadable(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.complete(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.time.temporal.TemporalField.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.UnicodeProp.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.remove(KeyListener, KeyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readInt()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.getRunStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch(i1)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.preConcatenate(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.nextPutIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicType(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToIntTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.eventTypeEnabled(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.MenuItem.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.text.SimpleDateFormat.checkNegativeNumberExpression()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.invoke.MethodType.genericMethodType(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.time.Period.between(LocalDate, LocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.LongSummaryStatistics.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(long, StringBuffer, FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(int, long)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.closeEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFloats(float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.math.BigDecimal.intValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.reflect.Parameter.isImplicit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.format(Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "Pattern", 
            "Pattern", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.put(String, int, int)": {
        "intra_proced": [
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.next()": {
        "intra_proced": [
            "NoSuchElementException", 
            "ConcurrentModificationException", 
            "NoSuchElementException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableList(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.printHeavyweightComponents(Graphics)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.time.format.DateTimeFormatter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.copySign(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.setSelectionStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.doubles(double, double)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.SubList.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.WindowDisposerRecord.updateOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getFloat(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.newPixels(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.isSupported(Action)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.reducePermits(int)": {
        "intra_proced": [
            "Error", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getRemoteSocketAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.retainAll(Collection)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Permission.getActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.SubList.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getShort(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.entryDislocation(ClassValue.Entry[], int, ClassValue.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeGuardWithTest(MethodHandle, MethodHandle, MethodHandle)": {
        "intra_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodType", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.geom.RoundRectangle2D.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.getData(DataFlavor)": {
        "intra_proced": [
            "NullPointerException", 
            "UnsupportedFlavorException"
        ], 
        "inter_proced": []
    }, 
    "java.net.Socket.setSoTimeout(int)": {
        "intra_proced": [
            "SocketException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.Class.casAnnotationType(Class, sun.reflect.annotation.AnnotationType, sun.reflect.annotation.AnnotationType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.getTracker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.localizedMagnitude(StringBuilder, long, Flags, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.initialValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.BidiUtils.createInverseMap(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.access$201(ScheduledThreadPoolExecutor.ScheduledFutureTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getWindowListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.PrintStream.print(float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.awt.geom.QuadCurve2D.setCurve(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.CheckboxMenuItem.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.compareTo(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Properties.writeComments(BufferedWriter, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exit(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.font.FontRenderContext.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.contains(PathIterator, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setVisible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getLeading()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.PortConfig.getLower()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.peek()": {
        "intra_proced": [
            "EmptyStackException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Color.getHSBColor(float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Properties.store(Writer, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.temporal.WeekFields.of(DayOfWeek, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.internalWriteEntries(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.nio.IntBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.createCompatibleSampleModel(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.getRawSchemeSpecificPart()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.MenuItem.disable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isSupplementaryCodePoint(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.loadClass(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassNotFoundException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.range(ChronoField)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "PrivilegedActionException"
        ]
    }, 
    "java.io.FileInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.List.isSelected(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StackTraceElement.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.put(ByteBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.util.Collections.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divideKnuth(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Arrays.copyOf(Object[], int, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.signalAll()": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.getListenerCount(EventListener, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isNative()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getDouble()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.get(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAccessor.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setMenuBar(MenuBar)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "sun.security.jca.GetInstance.getInstance(String, Class, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(LambdaForm.BasicType, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "java.awt.dnd.DropTarget.DropTargetAutoScroller.updateRegion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setByte(Object, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.isValidYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.invokeWriteObject(Object, ObjectOutputStream)": {
        "intra_proced": [
            "InternalError", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.image.BufferedImage.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextArea.preferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.clear()": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Menu.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.getFloatB(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.dnd.DropTarget.dragEnter(DropTargetDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.add(AdjustmentListener, AdjustmentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedValueTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.checkImage(Image, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachKeyTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.setElemDouble(int, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.access$000(UNIXProcess.DeferredCloseInputStream, InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(char[], int, int, char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Period.ofWeeks(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.isZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.longCompareMagnitude(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToIntTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.TreeMapSpliterator.getEstimate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.annotateProxyClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getJulianCalendarSystem()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.childrenNames()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "sun.java2d.Disposer.addRecord(Object, DisposerRecord)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.floorMod(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "sun.util.calendar.CalendarDate.setYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getEntry(String, KeyStore.ProtectionParameter)": {
        "intra_proced": [
            "NullPointerException", 
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permission.checkGuard(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.List.AccessibleAWTList.getAccessibleSelectionCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getGray8TosRGB8LUT(ICC_ColorSpace)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.localizedWeekOfYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Field.setShort(Object, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ReplicateScaleFilter.setPixels(int, int, int, int, ColorModel, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.FieldRepository.getGenericType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.setSocket(Socket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.setScrollPosition(int, int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.runTask(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getClipBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.of(int, int, int, int, int, int, int, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.startDrag(DragGestureEvent, Cursor, Transferable, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.WindowEvent.setSource(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.initStatics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getNumBands()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.transferFocusBackward(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.rotate(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PeerPrintCallback.runOneComponent(Component, Rectangle, Graphics, Shape, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkMemberAccess(Class, int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.BorderLayout.removeLayoutComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.headSet(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.access$400(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRound(BigInteger, BigInteger, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "javax.accessibility.AccessibleStateSet.add(AccessibleState)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.consume()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.isEqual(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.dateEpochDay(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.readBytes(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.calculateBounds(int[], int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.ScrollPane.doLayout()": {
        "intra_proced": [], 
        "inter_proced": [
            "Component", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "javax.accessibility.AccessibleContext.getAccessibleSelection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.insertExpression(int, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.enqueueKeyEvents(long, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.makeInt(IntConsumer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.isSymbolicLink(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ExecutorCompletionService.newTaskFor(Callable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.openServerSocketChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.balanceInsertion(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.plus(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.FastInputStream.fill()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int, long)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "InterruptedException"
        ]
    }, 
    "java.awt.List.getForeground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.newDecoder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toCompactValue(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "sun.misc.Unsafe.getChar(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.standardEncodings()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.doExec()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "sun.misc.FloatingDecimal.parseFloat(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.codePointBefore(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readUTFBody(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.getLast()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getRotateInstance(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeShort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayReader.read(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(Class, int, Class, String, Object)": {
        "intra_proced": [
            "AssertionError", 
            "MethodHandleNatives", 
            "MethodHandleNatives", 
            "MethodHandleNatives", 
            "MethodHandleNatives"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.checkRef(Class, Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.getWaitQueueLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.codePointCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Currency.lookupswitch(i0)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ClassLoader.checkCreateClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.fullGetFirstQueuedThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.revealDirect(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.inverseMod32(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.1.range()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.stream()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Graphics.drawChars(char[], int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.groupname(int)": {
        "intra_proced": [
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Graphics2D.getTransform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEach(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.insert(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.lang.reflect.Method.invoke(Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionCollection.add(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getGreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.add(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.setTimeToLive(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Clock.instant()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Hashtable.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getResources(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.toUnsignedInt(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.checkOldImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.list(Enumeration)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.beans.PropertyDescriptor.appendTo(StringBuilder, String, Reference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.awaitFulfill(TransferStack.SNode, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.unsafe()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getSelectionStart()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToDoubleTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.unwrapWithNoPrims(MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.loadClass(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassNotFoundException"
        ]
    }, 
    "java.util.Arrays.equals(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.access$300(EventQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getRGBs(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arguments(int, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.setFrameFromCenter(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.InvocationTargetException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.of(LocalDate, LocalTime, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.CharArrayWriter.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.Writer.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.setLabel(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.secondsUntil(Instant)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.notifyModalityPushed(Dialog)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.getSampleSize(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.SNode.tryMatch(SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.getLayoutInfo(Container, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.contains(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Ser.writeInternal(byte, Object, ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.drainTo(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ReentrantLock"
        ]
    }, 
    "java.lang.reflect.Parameter.getDeclaredAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.list(PrintWriter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.ordinal(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putDouble(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBufferSpliterator.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.DoubleSummaryStatistics.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.lang.ClassLoader.isAncestor(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setMaximumSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collector.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.checkValidValue(long, TemporalField)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.get(byte[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.text.ParsePosition.getIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getComponentAt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.replaceAll(BiFunction)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PrintHeavyweightComponentsCallback.runComponents(Component[], Graphics, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.findAny()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.negate(MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "sun.util.locale.provider.LocaleServiceProviderPool.getPool(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.setTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.createAttributedCharacterIterator(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getProtectionDomain0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.doubles()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.receive(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getFontMetrics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.DeferredCloseProcessPipeInputStream.processExited()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InvalidObjectException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.createDirectory(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.lostFocus(Event, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.createFileExclusively(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.access$300(Object[], Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.parse(Class, URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "ServiceConfigurationError", 
            "UnknownServiceException", 
            "ServiceConfigurationError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.getStealCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedKeyTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.access$100(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getenv()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.Traverser.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.load(Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getBeforeIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.cmm.ProfileDataVerifier.verify(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.isSupplementary(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.ThreadGroup.resume()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.setGlobalFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.GetInstance.getInstance(String, Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.getAverage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.list()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.DatagramChannel.open()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$averagingDouble$145(ToDoubleFunction, double[], Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.getCodeSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.subFloor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lambda$initStreams$267()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.mod(BigInteger)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getComponentIndex(List, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.write(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.asPrimitiveArray()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.getTriggerEvent()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.OptionalLong.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.awt.Window.toBack()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.List.preferredSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.getText()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.tableswitch(b0)": {
        "intra_proced": [
            "InternalError", 
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.SignedMutableBigInteger.leftShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.parse(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.renameParameter(int, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getExclusiveQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Font.initFromValues(sun.font.AttributeValues)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.decodeDataFlavor(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.setIndexedReadMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.net.DatagramSocketImpl.peek(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.memberDeclaringClassOrNull()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.ConcatSpliterator.OfPrimitive.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.tableswitch($i1)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.math.BigDecimal.divideAndRound(BigInteger, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.memberDeclaringClassOrNull()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.resolvePath(String, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.Instant.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "sun.awt.geom.Curve.rectCrossingsForCubic(int, double, double, double, double, double, double, double, double, double, double, double, double, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getBoundsOp()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getByIndex0(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Enum.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withResolverFields(TemporalField[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getSiblingIndexAbove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.awt.EventDispatchThread.getUncaughtExceptionHandler()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.withDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.DatagramSocket.createImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Integer.getInteger(String, Integer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.getFontMetrics(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getPeer()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.nio.StringCharBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.cancelAcquire(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Version.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.insert(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.tableswitch($i4)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.digit(char, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.JarEntryIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DropTarget.DropTargetAutoScroller.stop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.updateChildrenBlocking()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.getQueuedTaskCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.getUTFLength(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.advanceHead(QNode, QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceEntriesToInt(long, ToIntFunction, int, IntBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.setValue(Object)": {
        "intra_proced": [
            "NullPointerException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferRL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.bitsHelper(int, ColorSpace, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.createSubsetSampleModel(int[])": {
        "intra_proced": [
            "RasterFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferRL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.inwards(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.access$700(byte[], int, float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.setPort(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodTypeForm.primitiveParameterCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.parameterType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.allowArraySyntax()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendZoneText(TextStyle, Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.compareTo(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.12ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractQueue.remove()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.singletonIterator(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.specificToGenericStringHeader(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.indexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.hasNext()": {
        "intra_proced": [
            "UncheckedIOException"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.math.SignedMutableBigInteger.signedSubtract(SignedMutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.ofDays(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.isLive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeFillArrays()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.stream.Nodes.asPrimitiveArray()": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.listRoots()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Point.move(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.FastInputStream.readLine(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.resolve(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.failExpecting(String, String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.System.currentTimeMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.checkActionSupport(Desktop.Action)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.addAll(Collection, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.checkNotAWindow(Component)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.make(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.System.console()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isFocusCycleRoot(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getBundleImpl(String, Locale, ClassLoader, ResourceBundle.Control)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.util.Vector.removeAllElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.readExternal(DataInput)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeOrdinaryObject(Object, ObjectStreamClass, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ExceptionInfo", 
            "InvalidClassException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MemberName.message()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.tryTerminate()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.TextComponent.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStreamReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getLoopbackAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.newFileSystem(URI, Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "ProviderNotFoundException", 
            "Error"
        ]
    }, 
    "java.awt.Font.getFont2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.setAttributes(Map, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Thread.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.withZoneSameLocal(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.getPoolIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.isAutoFocusTransferEnabledFor(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.copyConstructor(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readBoolean()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.setExpirationTime(CacheKey, Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDate.isSupported(TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitIntInsn(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.baseIsLeftToRight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.replaceAll(UnaryOperator)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.layoutContainer(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLayout.getNextLeftHit(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectByteBuffer.asFloatBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.io.ObjectStreamClass.access$2200(Class, String, Class[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.valueConversion(Class, Class, boolean, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.text.MessageFormat.copyAndFixQuotes(String, int, int, StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.Attributes.write(DataOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.balanceInsertion(ConcurrentHashMap.TreeNode, ConcurrentHashMap.TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.WrappingSpliterator.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.FlipBufferStrategy.revalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.getChars(int, int, char[], int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.newNode(String, String, PrefixTree)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.putInCache(LambdaFormEditor.Transform, LambdaForm)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.math.BigDecimal.tableswitch(i51)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.datatransfer.SystemFlavorMap.addUnencodedNativeForFlavor(DataFlavor, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getBytes()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "Error", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Short.compareTo(Short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.ValueConversions.ignore()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.thenComparingInt(ToIntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectInputStream.readUTFSpan(StringBuilder, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newBufferedWriter(Path, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.math.BigDecimal.longDigitLength(long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.setCaretPosition(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.normalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.defineString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.misc.Resource.getBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setOrientationRequested(OrientationRequestedType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.create(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getImageJarName(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.computeFields()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.font.TextLine.logicalToVisual(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(float[], int, int, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.privateGetPublicFields(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayNames(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.connect(SocketAddress)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException"
        ]
    }, 
    "java.text.SimpleDateFormat.applyLocalizedPattern(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.Traverser.recoverState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.reflectAs(Class, MethodHandles.Lookup)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "InternalError", 
            "ClassCastException"
        ]
    }, 
    "java.math.BigInteger.compareMagnitude(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getDefaultControl(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Curly.match0(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.precision(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isMCLinkLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontResolver.nextFontRunIndex(sun.text.CodePointIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.currentSegment(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilderFactory.setCoalescing(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.applyPattern(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getBaselineTransform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.isBasicTypeChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.unblockWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readLongs(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Parameter.getAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.typeCheck(Enum)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.add(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.isTerminated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileLock.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getGlobalFocusedWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.intersects(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.max(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.VKCollection.put(String, Integer)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.canonicalize(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeParseContext.isCaseSensitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.isWindowOpacitySupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Graphics2D.setPaint(Paint)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getCurrentFocusCycleRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.current()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferByte.getBankData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getComponentType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJFloat.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.preferredLayoutSize(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "InternalError"
        ]
    }, 
    "java.time.LocalTime.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.awt.GradientPaintContext.getCachedRaster(ColorModel, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ProcessEnvironment.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.makeExactOrGeneralInvoker(boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.nio.file.Files.walk(Path, int, FileVisitOption[])": {
        "intra_proced": [
            "FileTreeIterator"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Window.setVisible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.WeakCache.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.getProperties(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.2.range()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.put(String, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.getInstance(String, Policy.Parameters, String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.file.Files.write(Path, byte[], OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.AbstractList.remove(int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCRLs(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.getAccessibleParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.getAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AllPermissionCollection.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getComponentSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.toResourceName(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GridBagLayout.rrangeGrid(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.shouldBlock(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.millis()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.CallSite.tableswitch($i0)": {
        "intra_proced": [
            "BootstrapMethodError", 
            "ClassCastException", 
            "CallSite"
        ], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType", 
            "MethodType", 
            "MethodType", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.math.MutableBigInteger.add(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.preDefineClass(String, ProtectionDomain)": {
        "intra_proced": [
            "NoClassDefFoundError", 
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "SecurityException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.markClearGlobalFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.nio.charset.CharsetDecoder.decode(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.nio.DirectByteBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.entryHashCode(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.IOError.addSuppressed(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.Key.getIdentity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.poll(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.min(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setOrigin(OriginType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.getSubSequence(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setTrafficClass(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "sun.java2d.StateTrackableDelegate.setUntrackable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setSoLinger(boolean, int)": {
        "intra_proced": [
            "SocketException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InterfaceAddress.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.checkCast(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.Bits.int1(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.OfDouble.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.read(ByteBuffer[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.asDoubleBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.BaseSpliterator.newSpliterator(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Resource.getURL()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getConstantPool(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.wrap(short[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.leftShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.socketRead0(FileDescriptor, byte[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getByName(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.config(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.renderable.RenderContext.preConcatenateTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.getOption(SocketOption)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.tableswitch($i13)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.getEffectiveLoggerBundle()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.nio.HeapCharBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.removeNode2()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.awt.Container.adjustListeningChildren(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getCountry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.isEqual(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.access$200(CoderResult.Cache, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextJustifier.justify(float)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.isFulfilling(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.getShort(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.newThread(ForkJoinPool)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.lookupswitch(i0)": {
        "intra_proced": [
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.offer(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.checkCallerClass(Class, Class)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MediaTracker.checkAll(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.String.equalsIgnoreCase(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.compareTo(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.asCollector(Class, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "ClassCastException", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "MethodHandleStatics", 
            "ClassCastException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType"
        ]
    }, 
    "java.lang.invoke.LambdaForm.prepare()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.security.Provider.access$900(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractMap.eq(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.updateInternalBuffers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.isIdentity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.isAfter(ChronoZonedDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.TreeMap.DescendingSubMap.absHigher(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setUndecorated(boolean)": {
        "intra_proced": [
            "IllegalComponentStateException", 
            "IllegalComponentStateException", 
            "IllegalComponentStateException", 
            "IllegalComponentStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.getParentFile()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PropertyPermissionCollection.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.add(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.List.processActionEvent(ActionEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.compareTo(CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.get(int[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.basicInvoker(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.Container.createBufferStrategy(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.wakeupEDT()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipFile.ZipFileInputStream.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.validate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.size(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.make(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "InternalError", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.Rectangle.setSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.lookupswitch(b1)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "sun.security.jca.JCAUtil.getTempArraySize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.copyInto(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.bounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getFieldName(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.index()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.factory()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.HashMap.find(int, Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.subtract(int[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.PutField.put(String, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.study(Pattern.TreeInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.read(byte[])": {
        "intra_proced": [
            "DeferredCloseInputStream", 
            "DeferredCloseProcessPipeInputStream"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.tableswitch($i3)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodType", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.Container.getAccessibleChildrenCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getKeepAliveTime(TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "java.time.format.Parsed.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mouseDown(Event, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.access$400(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.setCorePoolSize(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "Worker", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.getTable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.ofInstant(LocalDateTime, ZoneOffset, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ClassLoader.NativeLibrary.findBuiltinLib(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.Component.getInputContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.peek()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.FairSync.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getAllValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.setExpirationTime(ResourceBundle.CacheKey, ResourceBundle.Control)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.getAccessor(Class, boolean)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.retainAll(Collection)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.open(Path, Set, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Timer.scheduleAtFixedRate(TimerTask, Date, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.Class.EnclosingMethodInfo.isMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.defineAnonymousClass(Class, byte[], Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.lookupswitch($c3)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MissingResourceException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentType(BoundMethodHandle, int, BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setCopiesToDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.getCodeSigners()": {
        "intra_proced": [], 
        "inter_proced": [
            "CertificateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.getUnnormalizedComponents(float[], int, int[], int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.DataInputStream.readByte()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.flushPendingEvents(sun.awt.AppContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.valueOf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.drainQueue()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.AbstractMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setDropTarget(DropTarget)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValue(TemporalField, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.LongPipeline.access$000(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.AbstractList.listIterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.getMouseEventTarget(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.initializeCalendar(Locale)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Container.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.initialSeed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getTypeAnnotationBytes0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putFloatB(long, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getRaster()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getTimeOfDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TransformAttribute.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Method.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getCalendarDate(long, TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.of(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavorsAsList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getRed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.legacyMergeSort(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.QuadCurve2D.getFlatness()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.min(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.getRuntime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.VerifyType.isNullReferenceConversion(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getMouseEventTarget(int, int, boolean, EventTargetFilter, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.lastIndexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.lastUseIndex(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.searchEntries(long, Function)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.shiftRightImpl(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.tooLow(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamEncoder.forEncoder(WritableByteChannel, CharsetEncoder, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.tableswitch(i3)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.putInCache(Transform, LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.resources.LocaleData.getDateFormatData(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.evaluateToArrayNode(IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.put(LongBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.text.AttributedString.valuesMatch(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.Component.setMinimumSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.CollectionView.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.offer(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.reverseBytes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.componentShown(ComponentEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.getNumericBase()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.compareTo(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.of(Kind, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.get(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.max(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.exactRoundUp(double, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putFloatL(long, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.arraySpliterator(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.DatagramSocketImpl.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.reject(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.get(long[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.GraphicComponent.createCoreMetrics(GraphicAttribute)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.trimToSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getYearFromFixedDate(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.dragOver(DropTargetDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isDirectory()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Path2D.cloneCoordsDouble(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.withSubsequentWidth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getNumDataElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getValidOffsets(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputEvent.canAccessSystemClipboard()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.AbstractCollection.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getParameterCount()": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToIntTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.setDate(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getMaximizedBounds(Frame)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.checkFromToBounds(int, int, int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayDeque.pollLast()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.LocalTime.withHour(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.io.PrintStream.print(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.Collections.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.color.ICC_Profile.shortFromBigEndian(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputEvent.getModifiersExText(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MissingResourceException"
        ]
    }, 
    "java.util.ResourceBundle.newBundle(String, Locale, String, ClassLoader, boolean)": {
        "intra_proced": [
            "ClassCastException", 
            "InputStream", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ClassNotFoundException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Component.show(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.attributeValuesMatch(Set, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Math.powerOfTwoF(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.getBooleanAttributes0(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.isNamePresent()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException"
        ]
    }, 
    "java.util.stream.Nodes.ConcNode.OfLong.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.findComponentAt(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeWithArguments(List)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodType", 
            "WrongMethodTypeException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicLong.lazySet(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.nextBytes(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getField(String, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.contendedLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStroke(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.NumberFormat.getScientificInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.flip(FlipContents)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.cast(Object)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.setPropertyType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.getOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.init(GraphicsConfiguration)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "HeadlessException", 
            "IllegalComponentStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "NullPointerException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.util.Locale.getObject(LocaleServiceProvider, Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.toString(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpEventsForFilter(int, Conditional, EventFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "SecurityException"
        ]
    }, 
    "java.awt.image.WritableRaster.getMinX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.lookupStreamPrintServices(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.equals(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getAliases()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.KnownLevel.findByName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.modInverse(MutableBigInteger)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParseException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summingDouble$133(ToDoubleFunction, double[], Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.isBooted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.toMap(Function, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.loadImpl(String)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "java.awt.Dialog.hideAndDisposeHandler()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.subFormat(int, int, Format.FieldDelegate, StringBuffer, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "RuntimeException"
        ]
    }, 
    "java.awt.dnd.DropTargetDropEvent.isDataFlavorSupported(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.parseFraction(CharSequence, String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.next()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.codePointBefore(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.monthLength(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.preAccept()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.TextEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Enum.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.comparingByValue(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.isDispatchThreadImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.codePointCount(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.put(double[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putObject(Object, long, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setCursor(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.longValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getAdapter(Class, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Comparator.naturalOrder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.paint(Graphics)": {
        "intra_proced": [
            "Graphics"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.parse(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getLayoutPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.Arrays.fill(short[], int, int, short)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.DataBuffer.getNumBanks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSigner.getTimestamp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.readNonProxyDesc(boolean)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "EOFException"
        ]
    }, 
    "java.util.Properties.enumerateStringProperties(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.resolveProlepticMonth(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.focusLost(FocusEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Dimension2D.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.emptyEnvironment(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.writeFullyImpl(WritableByteChannel, ByteBuffer)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.setTransparency(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.put(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.DirectoryNode.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.forEach(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.replace(Object, Object, Object)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Formatter.justify(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.getValueString(int, String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.net.DatagramSocketImpl.getDatagramSocket()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getDisplayNamesImpl(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException"
        ]
    }, 
    "java.text.DecimalFormat.format(long, StringBuffer, Format.FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParseException.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.checkVisible()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.traceInterpreter(String, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.lang.invoke.MethodType.changeParameterType(int, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Polygon.contains(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.setValue(DateTimeParseContext, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.awt.MenuItem.removeActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.getGraphicOrFont(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.verifyFirstChange()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceTask.isLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.net.URI.compare(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.expungeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.stream.Nodes.initTryAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getPeer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.numListening(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.newInternalError(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.stringSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isRequestFocusAccepted(boolean, boolean, sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.deleteFrom(int, int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Crossings.accumulateLine(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.getDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.compareTo0(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.increaseCapacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.adjust(TemporalAccessor, DateTimeFormatter)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.CharBuffer.put(CharBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.date(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.io.DataInputStream.readFully(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.getComponents(Object, int[], int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.removeAll(Collection)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.initProxy(Class, ClassNotFoundException, ObjectStreamClass)": {
        "intra_proced": [
            "InvalidClassException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InvalidClassException"
        ]
    }, 
    "java.lang.ThreadGroup.add(Thread)": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.13ReducingSink.combine(13ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.access$100(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setLocation(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.tableswitch($b10)": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.awt.Container.getComponentAt(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.consume()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isUnicodeIdentifierPart(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReference.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.createGraphics()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.awt.Polygon.contains(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Integer.toUnsignedString0(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.setImageData(long, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRemainder(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.getMethods(Class, boolean, String, MethodType, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.parseLegacyPut(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.1.compare(Entry, Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arityCheck(int, Class, MethodHandle, Object[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.util.Collections.get(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.makeLocalTemp(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.resolveObject(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.Function.computeFunction(TextLine, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SimpleMethodHandle.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.getLayout()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.getDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.LayoutPathImpl.SegmentPathBuilder.complete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setSamples(int, int, int, int, int, float[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.getBlock(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.replace(int, int, String)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Arrays.fill(long[], int, int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.1.getFrom(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createCheckbox(Checkbox)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntArrayNode.forEach(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.computePixelBounds(BufferedImage)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.invokeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "RuntimeException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.basicType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.Head.sourceStageSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.initializePath(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TimerTask.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.getTimeToLive()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedMappingTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeProxyDesc(ObjectStreamClass, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getValue(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.setPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$reducing$153(Collectors.1OptionalBox, Collectors.1OptionalBox)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putFloat(Object, long, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Array.getLength(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.endsWith(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.x509.X509CertImpl.verify(X509Certificate, PublicKey, Provider)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.PaintEvent.getUpdateRect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.BasicPermission.getCanonicalName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.toHours(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.setDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.DeleteOnExitHook.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$reducing$154(Collectors.1OptionalBox)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.shiftDown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.access$000()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.checkText(String, int, int)": {
        "intra_proced": [
            "UnknownFormatConversionException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.set(ThreadLocal, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.Component.setGraphicsConfiguration(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Year.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.put(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamShape.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getMissingGlyphCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getHeaderFieldLong(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.Preferences.factory1()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectOutputStream.ReplaceTable.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.ValueSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.asList(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.getFractionalMetricsHint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.EntryFuture.set(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.intersects(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.remove(int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceEntriesToDouble(long, ToDoubleFunction, double, DoubleBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineGetCertificate(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.getName(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "EOFException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ProcessBuilder.Redirect.file()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ShortBuffer.wrap(short[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.elementData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.checkPtypes(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "NullPointerException"
        ]
    }, 
    "java.util.HashMap.tableSizeFor(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermission.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.InnocuousForkJoinWorkerThreadFactory.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.nameRefersTo(LambdaForm.Name, Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.equals(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.nonSyncContentEquals(AbstractStringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOfRange(long[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ShortBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.ClassRepository.getSuperclass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleResources.getLocaleName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.LongIteratorSpliterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getDrawGraphics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.setVisible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getZipMessage(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.observesDaylightTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(WindowStateListener, WindowStateListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.security.Permissions.setReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleExtensions.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.QNode.tryCancel(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getOffsets(long, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.purgeStampedEvents(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.available()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.load(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.GetInstance.getInstance(String, Class, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.processMouseEvent(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.BorderLayout.getLayoutComponent(Container, Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.IndexColorModel.setRGBs(int, int[], int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.lang.ProcessEnvironment.ExternalData.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newByteChannel(Path, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.match(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.AdaptedRunnable.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.initializeStatic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAllByName0(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.checkArgumentTypes(Object[], MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getSamples(int, int, int, int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.offer(Object, long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.BandedSampleModel.getTransferType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getPackages()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.applyFunctionAtIndex(int, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.setFieldsNormalized(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketClose0(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createVolatileImage(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.TextStyle.zoneNameStyleIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedEntryTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceKeysToDouble(long, ToDoubleFunction, double, DoubleBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToLongTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.filter(List, Collection, FilteringMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.WindowEvent.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.CharacterData00.isOtherUppercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.pop()": {
        "intra_proced": [
            "EmptyStackException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.MouseEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(BasicType, Class, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahEra.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.SocketPermission.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GraphicsCallback.PaintCallback.runComponents(Component[], Graphics, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.removeLayoutComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.setCurve(Point2D, Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.setWritable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getContextClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.List.getSelectedItem()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.extractComponent(Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.WriteAbortedException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getFlatnessSq(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getPositivePrefixFieldPositions()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.set(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.quadTo(float, float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.IllegalAccessException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchKeysTask.quietlyCompleteRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachKey(long, Function, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.resolveWoM(Map, Chronology, int, long, long, int, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.event.KeyEvent.getKeyModifiersText(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "MissingResourceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassLoader.getResourceAsStream(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException"
        ]
    }, 
    "java.nio.ByteBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.normalizeCharClass(StringBuilder, int)": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.isPrivate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.visitSource(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.add(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getWidth(ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.makeUninitializedCallSite(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.regex.Matcher.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getDeclaredSerialFields(Class)": {
        "intra_proced": [
            "InvalidClassException"
        ], 
        "inter_proced": [
            "NoSuchFieldException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.primitiveRightShift(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getFormatterProperty(String, Formatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "ClassNotFoundException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.FileDialog.setFiles(File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.getLastModifiedTime(Path, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(TextListener, TextListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.standardProfileExists(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.printf(Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.lang.Character.UnicodeBlock.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, double, int, boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterators.LongArraySpliterator.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getNextEntry(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.localizedDayOfWeek(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.exit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getAlignmentX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divideAndRemainderKnuth(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.HeapByteBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkUnprivilegedlookupClass(Class, int)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.add(ActionListener, ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodRef.find(Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Dialog.updateChildrenBlocking()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.beans.FeatureDescriptor.isTransient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketClose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.addOne(int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findLoadedClass0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.isIdentity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.6ReducingSink.combine(6ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoEra.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.entryFor(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.get(long[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Instant.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "NullPointerException", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.interruptWorkers()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfRef.forEach(Consumer, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceValues(long, Function, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.getFragment()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.MouseInfo.getPointerInfo()": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.io.ObjectInputStream.readUnshared()": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.EventQueue.invokeAndWait(Object, Runnable)": {
        "intra_proced": [
            "Error", 
            "InvocationTargetException"
        ], 
        "inter_proced": [
            "Error", 
            "InvocationTargetException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.newConst(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.decode(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.CharacterData01.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.failExpecting(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.hasUniformLineMetrics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.discardKeyEvents(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.removeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.subSequence(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.optionalStart()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.eventDispatched(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalComponentStateException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Container.getHeavyweightContainer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getTransparency()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.begin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocus(sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.contexts()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.suspend0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Era.getSinceDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setGlobalCurrentFocusCycleRootPriv(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.put(CharBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.HashSet.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setAlwaysOnTop(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Component.processMouseMotionEvent(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.copyWithExtendF(MethodType, LambdaForm, float)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.nio.channels.Channels.writeFully(WritableByteChannel, ByteBuffer)": {
        "intra_proced": [
            "IllegalBlockingModeException"
        ], 
        "inter_proced": [
            "RuntimeException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTime.isEqual(ChronoZonedDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapCharBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newOutputStream(Path, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.charset.UnmappableCharacterException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PriorityQueue.access$200(PriorityQueue, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.toEpochSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.getDateTimeInstance(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.dnd.DropTarget.setComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.IntUnaryOperator.compose(IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getDouble(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getGlyphCharIndices(int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getRolledValue(int, int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createTempDirectory(String, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.CharArrayReader.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putDouble(long, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.access$100(DataInputStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.lang.reflect.Executable.getTypeAnnotationBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.get(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeChars(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.tableswitch($i11)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TreeMap.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.LongWrappingSpliterator.doAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.getResources(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.put(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageMediaEntry.getStatus(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.applyTransform(AffineTransform, sun.font.AttributeValues)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.countNonNull(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.reportInterruptAfterWait(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceParameterByNewExpression(int, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.isJavaMIMEType(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.contains(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ItemEvent.getItem()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.getThrowableException()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.PageAttributes.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.nameArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.tableswitch($c4)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.prolepticYearLenient(JapaneseEra, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleResources.getDateTimePattern(int, int, Calendar)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putLong(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PrintCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.ProcessEnvironment.StringEntry.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.ensureIso(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.getLocalResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getKeepAlive()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.image.DirectColorModel.tableswitch($i4)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.dividedBy(long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.OffsetDateTime.withNano(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getCurrentEventImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.isSet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.redirects()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.Action.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.sumWithCompensation(double[], double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.createCompatibleSampleModel(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.hugeCapacity(int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.KeySet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.Container.processMouseWheelEvent(MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.classify(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.count()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.setState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.isFlavorNoncharsetTextType(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.forEachRemaining(IntConsumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpEventsForHierarchy(int, Conditional, Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.util.PriorityQueue.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getCenterX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getCtrlY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Signal.handle(sun.misc.Signal, sun.misc.SignalHandler)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.MinguoEra.lookupswitch(i0)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.BasicPermission.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimerTask.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.add(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getGlyphOutline(int, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$1500(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.util.Calendar.setMinimalDaysInFirstWeek(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.time.LocalDateTime.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Window.connectOwnedWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isIPv4CompatibleAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.after(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.dragExit(DragSourceEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.put(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.decrementPendingCountUnlessZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.isConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getLineMetrics(String, int, int, Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.sync2()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.time.MonthDay.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "sun.font.GlyphLayout.done(sun.font.GlyphLayout)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.latestUserDefinedLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.getTargetActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.remove(Object)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.getFileDescriptor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.load(KeyStore.LoadStoreParameter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createPackedRaster(int, int, int, int[], Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketShutdown(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.rejectDrag()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.addFlavorListener(FlavorListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.getEntry(ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.specificToGenericStringHeader(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.lookupExtendedCharset(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.reportError(String, Exception, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.time.ZonedDateTime.withYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.unreflectField(Field, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getBlue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.format(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DuplicateFormatFlagsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.lang.StringCoding.safeTrim(char[], int, Charset, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.flipSubRegion(int, int, int, int, FlipContents)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Array.newArray(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.5ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredConstructor(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJByte.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.toEpochSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.pattern()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProviderProperty(String, Provider)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.nio.channels.DatagramChannel.write(ByteBuffer[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfInt.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.createInheritedMap(ThreadLocalMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.addHandler(Handler)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ReentrantLock"
        ]
    }, 
    "java.math.BigDecimal.setScale(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.resolvedHandle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.translate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.get(long, TimeUnit)": {
        "intra_proced": [
            "InterruptedException", 
            "CancellationException", 
            "TimeoutException", 
            "ExecutionException"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "RuntimeException", 
            "ReentrantLock", 
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.awt.AWTAutoShutdown.notifyThreadBusy(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.reverseBytes(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.equals(long[], long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.leadingSign(StringBuilder, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.lookupswitch($i16)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createBufferStrategy(int, BufferCapabilities)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "Error", 
            "Error", 
            "Error", 
            "IllegalAccessException"
        ]
    }, 
    "java.util.Arrays.copyOfRange(Object[], int, int, Class)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarVerifier.unsignedEntryNames(JarFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.writeBits(StringBuilder, boolean, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.arrayCompare(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addOwnedWindow(WeakReference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.throwMiscException(Throwable)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.subdivide(QuadCurve2D, QuadCurve2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createTranslatedChild(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.awt.geom.AffineTransform.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodType.appendParameterTypes(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.Path2D.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.canBeFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.removeKeyEventDispatcher(KeyEventDispatcher)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.handleGetObject(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.excessNanos(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ChangeListenerMap.newProxy(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiply(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.print.PrinterJob.getPageFormat(PrintRequestAttributeSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.afterExecute(Runnable, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.readSocksReply(InputStream, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.awt.JobAttributes.setPrinter(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.tableswitch($i3)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Collections.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.isAfter(YearMonth)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.getDefaultCursor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.putVal(int, Object, Object, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.unlinkLast(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setOpacity(float)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiply(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.spi.CalendarProvider.getInstance(TimeZone, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.Function.andThen(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.getSocketAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.FormattedFloatingDecimal.getExponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getLowestSetBit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absFloor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoUnit.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.openConnection(URL, Proxy)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Frame.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getWeakReference(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.incrementAndGet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.spreadArgumentsForm(int, Class, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.logging.Handler.setErrorManager(ErrorManager)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.update(int, byte[], int, int, sun.security.util.ManifestEntryVerifier)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.Inet6Address.initstr(String, byte[], String)": {
        "intra_proced": [
            "UnknownHostException", 
            "UnknownHostException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.setLayout(LayoutManager)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.JulianCalendar.newCalendarDate(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDisplayName(boolean, int, Locale)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DropTarget.setFlavorMap(FlavorMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.clear(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.tryUnfork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointAt(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.hasValidParentChain(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Value.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.font.TextLayout.getCaretPath(int, Rectangle2D, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.getPathIterator(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.put(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.access$100(Hashtable, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.WeakHashMap.EntryIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyResourceBundle.getKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.incrementAndGet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PopupMenu.show(Component, int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "RuntimeException"
        ], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.math.BigDecimal.multiply(long, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfInt.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.matchFields(ObjectStreamField[], ObjectStreamClass)": {
        "intra_proced": [
            "InvalidClassException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.isInstanceOf(Object, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.addNotify(ComponentPeer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.currentClassLoader0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.localizedDayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.toURL()": {
        "intra_proced": [
            "MalformedURLException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.read(byte[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.reset()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.MonthDay.lookupswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Label.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.startEventDispatchThreadIfNecessary()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ProcessBuilder.redirectError(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.getSpace(File, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.toEpochSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDropTargetEvent.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.limit(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.EnclosingMethodInfo.isConstructor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.int2(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.useDateFormatSymbols()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.access$400(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeEvent.getOldValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.clearCurrentFocusCycleRootOnHide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.clearBeanInfoCache()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.EntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.toLocalTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.transferFocus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getNormalizedComponents(int[], int, float[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.getBoundingBox()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.fastDoubleFormat(double, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.CharSequence.lambda$chars$1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(WindowFocusListener, WindowFocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.offsetByCodePoints(CharSequence, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.matches(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "Pattern", 
            "Pattern"
        ]
    }, 
    "java.awt.Choice.remove(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DropTarget.getDefaultActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getItem(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.getInterfaces()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.hasHeavyweightDescendants()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.add(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.lang.Character.codePointAtImpl(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getNormalizedCalendar()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.awt.MenuBar.deleteShortcut(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.Parsed.crossCheck()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.image.Raster.createBandedRaster(int, int, int, int, int[], int[], Point)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.requestPasswordAuthentication(String, InetAddress, int, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.MenuComponent.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getFont(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfInt.emptyConsumer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.scan(int, int, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getParameterTypes(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.text.spi.DateFormatProvider.getTimeInstance(int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.isVMAnonymousClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.listen(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.statusAll(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.TimeZone.observesDaylightTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.checkPattern(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipInputStream.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.listRoots()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.tableswitch(i1)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.AbstractMap.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.parseInt(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.requiresDefaultLoggers()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.CharacterData00.isOtherLowercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.println(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.text.DateFormat.getTimeInstance(int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.GregorianCalendar.monthLength(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.period(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.normalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionsHash.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ContentHandler.getContent(URLConnection, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Array.newInstance(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.WeakHashMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.mousePress(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.format(DateTimePrintContext, StringBuilder)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.IdentityHashMapIterator.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.copyMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.bigMultiplyPowerTen(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Arrays.equals(float[], float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getFlatness(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.3.compare(MemberSignature, MemberSignature)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.bval(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValue(DateTimeFormatterBuilder.NumberPrinterParser)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.parseAndStoreReader(BufferedReader)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeParseContext.endOptional(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.StringBuilder.append(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Collections.SynchronizedNavigableSet.tailSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferInt.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.sorted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractQueue.element()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.getInstance(String, String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.logging.Logger.logp(Level, String, String, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.checkModalityPermission(ModalityType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setIconImage(Image)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.nio.charset.Charset.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.equals(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.newConstructorAccessor(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.getIntersection(Region)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getMethodAccessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.showSubRegion(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.evaluateToNode(PipelineHelper, Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Rectangle.resize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getTotalSpace()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.Spliterators.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.movePointRight(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.math.BigInteger.multiply(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.DataBufferFloat.setElemFloat(int, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.RoundingMode.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ActionEvent.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.findSupplementary(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.tryTerminate(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ProfileGray.getTRC()": {
        "intra_proced": [], 
        "inter_proced": [
            "ProfileDataException"
        ]
    }, 
    "java.util.stream.DoublePipeline.lambda$average$187(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.check(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeNonProxyDesc(ObjectStreamClass, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Executable.sharedToString(int, boolean, Class[], Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.String.regionMatches(int, String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.suspend()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.TextField.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.forEach(BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.CheckboxGroup.setSelectedCheckbox(Checkbox)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.checkInterruptWhileWaiting(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getShape(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextDouble()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyFromShortArray(Object, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.subtract(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.onStart()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.access$500(InetSocketAddress.InetSocketAddressHolder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isNative(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredConstructors()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.numListening(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.sharedGetParameterAnnotations(Class[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.addArguments(int, LambdaForm.BasicType[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.Intrinsic.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DelegatingSpliterator.OfPrimitive.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.draw(Graphics2D, float, float)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.image.DirectColorModel.getBlue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.parseIPv6Reference(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "HeadlessException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.io.ObjectInputStream.ValidationList.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.connect(InetAddress, int)": {
        "intra_proced": [
            "AbstractPlainSocketImpl"
        ], 
        "inter_proced": [
            "AbstractPlainSocketImpl", 
            "UnknownHostException", 
            "NullPointerException", 
            "InetAddress", 
            "SocketException", 
            "AbstractPlainSocketImpl", 
            "AbstractPlainSocketImpl"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getCalendarDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getClipRect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.format(Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DuplicateFormatFlagsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.lang.ProcessEnvironment.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getUnsignedCS(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.1CodePointIterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(KeyListener, KeyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getColorSpace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.nextKeyIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.security.auth.callback.PasswordCallback.getPassword()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.setMinimumIntegerDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.compareUnsigned(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.nonfairTryAcquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeFloat(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamEncoder.forOutputStreamWriter(OutputStream, Object, CharsetEncoder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.substring(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.InnocuousForkJoinWorkerThread.eraseThreadLocals()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.access$300(char, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.Itr.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.NumberFormatException.forInputString(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.access$500(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchMethodException"
        ]
    }, 
    "java.awt.TextComponent.textValueChanged(TextEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.filterReturnValue(MethodHandle, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.Window.getFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.isSubclassObject()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getWindows(sun.awt.AppContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.makeReinvoker(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.matchesNameAndDescriptor(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.getHeaderField(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.clearLightweightDispatcherOnRemove(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getBounds2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getStringBounds(char[], int, int, FontRenderContext)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.getHijrahDateInfo(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "PrivilegedActionException"
        ]
    }, 
    "java.net.InetAddress.Cache.put(String, InetAddress[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.time.LocalDate.withMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.BasicStroke.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.supportsKeyFormat(Key)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.nio.DirectLongBufferRU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.regex.Matcher.find(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putChar(long, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getLocalHost()": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": [
            "InetAddress", 
            "AssertionError", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.DoubleFixedNodeBuilder.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.getCurrentChangeSupport()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.removeLast()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "sun.invoke.util.BytecodeDescriptor.unparse(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getDataElement(float[], int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isRecursivelyVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.moveComponents(Container, int, int, int, int, int, int, boolean, boolean, int[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PolicySpi.engineRefresh()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.roll(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.remove(Object)": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.ResolverStyle.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.HashMap.removeNode(int, Object, Object, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getLocalPatternChars()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.andNot(BitSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.recursiveSubtractAndApplyShape(Region)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getTime(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.awt.image.MultiResolutionToolkitImage.getResolutionVariant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.add(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.Collector.of(Supplier, BiConsumer, BinaryOperator, Function, Collector.Characteristics[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.StringBuffer.indexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.acquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getRotateInstance(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptSegDistSq(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.pollSubmission()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.asCharBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.copy(InputStream, OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.DatagramSocketImpl.setTTL(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.GetField.defaulted(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.DoubleSummaryStatistics.getAverage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.processItemEvent(ItemEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Terminator.setup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.setCurve(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.ManifestEntryVerifier.getEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.countHierarchyMembers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.replaceAll(UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.apply(ClassLoader, Class[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Year.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitGuardWithCatch(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "IllegalArgumentException", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.inTrans()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.insertArgumentsChecks(MethodHandle, int, int)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.parkUntil(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.Character.valueOf(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.mail(URI)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Rectangle.setBounds(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.ConstructorRepository.make(String, sun.reflect.generics.factory.GenericsFactory)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.postProcessKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.period(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.isInvokeSpecial()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.access$300(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.sharedGetParameterAnnotations(Class[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.extract(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.divideAndRoundByTenPow(BigInteger, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.net.ServerSocket.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.getHostString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.getAccessibleChildIndex(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toLowerCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.update(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.atOffset(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.BltSubRegionBufferStrategy.showSubRegion(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.addMouseListener(MouseListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.getQueueLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.restoreFocus(FocusEvent, Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getFlatnessSq(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getPackage(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.awt.Container.isVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.redirectInput(Redirect)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.checkAndSetPolicy(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.write(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.isHeldExclusively()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newInputStream(ReadableByteChannel)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapByteBuffer.putFloat(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getLogManager()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.PrintStream.println(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "sun.awt.SunToolkit.postEvent(sun.awt.AppContext, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.booted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.Kind.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.cachedInvoker(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.CalendarDataUtility.retrieveMinimalDaysInFirstWeek(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.putIfAbsent(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.poll(long, TimeUnit)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "ReentrantLock"
        ]
    }, 
    "sun.nio.cs.ThreadLocalCoders.encoderFor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.restrictReceiver(MemberName, DirectMethodHandle, Class)": {
        "intra_proced": [
            "AssertionError", 
            "MemberName", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.nextTaskFor(ForkJoinPool.WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.dateYearDay(Era, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.LocalDateTime.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.Bits.getChar(ByteBuffer, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.isActionKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.StringBuilder.indexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.isAlive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isLightweight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.isCharLTR(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.dateNow(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.time.temporal.IsoFields.access$700(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.loadProviderFromProperty()": {
        "intra_proced": [
            "ServiceConfigurationError", 
            "ServiceConfigurationError", 
            "ServiceConfigurationError", 
            "ServiceConfigurationError"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Hashtable.put(Object, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.SignStyle.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.NumberFormat.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.trailingSign(StringBuilder, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.importPreferences(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidPreferencesFormatException", 
            "InvalidPreferencesFormatException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.StreamSupport.intStream(Spliterator.OfInt, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.firePropertyChange(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.internalMemberNameEnsureInit(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.reflect.Type.getTypeName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.mouseRelease(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.auditSubclass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setSendBufferSize(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.invoke.MemberName.testFlags(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.newIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJLong.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretInfo(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getDayOfWeekDateOnOrBefore(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(WindowListener, WindowListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getAttribute(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.recursiveSubtractAndApplyShape(Region, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Frame.remove(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.pushRun(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.imageUpdate(Image, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.removeMapping(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.deriveNumericScope(String)": {
        "intra_proced": [
            "UnknownHostException", 
            "UnknownHostException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException"
        ]
    }, 
    "java.awt.TextComponent.select(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.lang.ClassValue.getMap(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.valueOf(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.doSetParent(Logger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.color.ICC_Profile.getMajorVersion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.compactAndTrim()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.openStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.CacheKey.setFormat(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.addLocalLogger(Logger, boolean)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.StringBuffer.append(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.DoubleBuffer.get(double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.offer(Runnable, long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "sun.misc.Unsafe.putLong(Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventFilter.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.HijrahDate.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.KeySet.subSet(Object, boolean, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.SignedMutableBigInteger.signedAdd(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.NoSuchAlgorithmException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implReplaceAll(BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.deserializeResources(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.net.URL.getRef()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getNextLeftHit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.add(int, Object)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "IndexOutOfBoundsException", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "IndexOutOfBoundsException", 
            "ReentrantLock"
        ]
    }, 
    "java.nio.DirectIntBufferU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.foldArguments(MethodHandle, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "IllegalArgumentException", 
            "MethodHandles"
        ]
    }, 
    "java.time.LocalDate.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.getExecutableTypeAnnotationBytes(Executable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.reload()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getVariant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.lockRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.compareTo(Calendar)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.awt.image.ComponentColorModel.getRGBComponent(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getInfinity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOfRange(byte[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.setGlobalPermanentFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.scale(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.at(int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.getAnnotation(Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.region(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.setGlobalFocusedWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getWindows()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarFile.2.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setBounds(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "Component", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.security.PolicySpi.engineGetPermissions(ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.calculatePixelMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkSecurityManager(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.convertToDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.mixOnShowing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.setDatagramSocket(DatagramSocket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.execute(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.getBaseName()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapShortBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.find()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putLong(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.tryLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getDouble()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.toUpperCaseCharArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.of(int, Month, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.setOption(SocketOption, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipUtils.javaToDosTime(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.nio.DirectShortBufferU.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getDefaultSelection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.outOfBoundsMsg(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.DoubleWrappingSpliterator.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setKeepAlive(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.TrayIcon.processMouseMotionEvent(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.asPrimitiveType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.runFinalization()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.contains(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.of(String, Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Graphics.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.of(Transform.Kind, int, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.binarySort(Object[], int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextHitInfo.getCharIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.readObject(ObjectInputStream)": {
        "intra_proced": [
            "IllformedLocaleException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.parameterType(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.ReferencePipeline.flatMapToDouble(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.toArray()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putInt(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.averageBytesPerChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.applyStyle(int, sun.font.AttributeValues)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.filter(List, Collection, Locale.FilteringMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.offer(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.put(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapIntBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.computeIfAbsent(Object, Function)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getImageableWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.implReplaceWith(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.set(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.Unsafe.getAndSetLong(Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.findResources(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.setTransparentPixel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.appendEvent(InputEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.FontMetrics.getMaxDecent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.LongCumulateTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.remove()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.SystemLoggerHelper.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.newSingle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.toLocalDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getTimeZone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.math.BigDecimal.compareMagnitude(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getFocusedWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.paramString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.KeyIterator.nextIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.newInternalError(String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printEnclosedStackTrace(PrintStreamOrWriter, StackTraceElement[], String, String, Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.mappingOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "sun.util.calendar.CalendarUtils.mod(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntry(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Package.getSystemPackages()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.checkAdding(Component, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Throwable.readObject(ObjectInputStream)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.lang.ClassValue.Version.classValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.typeLoadOp(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.arraySpliterator(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.kind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getOrientation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getSamples(int, int, int, int, int, float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.reflect.generics.repository.ConstructorRepository.getExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.balanceDeletion(ConcurrentHashMap.TreeNode, ConcurrentHashMap.TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.complementOf(EnumSet)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.Invokers.callSiteForm(MethodType, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapKeyIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.ulp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuShortcut.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "StringIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.print(int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.enumerateCycle(Container, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypeChar(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.getPath(URI)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocusInWindow(boolean, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.hide()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.image.SampleModel.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getDataType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getOffsetInfo(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.setID(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.1.isSupportedBy(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.Providers.setProviderList(sun.security.jca.ProviderList)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.withZoneSameInstant(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.DoublePipeline.min()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.SortedOps.makeRef(AbstractPipeline)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterInputStream.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.put(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.remove(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URLClassLoader.defineClass(String, sun.misc.Resource)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "SecurityException", 
            "SecurityException"
        ]
    }, 
    "java.util.jar.JarFile.entries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.add(BigInteger, int, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.zip.ZipCoder.getBytesUTF8(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.text.BreakIterator.getLineInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.cloneWithIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.getDefaultPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.isMixed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.bogusMethod(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.InflaterInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.tableswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.addInterfaceMethods(Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.access$000(TreeMap, TreeMap.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.AbstractStreamBuilderImpl.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.done()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.mulAdd(int[], int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "IllegalArgumentException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.unreflectForMH(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getExternalizableConstructor(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar.Date, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.StandardOpenOption.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.untreeify(HashMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getAnnotatedReturnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAccessibleIndexInParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.getEffectiveChronology()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Long.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.copyInto(Object[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.LayoutPathImpl.pathToPoint(Point2D, boolean, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AWTException"
        ]
    }, 
    "java.util.stream.SortedOps.opEvaluateParallel(PipelineHelper, Spliterator, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.SecurityManager.checkConnect(String, int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.geom.QuadCurve2D.getFlatnessSq()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.PrivateKeyEntry.getPrivateKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.addFinalRefCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.lockInterruptibly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.receive0(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.updateAndGet(Object, UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.groupingByConcurrent(Function, Supplier, Collector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addKeyEventPostProcessor(KeyEventPostProcessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.signalNotEmpty()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createLink(Path, Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.checkChars(int, int, long, long, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readInts(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleExtensions.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.applyPattern(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitIconstInsn(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.layout()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(AbstractStringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.io.PrintStream.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDropTargetEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneRegion.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectFloatBufferS.put(FloatBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "BufferOverflowException", 
            "Error", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.lang.CharacterData00.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.access$100(AttributedString, AttributedCharacterIterator.Attribute, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.get(double[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.geom.RectangularShape.setFrame(Point2D, Dimension2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.zeroLengthElementArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.accessFailedMessage(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.BasicStroke.createStrokedShape(Shape)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.collect(Supplier, BiConsumer, BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.cancel(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.insert(int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.stream.DoubleStream.iterate(double, DoubleUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.removeMouseMotionListener(MouseMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.getLevelAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.setLine(Line2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.groupingByConcurrent(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getOffset(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar.Date, int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.eras()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectByteBuffer.checkIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.1.reduce(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isOtherAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newOutputStream(Path, OpenOption[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.AffineTransform.translate(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.rangeCheck(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.1CharIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.swap(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.lambda$comparingLong$6043328a$1(ToLongFunction, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.modalityPopped()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterators.DoubleIteratorSpliterator.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.Head.isParallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.GenericBeanInfo.getTargetBeanInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getHeight(ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.LineIterator.isDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertPath.readResolve()": {
        "intra_proced": [
            "NotSerializableException"
        ], 
        "inter_proced": [
            "CertificateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferRB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getTimeZone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.image.ComponentColorModel.hasAlpha()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.generateConcreteBMHClass(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "ClassCastException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.Charset.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.appendAuthority(StringBuffer, String, String, String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.DelegatingMethodHandle.copyWith(MethodType, LambdaForm)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.ofBothArrays(Transform.Kind, int[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.tailSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.epochMonthToEpochDay(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.of(LocalDateTime, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.addFlavorForUnencodedNative(String, DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.ProcessPipeInputStream.processExited()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.dequeue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.outOfBoundsMsg(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.setBlockDataMode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.DirectoryIteratorException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.shouldNativelyFocusHeavyweight(Component, Component, boolean, boolean, long, sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.mix64(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.getSeconds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.getWindingRule()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withZone(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.getTextIterator(Chronology, TemporalField, TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summarizingDouble$179(DoubleSummaryStatistics, DoubleSummaryStatistics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToIntTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.print(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getsRGB8ToLinearRGB8LUT()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.getHostAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.newSpliterator(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.deepCopy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.getRules()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.logging.Logger.finest(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.checkName(String)": {
        "intra_proced": [
            "IllegalCharsetNameException", 
            "IllegalCharsetNameException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getBounds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "javax.print.StreamPrintServiceFactory.lookupStreamPrintServiceFactories(DocFlavor, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Collections.CheckedNavigableMap.navigableKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.processItemEvent(ItemEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.entryConsumer(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.check(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.concurrent.TimeUnit.6.x(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDSTSavings()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.loadMethod(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.stream.StreamSpliterators.IntWrappingSpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isMemberClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError"
        ]
    }, 
    "java.time.ZonedDateTime.of(LocalDate, LocalTime, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.RGBImageFilter.setPixels(int, int, int, int, ColorModel, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.throwException(Class, Class)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.isValidKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AttributeValue.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.appendTo(StringBuilder, String, Reference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.entryNames(CodeSource[])": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException", 
            "NullPointerException", 
            "CertificateException"
        ]
    }, 
    "java.util.GregorianCalendar.getMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.insertName(int, Name, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.4.compare(MemberSignature, MemberSignature)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.get(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.Graphics.getClip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.adapt(Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.ConcurrentWeakInternSet.WeakEntry.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.parentOf(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.selectAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.createGraphics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.resolveWoM(Map, Chronology, int, long, long, int, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.makeAllocator(MemberName)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.areInputMethodsEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ActionEvent.getActionCommand()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.invokeHandleForm(MethodType, boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Buffer.limit(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "sun.misc.MessageUtils.err(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparators.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.predecessor(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.keys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.floatToIntBits(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.timeLineOrder()": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDateTime.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.StrictMath.max(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.assign(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitArrayStore(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.equals(short, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.getDefaultScreenDevice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarInputStream.getNextEntry()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "ZipException", 
            "ZipException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "EOFException", 
            "IOException", 
            "AssertionError", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.connect0(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.isPromise()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.LongCumulateTask.getCompleter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.replaceName(LambdaForm.Name, LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.BasicPermissionCollection.add(Permission)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.list(PrintWriter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.newNode(int, Object, Object, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeLong(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessEnvironment.getenv()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoubleStream.of(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.forEach(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TransformAttribute.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.wrapperType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.peekExpired()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.readyOps()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.10.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.sharedToGenericString(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.initScale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.checkNotNull(Object, String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.substring(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.addEventFilter(EventFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.addAll(Collection)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findLibrary(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStroke(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.ZonedDateTime.withNano(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodType.equals(MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.TypeAnnotationParser.buildAnnotatedTypes(byte[], sun.reflect.ConstantPool, AnnotatedElement, Class, Type[], sun.reflect.annotation.TypeAnnotation.TypeAnnotationTarget)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.createDateTime(LocalDateTime, ZoneOffset, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.guessContentTypeFromName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.WeakHashMap.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.mkdir()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigInteger.byteValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.internalCallerClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.parseObject(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DecimalFormat.getMinimumIntegerDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.toUpperCaseEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.Period.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.isPointToPoint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Button.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "HeadlessException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJChar.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dimension.setSize(double, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.logging.Logger.logp(Level, String, String, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.message(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.addLogger(Logger)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.isSet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.hash(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.bitLength(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.afterEvent()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.awt.Color.getColorComponents(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Double.append(PathIterator, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.logrb(Level, String, String, ResourceBundle, String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkAwtEventQueueAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.logging.Handler.getErrorManager()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketGetOption(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readBooleans(boolean[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.util.Arrays.equals(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SimpleMethodHandle.make(MethodType, LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.setPackageAssertionStatus(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.put(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getDataElement(int[], int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createWritableRaster(SampleModel, DataBuffer, Point)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.put(char[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.net.SocksSocketImpl.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessImpl.start(String[], Map, String, ProcessBuilder.Redirect[], boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.net.URI.parseAuthority(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.demandLogger(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getBlue(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.CountedCompleter.compareAndSetPendingCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigestSpi.engineReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.TaskQueue.rescheduleMin(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.setLength(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.comparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getBlackBoxBounds(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketPermission.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.getMinimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getRGB(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.Unsafe.getAndAddLong(Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitArrayOp(Name, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.getImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.ofLocalizedDate(FormatStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.IntPipeline.anyMatch(IntPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.time.format.DateTimeParseContext.getParsed(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.parallelSort(Object[], int, int, Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Spliterators.iterator(Spliterator.OfLong)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readShorts(short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.net.PlainDatagramSocketImpl.getFileDescriptor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.substring(int, int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.packRules()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.subSequenceEquals(CharSequence, int, CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Stream.iterate(Object, UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.setToScale(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.Math.nextAfter(float, double)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.isCompatibleSampleModel(SampleModel)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Spliterators.DoubleIteratorSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.CacheKey.calculateHashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.put(int[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Matcher.start(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.copyOfRange(double[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDate.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.internArgument(LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getGlobalFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.AdjustmentEvent.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.startOfWeekOffset(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setMostRecentFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.equals(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CharacterIteratorFieldDelegate.formatted(Format.Field, Object, int, int, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketPermissionCollection.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.zip.ZipEntry.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.WritableByteChannelImpl.begin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(long[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.minimumSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.copyWith(MethodType, LambdaForm)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.function.BinaryOperator.minBy(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.info(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Number.byteValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(char[], int, int, char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.newClassCastException(Class, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Error.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.squareKaratsuba()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DecimalFormat.addAffixes(char[], char[], char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.Values.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.save(OutputStream, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Species_L.make(MethodType, LambdaForm, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.getSpi(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.makeSpliterator(Spliterator, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.FractionPrinterParser.convertToFraction(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.statusID(int, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.valueOf(BigInteger, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.isOrdered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.OfInt.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.badKeyMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.computeRedLevel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.compareTo(Double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.pollAndExecAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.submit(Callable)": {
        "intra_proced": [], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.addWorker(Runnable, boolean)": {
        "intra_proced": [
            "IllegalThreadStateException", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.lang.ThreadLocal.createMap(Thread, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.BigDecimalLayout.layout(BigInteger, int, BigDecimalLayoutForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.warning(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getNormalizedCalendar()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "sun.text.bidi.BidiBase.getParaLevel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.toISODayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PolicySpi.engineImplies(ProtectionDomain, Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.Timer.isRunning()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getGreenMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.contains(PathIterator, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.equals(char[], char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.checkHost(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getComponentLogicalIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withSecond(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getBundle(String, Locale, ClassLoader)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.nextSecondarySeed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.rotate(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.updateCache(String, BoundMethodHandle.SpeciesData)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.isGuiAvailable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkPackageAccess(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "sun.security.x509.X509CertImpl.getEncodedInternal(Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfRef.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.setAccessible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.getTargetSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ModalEventFilter.acceptEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ValueSpliterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.hasUniformLineMetrics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.access$300(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.Entry.comparingByKey(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Matcher.reset(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.LongArraySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.parse(String)": {
        "intra_proced": [
            "ParseException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.MessageDigest.update(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.bind(Object, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.DayOfWeek.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.add(HierarchyBoundsListener, HierarchyBoundsListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getByAddress(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeLongs(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Currency.readIntArray(DataInputStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "sun.awt.geom.Curve.rectCrossingsForQuad(int, double, double, double, double, double, double, double, double, double, double, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.forEach(Consumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.zip.InflaterInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.NotSerializableException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.RenderingHints.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lambda$initStreams$268()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getTimeZone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.channels.spi.AbstractSelectionKey.channel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.openSocketChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.Timer.stop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.getExecutableTypeAnnotationBytes(Executable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Float.lineTo(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.setLenient(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(BigInteger, StringBuffer, FieldDelegate, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$2500(Class[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isJavaIdentifierStart(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.firePropertyChange(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getBlueMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.tableswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.dragOver(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.submit(Callable)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.HashMap.remove(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.forName0(String, boolean, ClassLoader, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.OfInt.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.access$000(ThreadLocal.ThreadLocalMap, ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.apply(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putFloatB(ByteBuffer, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$800(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException", 
            "NoSuchFieldException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.net.URLClassLoader.loadClass(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.put(LongBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.awt.BufferCapabilities.getFlipContents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putByte(Object, long, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.coalesceEvent(AWTEvent, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.isBefore(YearMonth)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getMethod0(String, Class[], boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$groupingByConcurrent$165(Function, Supplier, BiConsumer, ConcurrentMap, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.set(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.isUndecorated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasStaticInitializer(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Annotation.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.getDropTarget()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.sorted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.www.ParseUtil.decode(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.nextUp(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkTopLevelWindow(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Container.proxyEnableEvents(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getBlue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentMap.replaceAll(BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.setExclusiveOwnerThread(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.checkCerts(String, CodeSource)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.ArrayList.removeIf(Predicate)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.getGlobalFocusedWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.tableswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.charAt(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.setName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectField(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToLongTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Float.moveTo(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ExceptionInInitializerError.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getDayOfYear(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.hasRealParameterData()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "AbstractMethodError"
        ]
    }, 
    "java.util.Hashtable.computeIfAbsent(Object, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.invokeFinalize(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getBounds2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$1100(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.tan(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToLongTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.rehash()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToQuadrantRotation(int, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getMaximumIntegerDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.CurrencyNameProvider.getDisplayName(String, Locale)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.get(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.Menu.handleShortcut(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLayout.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.needsInput()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.TempFileHelper.create(Path, String, String, boolean, FileAttribute[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ClassCastException"
        ]
    }, 
    "java.io.ObjectInputStream.registerValidation(ObjectInputValidation, int)": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.TextField.setColumns(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.setOrientation(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.addAll(int, Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.checkLegacy(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.getMask(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.YearMonth.lengthOfYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "sun.util.locale.LocaleMatcher.filter(List, Collection, FilteringMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InterfaceAddress.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plus(Duration)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.file.DirectoryIteratorException.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextInt(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "sun.net.InetAddressCachePolicy.getNegative()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.getCenterPoint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.isVarArgs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.checkScreenCaptureAllowed()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.rejectDrop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.removePropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.specificToGenericStringHeader(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isMCLinkLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.resolveOrFail(byte, Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createHierarchyEvents(int, Component, Container, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.getDouble()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.EventQueue.peekEvent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.setAutoDelay(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.net.InetAddressImplFactory.create()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.IntPipeline.collect(Supplier, ObjIntConsumer, BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.Long.parseUnsignedLong(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Clock.fixed(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.write(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.format(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.HeapByteBufferR.asFloatBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.isHeldExclusively()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocusInWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.isIndexSelected(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.drainTo(Collection, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.bind(int, InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceParameterByNewExpression(int, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.remove(ThreadGroup)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Formatter.addDot(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.IntConsumer.andThen(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.5ReducingSink.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isAnnotationPresent(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getFamily()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.evaluateSequential(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.methodType(Class, Class, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.resolve(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.parse(CharSequence)": {
        "intra_proced": [
            "DateTimeParseException", 
            "DateTimeParseException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "DateTimeParseException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.util.concurrent.FutureTask.cancel(boolean)": {
        "intra_proced": [
            "FutureTask"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.AttributeEntry.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.MutableBigInteger.compareHalf(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.subtractAndApplyShapeBelowMe()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.setGraphicsConfiguration(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.stream.Streams.DoubleStreamBuilderImpl.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ofWeekBasedYear(Chronology, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.tryLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.get(short[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.net.Socket.getSoLinger()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.findBoundCallerClass(MemberName)": {
        "intra_proced": [
            "IllegalAccessException"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.PlainSocketImpl.setInputStream(SocketInputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringValues.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.logp(Level, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.setLocale(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.methodType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.NumberFormatProvider.getIntegerInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getDispatchThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getContainer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.numericToTextFormat(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.divide(BigInteger, int, long, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.nio.Bits.getDouble(ByteBuffer, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.unlink(Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.basicTypeChar(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.BeanDescriptor.getWeakReference(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractQueue.add(Object)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.LinkedList.node(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.isBefore(OffsetTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntStream.concat(IntStream, IntStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.attributeNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketAvailable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.canDisplay(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.optionalEnd()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.List.setFont(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.matchesField(Field, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.cleanSomeSlots(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToLongTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.min(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.SharedSecrets.getJavaAWTAccess()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.typeCheck(Object, Object)": {
        "intra_proced": [
            "ClassCastException", 
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.counting()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.definePackage(String, Manifest, URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getNextLeftHit(int, CaretPolicy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.putIfAbsent(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.font.TextLine.getMetrics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.getHostName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.sync()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.setReadable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.isSupported(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.Component.mouseDrag(Event, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.speciesData(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isLocationByPlatform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.eventToCacheIndex(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getMinY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfo.setID(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.removeAWTEventListener(AWTEventListener)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.io.InputStream.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.put(char[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.time.ZoneId.of(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Policy.checkPermission(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.time.LocalDate.tableswitch(i1)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.setBackground(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputMethodEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.begin(long)": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.util.zip.ZipFile.ZipEntryIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.updateInternalBuffers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.implOnMalformedInput(CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Exception.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.destructiveMulAdd(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkField(byte, Class, MemberName)": {
        "intra_proced": [
            "MemberName"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.file.Files.find(Path, int, BiPredicate, FileVisitOption[])": {
        "intra_proced": [
            "FileTreeIterator"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.URLClassLoader.5.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferFloat.setElemDouble(int, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapByteBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.BmpCharProperty.isSatisfiedBy(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Nodes.ToArrayTask.OfInt.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.setRunFinalizersOnExit(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.checkParams(char[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.locate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.acquire(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.BasicPermission.newPermissionCollection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.decode(ByteBuffer)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.regex.Matcher.quoteReplacement(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.toCString(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.zip.ZipEntry.setExtra0(byte[], boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.appendFragment(StringBuffer, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GridBagLayout.setConstraints(Component, GridBagConstraints)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.resolveInvokerMember(Class, String, MethodType)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.set(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.nextGaussian()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.findUnderMouseInWindow(PointerInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.countRunAndMakeAscending(Object[], int, int, Comparator)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.collect(PipelineHelper, Spliterator, boolean, IntFunction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DecimalFormat.toPattern(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.File.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.arityCheck(int, MethodHandle, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.shape(char[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.beans.EventSetDescriptor.setTransient(Transient)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.inRange(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.getDayOfYear(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.signalWork(WorkQueue[], WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointBefore(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.unreflectField(Field, boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.LocalTime.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.compareTo(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.negate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.newPrintStream(FileOutputStream, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getStringBounds(String, int, int, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.put(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summingDouble$134(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getBestCursorSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "sun.util.logging.PlatformLogger.getLogger(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getBaseLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.metaDown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.toMinutes(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.EntrySet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "SocketException"
        ]
    }, 
    "java.util.Currency.access$200(DataInputStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarInputStream.getBytes(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.InputStreamReader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.forEachRemaining(Consumer)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getTask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.info(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectFieldCommon(byte, Class, MemberName, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Method.setAccessible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setUnitIncrement(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.matches(String, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.QNode.isCancelled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.readAttributes(Path, String, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.Font.getNumGlyphs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.put(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingSubMap.absCeiling(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.toNanos()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.TreeMap.deleteEntry(TreeMap.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.toTotalMonths()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.get(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isPackage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.removeConstraints(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaEntry.startLoad()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.TrayIcon.addActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.MatchOp.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.close0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.setLastAccessTime(FileTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.awt.SystemTray.isSupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.net.InetSocketAddress.isUnresolved()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.lambda$computeIfAbsent$103(Function, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getLeading()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getAlgorithms(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.MinguoDate.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.font.TextLayout.getVisualOtherHit(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.CharBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.add(int, boolean, Runnable)": {
        "intra_proced": [
            "InternalError", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.tryCancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.util.zip.ZipFile.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.lookupswitch($i4)": {
        "intra_proced": [
            "ZipException", 
            "ZipException", 
            "ZipException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "ZipException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "IOException", 
            "EOFException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ZipException", 
            "ZipException", 
            "ZipException", 
            "AssertionError", 
            "NullPointerException", 
            "IOException", 
            "IOException", 
            "EOFException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.PushbackInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.nio.HeapCharBufferR.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.createFont0(int, InputStream, sun.font.CreatedFontTracker)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IOException", 
            "IOException", 
            "OutputStream", 
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.makeCollectArguments(MethodHandle, MethodHandle, int, boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "MethodType"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.linkCallSite(Object, Object, Object, Object, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.logging.LogManager.LoggerContext.findLogger(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.getPathIterator(AffineTransform, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.isFocusCycleRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.lock(Object, CompletionHandler)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.nextAfter(double, double)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ref.ReferenceQueue.remove()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.Period.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.StrictMath.getExponent(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.joinGroup(SocketAddress, NetworkInterface)": {
        "intra_proced": [
            "SocketException", 
            "IllegalArgumentException", 
            "UnsupportedOperationException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.ChronoPeriodImpl.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException", 
            "NullPointerException"
        ]
    }, 
    "java.security.Policy.getPolicy()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.event.PaintEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.rectCrossings(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getNumBands()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.decodeStartRule()": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.doJoin()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.lang.invoke.MemberName.getType()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.datagramSocketClose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.delete(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setGraphicsConfiguration(Component, GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.quietlyJoin()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException"
        ]
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfRef.initTryAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.SignedMutableBigInteger.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.matchString(String, int, int, String[], CalendarBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.entering(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.hexDouble(double, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.addElapsedTimeFrom(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.of(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.isProxyClass(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.security.Provider.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.rangeWeekOfWeekBasedYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isSiteLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.makePositive(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isWindowOpacitySupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.setExceptionalCompletion(Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.tryCancel(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLEncoder.encode(String, String)": {
        "intra_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException", 
            "Error", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.desiredAssertionStatus0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LongSummaryStatistics.getSum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.applyCompoundShape(Region)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.image.SampleModel.setSample(int, int, int, int, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.readExternal(ObjectInput)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.insert(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Security.getImpl(String, String, Provider, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.RenderingHints.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.validateChrono(TemporalAccessor)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalTime.withMinute(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapEntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.PlainSocketImpl.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.ReverseComparator.compare(Comparable, Comparable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.bytesToDoubles(byte[], int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.put(DoubleBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.security.Security.removeProvider(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.awt.TimedWindowEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.run()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ReentrantLock", 
            "ZoneRulesException", 
            "IllegalStateException", 
            "Error", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.color.ICC_Profile.getInstance(byte[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivileged(PrivilegedExceptionAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeRef(Supplier, BiConsumer, BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.max(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.forInputStreamReader(InputStream, Object, CharsetDecoder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.1OptionalBox.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.hasArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isGetter()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.URI.decode(char)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.absLower(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getPackageName(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.inInterval(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.setParsedLeapSecond()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.zone.ZoneRules.getTransition(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitArrayLoad(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.XmlSupport.createPrefsDoc(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arguments(int, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.get()": {
        "intra_proced": [
            "CancellationException", 
            "ExecutionException"
        ], 
        "inter_proced": [
            "InterruptedException", 
            "RuntimeException", 
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.4.isSupportedBy(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedNavigableMap.headMap(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToIntTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.interrupt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.addFieldValue(Map, ChronoField, long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.replacementNode(Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(BoundMethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.load(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.DataBuffer.setElemFloat(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getSize()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.util.WeakHashMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.rotate2(List, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.copyTree()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.purge()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.lang.Thread.stop()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.Class.privateGetDeclaredConstructors(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.zip.CRC32.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.of(int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Constructor.handleParameterNumberMismatch(int, int)": {
        "intra_proced": [
            "AnnotationFormatError"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Button.doAccessibleAction(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.searchKeys(long, Function)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.MenuShortcut.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLine.getVisualBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.add(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Hashtable.Enumerator.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getMaxX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.EnsureInitialized.remove(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setSample(int, int, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.setRawResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.SynchronizedNavigableMap.navigableKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.createTransformedShape(Shape)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedCharacterIterator.Attribute.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuShortcut.usesShiftModifier()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.isAfter(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.owns(AbstractQueuedSynchronizer.ConditionObject)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.previous()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.io.SerialCallbackContext.getDesc()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.replaceStaleEntry(ThreadLocal, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.putInt(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ]
    }, 
    "java.io.OutputStreamWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfDouble.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.entering(String, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.setFilter(Filter)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.Runtime.gc()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeFloats(float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.resolveYMAD(Map, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(Callable, RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.remove(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.setContentHandlerFactory(ContentHandlerFactory)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.channels.Channels.2.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.isAnnotationPresent(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.lastParameterType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.formatToCharacterIterator(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TreeMap.subCeiling(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.RuntimeException.fillInStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistEra.lookupswitch(i0)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Character.codePointAt(CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeGuardWithTestForm(MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.BasicType.isArgBasicTypeChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.multiplyKaratsuba(BigInteger, BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.PrintWriter.format(Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DuplicateFormatFlagsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.util.logging.Logging.getLoggerLevel(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.BltBufferStrategy.revalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.BasicPermission.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.setOption(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.composedClose(BaseStream, BaseStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.equals(Object[], Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomDoublesSpliterator.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiplyAndRound(long, BigInteger, int, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.jar.Attributes.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntryFlag(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isAutoFocusTransferOnDisposal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.forEach(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LongSummaryStatistics.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.util.Arrays.equals(int[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.interruptIdleWorkers()": {
        "intra_proced": [], 
        "inter_proced": [
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.util.PriorityQueue.comparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.copyNodeToArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getAccessibleChildrenCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.newInstance(URL[], ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.TransferableProxy.getTransferData(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.putAll(Map)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getBoolean(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.multiplyToLen(int[], int, int[], int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.ofHoursMinutes(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.iterator()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Menu.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isRunningOrShutdown(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.noEvents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getNestedTypes(Class, boolean, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.setFirstDayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.recursiveRelocateHeavyweightChildren(Point)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.InputMethodEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.UnicodeBlock.forName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitInsn(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.FilteredImageSource.isConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.getProperties(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.connect(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.getFileAttributeView(Path, Class, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.defineClass(String, ByteBuffer, CodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.parse(DateTimeParseContext, CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.setFileDescriptor(FileDescriptor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.WrappingSpliterator.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.isLegalReplacement(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "UnsupportedOperationException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.MenuItem.deleteShortcut(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.initializeDefaultCentury()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchValuesTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Pipe.open()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachValueTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setVisible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getMinimumSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printStackTrace(PrintWriter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.BytecodeDescriptor.unparse(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.traceInterpreter(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.setText(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.IntWrappingSpliterator.doAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.isLineSeparator(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setShape(Shape)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.isTokenChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.park(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.wrap(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.compute(Object, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.getSchemeSpecificPart()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.HashSet.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeBooleans(boolean[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.5ReducingSink.combine(5ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.ensureClassInitialized(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.maxLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getDouble(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ActionEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.add(Object)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.bindSingle(MethodType, LambdaForm, LambdaForm.BasicType, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.asDoubleBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getDayOfWeek(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.acquireSharedInterruptibly(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.addRange(Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.lookupswitch($i24)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.InfoFromMemberName.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoEra.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.checkAddress(InetAddress, String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuItem.addActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.privateGetMethodRecursive(String, Class[], boolean, Class.MethodArray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.isDispatchThread()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.math.BigInteger.UnsafeHolder.putSign(BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putInt(long, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(BigInteger, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.setPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.defClone(String, CharPropertyNames.CloneableProperty)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.peekPastWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.get(float[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.sameFile(URL, URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getDouble(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.ensureCapacity(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.lookupException(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.getTarget()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(float)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.Component.removeComponentListener(ComponentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(byte[], int, int, byte)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.Itr.nextNode(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.add(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.getActions(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getCompletedTaskCount()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.isOrdered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printInteger(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.HashSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arguments(int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.createFlagMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.getPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.blockWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.singletonMap(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.parse(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.createZipEntry(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.codePointCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.setCallSiteTargetVolatile(CallSite, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.getBufferCapabilities()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.DefaultFileSystemHolder.getDefaultProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.fail(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Resource.getCodeSigners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.Debug.isOn(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setPrinterResolutionToDefault()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.security.KeyStore.size()": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.siftDownUsingComparator(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.mergeLo(int, int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Button.processActionEvent(ActionEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.addLast(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.MinguoEra.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.isLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionsEnumerator.nextElement()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.lang.Math.subtractExact(int, int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.longBuilder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.getMinSize(Container, GridBagLayoutInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.Calendar.checkDisplayNameParams(int, int, int, int, Locale, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.tableswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.Redirect.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.keyRelease(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.findCustomizerClass(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToLongTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.asCharBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.poll()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.getComponentsSync()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.isDirectionLTR()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.identity(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.getImage(URL, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.access$400(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.Period.addTo(Temporal)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getGreen(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.put(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchValuesTask.quietlyCompleteRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.tableswitch($i1)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedList.isElementIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getBounds()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.Character.isSpaceChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(PrimitiveIterator.OfInt, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.logging.Logger.finest(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getMediaWhitePoint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isLightweightOrUnknown(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getIndexedReadMethod()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isLinkerMethodInvoke(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.disableEvents(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.Debug.println(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.InetAddressCachePolicy.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isLocalOrAnonymousClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.previous()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.log(Level, Throwable, Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.getVetoableChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.setIndex(RunnableScheduledFuture, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.zeroLengthArray(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isLeapYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.clear()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.nCopies(int, Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransition.getOffsetBefore()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.isValidValue(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.preferredLayoutSize(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$1000(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getAllUnblockedWindows()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.intrinsicName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.merge(Object, Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.generateNamedFunctionInvokerImpl(MethodTypeForm)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Locale.Category.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.setupLUTs()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.ZoneId.write(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.setHead(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.KeyboardFocusManager.setGlobalActiveWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJDouble.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.set(int, Object)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.QuadCurve2D.getY1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.BindCaller.bindCaller(MethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.hasQueuedThread(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.join(long, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Window.processWindowStateEvent(WindowEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfLong.forEach(LongConsumer, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getPathIterator(AffineTransform, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.advanceProbe(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.transferStealCount(ForkJoinPool)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpEventsForFilter(Conditional, EventFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.util.DualPivotQuicksort.sort(double[], int, int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.ValueConversions.unboxWiden(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newFileSystem(URI, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendLiteral(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedCollection.checkedCopyOf(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.checkCast(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.event.MouseWheelEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawString(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.addYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.TypeAnnotationParser.buildAnnotatedSuperclass(byte[], sun.reflect.ConstantPool, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.headMap(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.setClass0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setSamples(int, int, int, int, int, float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.Atomic.casAnnotationType(Class, sun.reflect.annotation.AnnotationType, sun.reflect.annotation.AnnotationType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.actualMonthLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isStatic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isLinkLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getDataElements(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.setRequestProperty(String, String)": {
        "intra_proced": [
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "sun.misc.FloatingDecimal.appendTo(float, Appendable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.SampleModel.setSample(int, int, int, double, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.make(byte, Class, MemberName)": {
        "intra_proced": [
            "InternalError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isLenient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.shapeContextually(char[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.preferredSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "UnknownServiceException", 
            "MissingResourceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Error", 
            "IOException"
        ]
    }, 
    "java.io.ObjectOutputStream.access$500(double[], int, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.accessCheckedHandlers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.canDisplayUpTo(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextComponent.findWordLimit(int, BreakIterator, boolean, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.toPlainString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.font.AttributeValues.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createTextField(TextField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.convertCertArrayToSignerArray(Certificate[])": {
        "intra_proced": [], 
        "inter_proced": [
            "CertificateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.beans.NameGenerator.capitalize(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.setHours(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.DirectDoubleBufferS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.FileDialog.setLayout(LayoutManager)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.AnnotationSupport.getAssociatedAnnotations(Map, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getAlphaRaster(WritableRaster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getToPage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.access$700(NumericShaper.Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getBytes(ZipEntry)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.file.spi.FileSystemProvider.readAttributes(Path, Class, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.format(double, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.getOutputStream()": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.setFrameFromCenter(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.keyIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getProperties()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Dialog.setModalityType(ModalityType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(Object[], Object, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.caretIsValid(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Image.getHeight(ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm.Name, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.wrapSink(Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.toEpochDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJShort.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.hasNext()": {
        "intra_proced": [
            "UncheckedIOException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.unsetDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.add(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.setDate(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.followLinks(LinkOption[])": {
        "intra_proced": [
            "NullPointerException", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.StringBuilderHelper.getCompactCharArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.forEach(BiConsumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStrokeForEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.useCount(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.grabPixels()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.dateYearDay(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ThreadLocal.access$100(ThreadLocal.ThreadLocalMap, ThreadLocal, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.rotateRight(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.getLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.cosh(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.subSet(Object, boolean, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOrderedTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isHeldExclusively()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.needsReload(String, Locale, String, ClassLoader, ResourceBundle, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getReceiveBufferSize()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.Collections.CheckedNavigableMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.setLenient(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.charEquals(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getFixedDate(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.ProviderList.insertAt(sun.security.jca.ProviderList, Provider, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.pollAndExecCC(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getMembers(Class, String, Object, int, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.math.BigDecimal.initialValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setMedia(MediaType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.copyValue(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleUtils.isAlphaNumericString(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.internalForm()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.repaint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.setOpaque(Window, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.font.NumericShaper.getContextKey(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.keyPress(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.newInternalError(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createBuffers(int, BufferCapabilities)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.PeekInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongFixedNodeBuilder.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.externalPush(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.lang.Math.abs(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.provideVersions(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.isAncestor(ClassLoader, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.access$600(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.trimToSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.setClassAssertionStatus(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.IllegalAccessException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.setSoTimeout(int)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.Character.getDirectionality(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isAnyLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.nextFocus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toUpperCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneRegion.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.getChild(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getByName(String, InetAddress)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ClassValue.removeStaleEntries(ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.pageDialog(PrintRequestAttributeSet)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.lightweightPrint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.SubList.add(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.getFileSystem(URI)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getMouseWheelListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.ComparableTimSort.mergeForceCollapse()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.ArrayAccessor.1.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.rangeClosed(long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectFloatBufferRU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.hasKeyAttributes()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.awt.datatransfer.Clipboard.removeFlavorListener(FlavorListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getPosture()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.quote(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.Key1.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.isOdd()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.getNoFallbackControl(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJLong.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.finalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "EmptyStackException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.unlockRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.shortenSignature(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.LinkedEntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.addItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.lookupswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.OfDouble.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.DirectIntBufferRS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "sun.text.bidi.BidiBase.getRunLimit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.byteOrder()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getLockingKeyState(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "HeadlessException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.dropActionChanged(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.allocate(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.check(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.setFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.addLower(MutableBigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.runWorker(WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.internalForm()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.setNewModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.access$000()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.transfer(Node[], Node[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.compareTo(Chronology)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.lambda$static$b5a61975$1(ChronoLocalDateTime, ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.linkToTargetMethod(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "IllegalArgumentException", 
            "MethodType", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readFully(byte[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.clone()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.YearMonth.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.processItemEvent(ItemEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoubleStream.generate(DoubleSupplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setNativeFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.getInstance(String)": {
        "intra_proced": [
            "CertificateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuComponent.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getMostRecentFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.updateByteBuffer(int, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.remainingCapacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.put(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.fillRect(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getComponentVisualIndex(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.Charset.availableCharsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isFieldOrMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileLock.release()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.processWorkerExit(Worker, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.put(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Curly.match2(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.newTree(Set, DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.appendAffix(StringBuffer, String, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.checkModalityPermission(Dialog.ModalityType)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.getFileStore(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.ExtendedKeyCodes.getExtendedKeyCodeForChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.resize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.WeakHashMap.transfer(Entry[], Entry[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.destroyForcibly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.subSequence(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.setElemDouble(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.setTypedValue(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isJavaLetter(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.get(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.SharedSecrets.getJavaLangAccess()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeListenerProxy.getPropertyName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.3.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getInt(ByteBuffer, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.NativeLibrary.find(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.mail()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.ProcessEnvironment.Variable.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.writeObject(ObjectOutputStream)": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.nio.HeapFloatBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.access$100(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.io.File.getUsableSpace()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Window.setBackground(Color)": {
        "intra_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.util.function.IntPredicate.or(IntPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isConstructor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.tableswitch($c5)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.mergeHi(int, int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineSetKeyEntry(String, byte[], Certificate[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.distanceSq(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, char)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.Toolkit.SelectiveAWTEventListener.getListener()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.read(byte[], int, int, int)": {
        "intra_proced": [
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.AccessibleAWTWindow.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.solveCubic(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$900(ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.JobAttributes.getSides()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.period(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getBundle(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.setDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.push(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.PrivateKeyEntry.getCertificateChain()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.mark(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isMandated(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.removeDragSourceListener(DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BasicStroke.getDashArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.getProperties(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(String, String[], File)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IOException", 
            "IOException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.color.ICC_Profile.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.setCurve(CubicCurve2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.removeElementAt(int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapIntBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.finest(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.put(String, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parse(DateTimeParseContext, CharSequence, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "IllegalArgumentException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.awt.ScrollPane.setWheelScrollingEnabled(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingKeySpliterator.getEstimate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.LayoutPathImpl.SegmentPathBuilder.moveTo(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getInstance(sun.util.locale.BaseLocale, sun.util.locale.LocaleExtensions)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.write(Path, Iterable, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceValuesToLong(long, ToLongFunction, long, LongBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.function.DoublePredicate.or(DoublePredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermission.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.DataInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.addAdjustmentListener(AdjustmentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermission.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.putMag(BigInteger, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.parentOrNull(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.makeDouble(DoublePredicate, MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.getFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.BiConsumer.andThen(BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.setBackground(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.floorDiv(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.get(char[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.getName0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.refill()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.set(StreamOpFlag.Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.3.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.write(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IOException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.setLocale(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.verifySubclass()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Container.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.HashSet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.anyMatch(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.trailingSign(StringBuilder, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.setFont(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.put(float[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.openDatagramChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.componentAdded(ContainerEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.getAppletContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getStandardProfileFile(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.insert(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.awaitTermination(long, TimeUnit)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.time.zone.Ser.writeInternal(byte, Object, DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.UnicodeScript.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.byteValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.net.SocketImpl.accept(SocketImpl)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isJavaIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeArrays()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.net.Authenticator.requestPasswordAuthentication(InetAddress, int, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.dnd.DragSource.removeDragSourceMotionListener(DragSourceMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getComponentCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.ch.FileChannelImpl.open(FileDescriptor, String, boolean, boolean, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.parkNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.clear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getGraphics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContentHandlerPkgPrefixes()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "javax.print.attribute.standard.MediaSize.getMediaSizeForName(MediaSizeName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.peekData(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(Object[], int, int, Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Font.deriveFont(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.pop()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.io.FileOutputStream.open(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toTitleCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceParameterByCopy(int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ColorPaintContext.getRaster(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getDeclaredAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.ZonedDateTime.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.file.attribute.FileTime.fromMillis(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "DateTimeException"
        ]
    }, 
    "java.lang.Class.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.get(float[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.geom.RectangularShape.contains(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.toRangeMask(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.lookupswitch($i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getSystemEventQueueImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ReflectiveOperationException.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.builder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$2400(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.text.AttributedString.last()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.createVolatileImage(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.intValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getByName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException"
        ]
    }, 
    "java.nio.DirectCharBufferU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.isFieldSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.profile(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.version()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.relativeCCW(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.opWrapSink(int, Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.standardInit(AttributedCharacterIterator, char[], FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.SampleModel.createCompatibleSampleModel(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ContainerEvent.getChild()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.isValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.resolveInstant()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapIntBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.getAdjustmentListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.ServerSocket.getSoTimeout()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.Bits.getShort(ByteBuffer, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Image.getWidth(ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.io.CharArrayWriter.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printFloat(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DeleteOnExitHook.add(String)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.EnumMap.KeyIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.text.BreakIterator.previous()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.implCloseSelectableChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.setElemDouble(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.DefaultThreadFactory.newThread(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.merge(Object, Object, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.setSocketFactory(SocketImplFactory)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.JumboEnumSet.recalculateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.first()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.enumConstantDirectory()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NoSuchMethodException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.add(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.addTypeString(Object, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahDate.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.net.JarURLConnection.getJarEntry()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.IOException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.getMenu(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidObjectException", 
            "EOFException", 
            "EOFException", 
            "NotActiveException", 
            "ClassCastException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.date(Era, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.stream.Streams.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.getContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.SignedMutableBigInteger.signedAdd(SignedMutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.adapt(Spliterator)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.forEach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.SelectiveAWTEventListener.orEventMasks(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.computeTime()": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.GraphicsConfiguration.getDevice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.isSubclass(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.access$000(DataInputStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.io.ObjectStreamClass.tableswitch($c6)": {
        "intra_proced": [
            "InternalError", 
            "InvalidClassException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.getMostRecentFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getInsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.min(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.adjustWidth(int, Formatter.Flags, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.ensureRunBreak(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.findComponentAt(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.report(int)": {
        "intra_proced": [
            "CancellationException", 
            "ExecutionException"
        ], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Long.toUnsignedString0(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.Key.isCompatibleValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.Worker)": {
        "intra_proced": [
            "Error", 
            "ThreadPoolExecutor", 
            "Worker", 
            "ThreadPoolExecutor"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.IsoFields.getWeek(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.ofLocalizedDateTime(FormatStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.FlowLayout.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfInt.1Splitr.arraySpliterator(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.2.isSupportedBy(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarUtils.isGregorianLeapYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.readResolve()": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Checkbox.setStateInternal(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeSerialData(Object, ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "NullPointerException", 
            "InvalidClassException", 
            "InternalError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException"
        ]
    }, 
    "java.lang.SecurityManager.classLoaderDepth0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Robot.isAutoWaitForIdle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.longStream(Supplier, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getDescent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.KeySpliterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.compareAndSwapObject(Object, long, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.get(byte[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.packedBytes(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.getReadMethod()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.IndexColorModel.isCompatibleRaster(Raster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isMaximumSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.tableswitch(b0)": {
        "intra_proced": [
            "InvalidClassException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MemberName.init(Class, String, Object, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEach(long, BiFunction, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptSegDist(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.BigDecimalLayout.hasDot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getSentenceInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.doMenuEvent(long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "sun.nio.cs.StreamEncoder.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.AWTEventListenerProxy.eventDispatched(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.standardString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.SelectableChannel.register(Selector, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.initializeFocusTraversalKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.setFrame(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermissionCollection.add(Permission)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.setData(Raster)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.putFloat(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Node.truncate(long, long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "ReentrantLock", 
            "NullPointerException", 
            "ReentrantLock"
        ]
    }, 
    "java.util.ResourceBundle.getBundleImpl(String, Locale, ClassLoader, Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.TreeInfo.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.mapOldModifiers(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.match(char[], byte[], int[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.replaceAll(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.reflect.Parameter.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getAccessControlContext()": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.BundleReference.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.Cache.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.transform.TransformerFactory.setAttribute(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.finer(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.updateGenericsFor(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.linkMethodHandleConstant(byte, Class, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.LazyIterator.hasNextService()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.allowThreadSuspension(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.subMap(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.atZoneSimilarLocal(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferB.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.add(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findSetter(Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BorderLayout.addLayoutComponent(Component, Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.channels.spi.SelectorProvider.provider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.accept(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.getChar(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.lookupCharset(String)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getLocaleResources(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.tableswitch(i5)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.eq(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DelegatingSpliterator.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putLongVolatile(Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newWriter(WritableByteChannel, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.dnd.DragGestureRecognizer.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "IOException"
        ]
    }, 
    "java.util.ArrayPrefixHelpers.LongCumulateTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.RoundingMode.valueOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.FractionPrinterParser.convertFromFraction(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getAlpha(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.newSpeciesData(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermission.writeObject(ObjectOutputStream)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ShortBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCertPath(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.alignBelowBaseline(GridBagConstraints, Rectangle, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.access$200(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getNaN()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.setValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.isExternalizable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.StringEncoder.charsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getMaximizedBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.access$1200(Logger, Logger)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.annotation.ElementType.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.jar.Manifest.getEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getPositiveSuffixFieldPositions()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.LineNumberReader.mark(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "java.awt.MenuItem.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.lazySpliterator(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.isDataFlavorSupported(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.enq(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(double[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitReturnInsn(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.expr(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.removeDots(char[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.sourceSpliterator(int)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.Arrays.parallelSort(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceToDouble(long, ToDoubleBiFunction, double, DoubleBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.requestPasswordAuthentication(String, InetAddress, int, String, String, String, URL, Authenticator.RequestorType)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.save(ObjectOutputStream, String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.lang.AbstractStringBuilder.insert(int, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.net.Socket.shutdownInput()": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.JobAttributes.DefaultSelectionType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Comparator.comparing(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketOutputStream.socketWrite(byte[], int, int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException", 
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.awaitUninterruptibly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.getHostString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.asWrapperType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.charsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.unread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.binarySort(Object[], int, int, int, Comparator)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.getGestureModifiersEx()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.withEarlierOffsetAtOverlap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.addElement(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.PriorityQueue.PriorityQueueSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.VKCollection.findCode(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.enumerate(ThreadGroup[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.StringReader.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.inflated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.lambda$readConfigProperties$88(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "com.sun.beans.TypeResolver.resolveInClass(Class, Type[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getGenericExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(short[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.bindCaller(MethodHandle, Class)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "sun.awt.SunToolkit.isDispatchThreadForAppContext(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addComponentListener(ComponentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.nextFloat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.setNativeFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.checkResolve(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.lastEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.addDragSourceMotionListener(DragSourceMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.signalWork(ForkJoinPool.WorkQueue[], ForkJoinPool.WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.setTime(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.parseHierarchical(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiplyAndRound(long, long, int, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.io.BufferedInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "IOException"
        ]
    }, 
    "java.awt.PageAttributes.getPrintQuality()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.treeify(HashMap.Node[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findStatic(Class, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.removeElement(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.AccessibleObject.getDeclaredAnnotations()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.submit(Runnable)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.createEntry(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(long, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.MinguoDate.toEpochDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.negate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.newPixels()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.getIterator(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.adjustForGravity(GridBagConstraints, Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.AdaptedRunnableAction.setRawResult(Void)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.XmlSupport.save(Properties, OutputStream, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Variable.valueOfQueryOnly(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeBlockHeader(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuffer.lastIndexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentMap.compute(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.setMultipleSelections(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getAlignment()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getPrimDataSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.access$200(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.addDisjoint(MutableBigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuComponent.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "sun.net.www.ParseUtil.encodePath(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.Float.setRoundRect(float, float, float, float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeBoolean(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.setOldModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.getContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.flattenInt(Node.OfInt)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfo.getOffsets(long, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.access$900()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findConstructor(Class, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.isLinearRGBspace(ColorSpace)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getOpacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.SystemClock.millis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.getUnchecked(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.getPreferredSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.makeReinvokerForm(MethodHandle, int, Object, String, boolean, NamedFunction, NamedFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.initializeSystemTrayIfNeeded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.pointRelativeToComponent(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeChars(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.childrenNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.OptionalInt.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getRunStart(AttributedCharacterIterator.Attribute)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readShort()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.net.URLConnection.getHeaderField(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.getParentDelegationTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.forEach(LongConsumer)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.unorderedSkipLimitSpliterator(Spliterator.OfInt, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.FocusTraversalPolicy.getComponentBefore(Container, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.nextAfter(double, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.SocketInputStream.socketRead(FileDescriptor, byte[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.asFixedArity()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.OfRef.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getNumBands()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.truncate(long, long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.getImageableY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.lookupswitch(c4)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.security.BasicPermission.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.MaskBuilder.mask(Type, Integer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontResolver.getFontIndex(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectFloatBufferS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.Container.postEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.elementAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.skipRemainingSiblings()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.lookupswitch($i13)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentType(BoundMethodHandle, int, LambdaForm.BasicType)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.lookupClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.getListeners(EventListener, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.inside(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivilegedWithCombiner(PrivilegedAction, AccessControlContext, Permission[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectMethodCommon(byte, Class, MemberName, boolean, boolean, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.enumerate(Thread[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Nodes.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProvidersNotUsingCache(String, String, String, String, Provider[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.replaceAll(UnaryOperator)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.batchRemove(Collection, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.getMembers(Class, String, String, int, Class, int, MemberName[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.equals(boolean[], boolean[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.eraOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedCharacterIterator.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.solveQuadratic(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.checkButtonsArgument(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.parse(String)": {
        "intra_proced": [
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.YearMonth.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.GregorianCalendar.getMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getRunLimit(AttributedCharacterIterator.Attribute)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.add(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.offsetByCodePoints(char[], int, int, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.font.AttributeValues.getJustification(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnsupportedEncodingException.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.flattenInt(OfInt)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedKeyTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ImageFilter.getFilterInstance(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.security.PermissionCollection.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.nextDown(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.adjustInto(Temporal)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredFields0(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.flatMapToInt(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.CacheKey.setLocale(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Float.curveTo(float, float, float, float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.internalMemberName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.Point.setLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.x509.X509CertImpl.getExtendedKeyUsage(X509Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.Cache.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEntrySet.2.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.tableswitch(i1)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "FormatterClosedException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.ChangeListenerMap.getListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.io.File.setReadOnly()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Collections.addAll(int, Collection)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.checkList(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getActionCommandImpl(MenuItem)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.contentsLost()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getOffset(int, int, int, int, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahDate.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandleInfo.referenceKindToString(int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.logging.LogManager.getConstructor(Class, Class[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.text.DateFormatSymbols.getEras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.lookupswitch($i2)": {
        "intra_proced": [
            "ZipException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.flush(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.io.ObjectInputStream.GetField.get(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeHandle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDragEvent.rejectDrag()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.put(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.eras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setBounds(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.resolveDate(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJObject.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.getContainingWindow(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.regex.ASCII.isAlnum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.checkInvocationCounter()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.Integer.numberOfLeadingZeros(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.floorDiv(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermissionCollection.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.StrictMath.tan(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentL(BoundMethodHandle, int, Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Container.setMinimumSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.entrySet()": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.dispatchAndCatchException(Throwable, Component, FocusEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.getVersions(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ZoneRulesException", 
            "ZoneRulesException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.connectToAddress(InetAddress, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "NullPointerException", 
            "InetAddress", 
            "SocketException", 
            "AbstractPlainSocketImpl", 
            "AbstractPlainSocketImpl", 
            "AbstractPlainSocketImpl"
        ]
    }, 
    "java.util.TreeMap.navigableKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.TzdbZoneRulesProvider.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.resolveWoY(Map, Chronology, int, long, int, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.removeEq(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.sieveSingle(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.LineIterator.currentSegment(float[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.grow(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.asShortBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.ToolkitEventMulticaster.getListeners(EventListener, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermissionCollection.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.Charset.defaultCharset()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalCharsetNameException", 
            "IllegalCharsetNameException"
        ]
    }, 
    "java.util.SimpleTimeZone.inDaylightTime(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.ListItr.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.util.CoreResourceBundleControl.getRBControlInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getBottommostComponentIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitReturnInsn(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.setExecutable(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.getDirectMethodNoSecurityManager(byte, Class, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.put(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.put(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.AccessibleAWTContainer.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.isAfter(MonthDay)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessBuilder.directory(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getStringBounds(String, int, int, Graphics)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.awt.SunToolkit.createTrayIcon(TrayIcon)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.List.replaceAll(UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.yearToEpochMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.get(char[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "Error"
        ]
    }, 
    "java.util.regex.Pattern.access$600(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.internalSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.emptyIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.getReceiveBufferSize()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.generateConcreteBMHClass(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.rangeRefinedBy(TemporalAccessor)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Policy.getPolicyNoCheck()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.withInternalMemberName(MemberName, boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.getUnion(Region)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getMinimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyFromCharArray(Object, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setDefaultUncaughtExceptionHandler(Thread.UncaughtExceptionHandler)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.StrictMath.remainder(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.overwrittenEntry(ClassValue.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.findOffsetInfo(LocalDateTime, ZoneOffsetTransition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getRGB(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapKeyIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleServiceProviderPool.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.checkAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.TreeMap.subHigher(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logging.setLoggerLevel(String, String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.awt.List.replaceItem(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DoubleBuffer.compareTo(DoubleBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.canonicalize0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.toWeekDay(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getDaylightSavings(Instant)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Checkbox.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.nameRefsAreLegal()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.DirectColorModel.isAlphaPremultiplied()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.isVarArgs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addKeyEventDispatcher(KeyEventDispatcher)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getTransition(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar.Date, int, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.stream(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.matches()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(double[], int, int, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.access$1200(Window, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "HeadlessException"
        ]
    }, 
    "java.io.BufferedWriter.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FocusTraversalPolicy.getLastComponent(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.tryRemoveAndExec(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createBandedRaster(DataBuffer, int, int, int, int[], int[], Point)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "EOFException"
        ]
    }, 
    "java.io.PrintStream.println(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.linkMethodHandleConstant(byte, Class, String, Object)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.math.BigDecimal.divideAndRemainder(BigDecimal, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.CharacterData00.getPropertiesEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.prolepticYear(Era, int)": {
        "intra_proced": [
            "ClassCastException", 
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.isContextual()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.copyElements(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Formatter.formatMessage(LogRecord)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.util.Vector.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createWritableRaster(SampleModel, Point)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.setSample(int, int, int, double, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.setSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getBytes(Charset)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "Error", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.getListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.getAndUpdate(LongUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.compute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.SystemColor.updateSystemColors()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.ThreadGroup.stop()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapShortBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isModalExcluded(Dialog.ModalExclusionType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendInstant(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.print(byte, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.handleReset()": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectIntBufferRS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setGlobalFocusedWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.getX2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.opEvaluateParallelLazy(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isMethodHandleInvokeName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.getEpochSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeCbmhCtor(Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setLogManager(LogManager)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.update(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.interrupt0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.getTransform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.getIndex(Entry[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createInterleavedRaster(int, int, int, int, int, int[], Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.unordered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AppContext.getAppContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.restrictProtectedReceiver(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.setLoggerName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.EventListenerAggregate.getListenersCopy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.indexOf(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getFocusTraversalPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getISO3Country()": {
        "intra_proced": [
            "MissingResourceException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ResourceBundle.clearCache(ClassLoader)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.mapToDouble(ToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.FilteredImageSource.requestTopDownLeftRightResend(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PrimitiveIterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceValuesToDouble(long, ToDoubleFunction, double, DoubleBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.MenuItem.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.LongSummaryStatistics.combine(LongSummaryStatistics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.decode(String)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.awt.image.WritableRaster.getSampleModelTranslateY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.math.BigInteger.modPow(BigInteger, BigInteger)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.YearMonth.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.reduceCacheLoad()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.privateGetPublicMethods()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchEntriesTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.argument(int, LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.attach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getNextFocusCandidate()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DropTargetDragEvent.getLocation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.hasAllPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.time.ZoneId.getDisplayName(TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.prefixLength(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.setExtra(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Window.getObjectLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkConnect(String, int, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "AccessControlException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.System.setSecurityManager0(SecurityManager)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Component.canBeFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.submit(Runnable)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "NullPointerException", 
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.time.chrono.MinguoChronology.date(Era, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.nio.DirectByteBuffer.put(ByteBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ]
    }, 
    "java.util.zip.Inflater.setDictionary(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.time.format.Parsed.resolvePeriod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.setSigners(Class, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.removeParameter(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.getInt(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.scale(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.computeTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.put(long[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.time.temporal.TemporalAdjusters.nextOrSame(DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.appendNull()": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.DirectShortBufferU.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.selector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getQuadrantRotateInstance(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.subSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Integer.hashCode(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJByte.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.getWriteMethod()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "sun.misc.Launcher.getBootstrapClassPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceKeysTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parse(CharSequence, ParsePosition)": {
        "intra_proced": [
            "DateTimeFormatter"
        ], 
        "inter_proced": [
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.lang.Exception.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.isMulticastAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getNumberFormatProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.defineSchemeSpecificPart()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.Console.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(Comparable[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Collections.UnmodifiableList.listIterator(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkSpecialCaller(Class)": {
        "intra_proced": [
            "MemberName"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.DatagramSocket.getSendBufferSize()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.add(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.digest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isProtected()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.readResolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.mixOnShowing()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Permission.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.Atomic.casReflectionData(Class, SoftReference, SoftReference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.AreaAveragingScaleFilter.calcRow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.putSign(BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.interpretName(LambdaForm.Name, Object[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.signatureReturn(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.DialogType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.reduce(IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.removeAll()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.color.ICC_ProfileRGB.getMediaWhitePoint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.setUnicast(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getExtendedKeyCodeForChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.canContainFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.date(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mixOnShowing()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.round(MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.lastIndexOf(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.copyOf(EnumSet)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.ObjectStreamField.getSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.pushRun(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.put(long[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getHumanPresentableName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.createBitsArray(int[], int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.resolveOrFail(byte, Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.flushFromCaches(Class)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.setMostRecentFocusOwner(Window, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.itemStateChanged(ItemEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.setMultipleMode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.printComponents(Graphics)": {
        "intra_proced": [
            "Graphics"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.checkPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedEntryTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.asFloatBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getCalendarType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.siftDownComparable(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ComparableTimSort.sort(Object[], int, int, Object[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.math.BigInteger.byteValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getSystemResources(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.awt.Menu.getItemImpl(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.WeakCache.get(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.registerTextFlavorProperties(String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getByIndex(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)": {
        "intra_proced": [
            "InternalError", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.Window.setLocationRelativeTo(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "Error", 
            "Error", 
            "Error", 
            "IllegalAccessException"
        ]
    }, 
    "sun.misc.SharedSecrets.getJavaIOAccess()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.TempFileHelper.createTempFile(Path, String, String, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.prefs.Base64.byteArrayToBase64(byte[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.MediaTracker.addImage(Image, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.format(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.logging.LogManager.removeLoggerRef(String, LogManager.LoggerWeakRef)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.File.exists()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.GraphicsDevice.getDefaultConfiguration()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.enable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.deriveFont(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.isCertificateEntry(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Math.hypot(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.alignAboveBaseline(GridBagConstraints, Rectangle, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getForeground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.set(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleUtils.caseIgnoreMatch(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.AreaAveragingScaleFilter.setPixels(int, int, int, int, ColorModel, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.ServerSocketChannel.open()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOrderedTask.doCompute(ForEachOrderedTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getReferenceKind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.getAndAccumulate(long, LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.Transferer.transfer(Object, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.awt.image.SampleModel.getDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.createDropTargetContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.compare(ObjectStreamClass.MemberSignature, ObjectStreamClass.MemberSignature)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFully(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getMethodType()": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.print.PageFormat.setPaper(Paper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.newThread(Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalThreadStateException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.YearMonth.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketBind(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.getEntry(ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLayout.checkTextHit(TextHitInfo)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.severe(String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.asin(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredConstructors0(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.put(IntBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getTable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.unreflectSpecial(Method, Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitSelectAlternative(LambdaForm.Name, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.setUncaughtExceptionHandler(UncaughtExceptionHandler)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getCachedAddresses(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectLongBufferS.get(long[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "Error"
        ]
    }, 
    "java.security.UnresolvedPermission.getUnresolvedCerts()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.tableswitch($i0)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Random.doubles()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DoubleWrappingSpliterator.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.createBitsArray(int, int, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Constructor.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.removeEntry(ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypeSlots()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getDataElements(float[], int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.union(Rectangle2D, Rectangle2D, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.GeneralPath.closePath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.grow()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermissionCollection.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getShort(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.setBlocker(Thread, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setDataElements(int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.EnumSet.clone()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.image.AreaAveragingScaleFilter.setPixels(int, int, int, int, ColorModel, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getMultipleDocumentHandling()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.peek(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.lookupswitch($i1)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.getFocusTraversalKeys(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.OffsetTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.valueOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isVolatile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.paramString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.isVarargsCollector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.siftDown(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(long[], long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i106)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.put(short[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.log(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.isLeftmostNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.previousTransition(Instant)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.MinguoDate.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachMappingTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.unsuspendSomeThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.byteValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MathContext.readObject(ObjectInputStream)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.awt.font.TextLine.getCharLinePosition(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetNext(Node, Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.coerceData(WritableRaster, boolean)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.font.GlyphVector.getGlyphCharIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.replacementNode(HashMap.Node, HashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getSelectedItems()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.transform(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.deProxyAWTEventListener(AWTEventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.needsClassLoaderPermissionCheck(ClassLoader, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.mulsub(int[], int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfPrimitive.initStack()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.rebind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isPreferredSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getObject(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readSerialData(Object, ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InvalidClassException", 
            "InternalError", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.awt.EventQueue.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.LongArraySpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfo.isDirty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getSystemTimeZoneID(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceKeysTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.toOctalString(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWIterator.hasPrevious()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSupport.doubleStream(OfDouble, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.get(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypes(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.JarURLConnection.getManifest()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.resolveAligned(ChronoLocalDate, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.createUnion(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeLongUTF(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.longValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ExecutorCompletionService.submit(Callable)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Double.doubleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.removeTreeNode(TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.extract(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getTextListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.zip.CRC32.update(ByteBuffer)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.lang.Throwable.addSuppressed(Throwable)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.contains(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.compareMagnitude(long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Menu.add(MenuItem)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.TreeMap.pollLastEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.Rectangle.inside(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getTcpNoDelay()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferL.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.isShared()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.toEpochDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.keepLower(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.loadInstalledProviders()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.awt.datatransfer.Clipboard.setContents(Transferable, ClipboardOwner)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.zip.Inflater.inflate(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.time.ZonedDateTime.getMinute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.match0(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermission.readObject(ObjectInputStream)": {
        "intra_proced": [
            "NullPointerException", 
            "ClassNotFoundException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "CertificateException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.lang.Math.floorMod(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.scanEscape(int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.reset()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.Platform.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.getBounds2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.Head.isParallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toBigInteger(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DigitList.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isMCGlobal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AlphaComposite.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.convertNumberToI18N(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileDescriptor.attach(Closeable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeLongSpliterator.splitPoint(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(StringBuilder, TemporalAccessor, char, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.isLocalClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogRecord.setSourceMethodName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getFields(Class, boolean, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i12)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Toolkit.createPropertyChangeSupport(Toolkit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.bind(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntStream.generate(IntSupplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.getQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.parameterSlotCount()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.security.MessageDigest.update(byte[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeByte(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.DoubleUnaryOperator.andThen(DoubleUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isAlwaysOnTopSupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.security.Provider.Service.getImplClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getShortDescription()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getButton()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.getInstance(String, Provider)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.FileInputStream.close0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleServiceProviderPool.getAllAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.join(InetAddress, NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getUnsafe()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.invokeAll(Collection)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.image.DirectColorModel.getGreen(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.ensureAllDefaultLoggers(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEach(long, BiConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.time.zone.Ser.readEpochSec(DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.curveTo(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isPunct(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarInputStream.createZipEntry(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EventObject.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.getBounds2D()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.multiply(MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(Name, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.negated()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.regex.Matcher.regionEnd()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.LinkedValueIterator.nextNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.processSynchronousLightweightTransfer(Component, Component, boolean, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.accumulateAndGet(int, IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.CumulateTask.getCompleter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.spliterator(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.SystemColor.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.Double.closePath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.destroyBuffers()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.tableswitch($i6)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.temporal.WeekFields.resolveWoY(Map, Chronology, int, long, int, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.BaseSpliterator.arrayForOne(Object, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.newCondition()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setTimeZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachValueTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getSelectedItem()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapByteBufferR.asShortBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.thenComparing(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Exception.addSuppressed(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.buildEmptyNames(int, String)": {
        "intra_proced": [
            "AssertionError", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.has(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfDouble.makeChild(Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setTimeOfDay(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ItemEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.get()": {
        "intra_proced": [], 
        "inter_proced": [
            "InterruptedException"
        ]
    }, 
    "java.lang.StrictMath.floorOrCeil(double, double, double, double)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBufferR.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.ResourceBundle.getObject(String)": {
        "intra_proced": [
            "MissingResourceException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MissingResourceException"
        ]
    }, 
    "java.time.format.DateTimeParseContext.setStrict(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.ofBothArrays(Kind, int[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.cachedMethodHandle(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.MenuItem.handleShortcut(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.isUserNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.ArrayList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypeSignature(MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.select(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.commonNeedIncrement(int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.maybeBindCaller(MemberName, MethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "MethodHandleStatics", 
            "ClassCastException", 
            "AssertionError"
        ]
    }, 
    "sun.awt.HeadlessToolkit.isTraySupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.x509.X509CertImpl.getIssuerAlternativeNames(X509Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.access$000(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Dialog.ModalityType.compareTo(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getBytes(int, int, byte[], int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(byte[], byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.lengthOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getInvocationType()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Component.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.isLenient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.isOpen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getGray16TosRGB8LUT(ICC_ColorSpace)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.contains(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.ToolkitEventMulticaster.remove(AWTEventListener, AWTEventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofMillis(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.explicitCastEquivalentToAsType(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.fail(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.nextInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.initDefault(Locale.Category)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Nodes.copyInto(double[], int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getImageableY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getAdjustmentListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.util.locale.provider.LocaleResources.getJavaTimeFormatData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.setInternationalCurrencySymbol(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.QuadCurve2D.subdivide(QuadCurve2D, QuadCurve2D, QuadCurve2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.getAvailableDataFlavorSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.PipelineHelper.wrapAndCopyInto(Sink, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.write(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.io.CharArrayWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.reverseOrder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeStreamHeader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.classValueOrNull()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.of(Kind, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.image.ReplicateScaleFilter.setProperties(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.getLocalizedResource(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.nio.CharBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.toLower(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.closeSplashScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putDouble(Object, long, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.opEvaluateParallel(PipelineHelper, Spliterator, IntFunction)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.access$100(DateTimeFormatter, CharSequence, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.file.Files.AcceptAllFilter.accept(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.toUpperCaseCharArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureClassLoader.defineClass(String, byte[], int, int, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.processTextEvent(TextEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionCollection.setReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.newCalendarDate(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.getLocalResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.isAccessible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.removeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createDialog(Dialog)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.isLeftmostNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyToCharArray(long, Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.io.ObjectInputStream.GetField.get(String, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.write(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.assertStaticType(Class, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.checkIsScreenDevice(GraphicsDevice)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.retainAll(Collection)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToLongTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getConstructor(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Nodes.SpinedNodeBuilder.ensureCapacity(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.KeyIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.io.ObjectInputStream.doCallbacks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.add(Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(Class, MethodHandle, String, MethodType, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.setCurve(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.CalendarDataUtility.retrieveFieldValueNames(String, int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchValuesTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getBackBuffer()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.BaseSpliterator.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isGuardWithCatch(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isCntrl(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.checkParentAccess(ThreadGroup)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.BorderLayout.getChild(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.readInternal(byte, DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.add(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.file.spi.FileSystemProvider.getScheme()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.2.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getPrngAlgorithm()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.calculateCurrentShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getLongB(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.setIndexedWriteMethod0(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.tableswitch(i2)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Float.parseFloat(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.access$400(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.explicitCastArguments(MethodHandle, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "WrongMethodTypeException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Integer.toHexString(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.newBundle(String, Locale, String, ClassLoader, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.join(CharSequence, CharSequence[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.Era.getDisplayName(TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.HashMap.comparableClassFor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.GenericBeanInfo.getIcon(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setSamples(int, int, int, int, int, double[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.get(int, int, int, Locale)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.removeVetoableChangeListener(String, VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.collectInt(PipelineHelper, Spliterator, boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getCanonicalHostName()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.event.FocusEvent.isTemporary()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.smallToString(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferL.put(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.asIntBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Robot.mouseMove(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isPreferredSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.reset()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.net.NetworkInterface.supportsMulticast0(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.DebugTraceInfoStack.pop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.putDouble(byte[], int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getSeconds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.resolveClass(ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.IdentityHashMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.getWaitingThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.emptyConsumer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyChangeEvent.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.checkCoalescing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.EventQueue.invokeLater(Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.addArguments(int, BasicType[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.interrupt()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindDoesDispatch(byte)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedList.removeFirst()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.isProxy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.getKeyFromMask(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.targetCheck(Object)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setSamples(int, int, int, int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GraphicsEnvironment.getScreenDevices()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.UnicodeProp.forPOSIXName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.HeapByteBuffer.put(int, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferShort.getBankData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.permutedTypesMatch(int[], LambdaForm.BasicType[], LambdaForm.Name[], int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.fromCIEXYZ(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.afterTopLevelExec()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getPathIterator(AffineTransform, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.tableswitch($i4)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapByteBuffer.getShort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.isFixedOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.addPropertyDescriptors(PropertyDescriptor[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.io.File.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.timeLineOrder()": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.reflect.generics.repository.ClassRepository.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.trailingZeros(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.EnumSetIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.get(int[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Random.readObject(ObjectInputStream)": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.jar.JarFile.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.access$800(LogManager)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.growArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.enqueueNodeAddedEvent(Preferences)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.processFocusEvent(FocusEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getComponents(StyledParagraph, char[], int, int, int[], byte[], sun.font.TextLabelFactory)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextHitInfo.equals(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.getRunStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.setLayout(LayoutManager)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseStrict()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.intersectsLine(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toUpperCaseEx(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newBufferedReader(Path, Charset)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.stream.FindOps.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.codePointAt(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getMethod(Class, String, Class[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.nio.ByteBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setUnnormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.getBoolean(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.prefs.XmlSupport.writeDoc(org.w3c.dom.Document, OutputStream)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.read(byte[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.reduceCacheLoad()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.color.ColorSpace.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getInstance(String, Provider)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "KeyStoreException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.net.URI.Parser.takeIPv4Address(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.tick(Clock, Duration)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.math.BigDecimal.toBigIntegerExact()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.image.WritableRaster.setDataElements(int, int, int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.FactoryURLClassLoader.loadClass(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchEntriesTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.init(String, GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.crossCheck(TemporalAccessor)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.LayoutPathImpl.pointToPath(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCoreMetricsAt(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.CodeSigner.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.CacheKey.getFormat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.lookupConstraints(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.spliterator(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassLoader.resolveClass0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.limit(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.DoubleWrappingSpliterator.doAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.getNode(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.SelectiveAWTEventListener.getCalls()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.getNegativeSign()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.setColor(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.parse(String, sun.util.locale.ParseStatus)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.thenComparingLong(ToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Window.setGraphicsConfiguration(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "Error", 
            "Error", 
            "IllegalAccessException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarFile.getEntry(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.copyWithExtendJ(MethodType, LambdaForm, long)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.io.FileInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getMonthLength(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendInternal(DateTimePrinterParser)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.match(CharSequence, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withDayOfYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.insertName(int, LambdaForm.Name, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.spi.NumberFormatProvider.getCurrencyInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.grabPixels(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.lambda$distinct$181(Double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.distance(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.loadLoggerHandlers(Logger, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.convertToRGB()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getRGBComponents(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.mapToInt(DoubleToIntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFloat()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.makeArrayElementAccessor(Class, boolean)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.setSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.addExact(long, long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.getListeners(EventListener, Class)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.setModalBlocked(Dialog, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.evaluate(Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectShortBufferU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.Temporal.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.LinkedHashMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.LinkedHashMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.subBytes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setRequestFocusController(sun.awt.RequestFocusController)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.run()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "Error", 
            "AssertionError", 
            "IOException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ReentrantLock", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "ClassNotFoundException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.security.SecureRandom.next(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setDataElements(int, int, Raster)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.updateChildFocusableWindowState(Window)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.nextEntry()": {
        "intra_proced": [
            "NoSuchElementException", 
            "ConcurrentModificationException", 
            "NoSuchElementException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.advanceRunState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isMCSiteLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isSiteLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.access$1200(EnumMap, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int, int, ImageCapabilities)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTException"
        ]
    }, 
    "sun.util.calendar.ZoneInfo.getAvailableIDs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newByteChannel(Path, Set, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.descendingMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newReader(ReadableByteChannel, CharsetDecoder, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.TreeMap.higherEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.security.BasicPermission.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.setFullBufferUpdates(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.setSeconds(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.misc.FloatingDecimal.toJavaFormatString(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.set(int, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.setTabAt(ConcurrentHashMap.Node[], int, ConcurrentHashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createDesktopPeer(Desktop)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.checkInvariants()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getCandidateLocales(String, Locale)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.doLog(LogRecord)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Stack.search(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.defaultReadObject()": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": [
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException"
        ]
    }, 
    "java.util.regex.Pattern.closure(Pattern.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.appendTo(StringBuilder, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Toolkit.createDragSourceContextPeer(DragGestureEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.access$200(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.decode(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt.acceptConsumed(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Socket.getPort()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "javax.swing.Timer.setCoalesce(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.stopLWModal()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.Container.getOpaqueShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTime.lookupswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.invokeBasicMethod(MethodType)": {
        "intra_proced": [
            "AssertionError", 
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.ZoneId.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "IllegalStateException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.jar.JarFile.isKnownNotToHaveSpecialAttributes()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.MonthDay.of(Month, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.util.EnumMap.access$1600(EnumMap, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.removeIf(Predicate)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Security.isConstraintSatisfied(String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamClass.5.compare(MemberSignature, MemberSignature)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putIntL(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.setSecurityManager(SecurityManager)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Container.addDelicately(Component, Container, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.net.ServerSocket.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.putDouble(String, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.stream.MatchOps.MatchTask.getEmptyResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.list()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Spliterators.LongIteratorSpliterator.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.deriveFont(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.unmaskNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.WeekBasedFieldPrinterParser.printerParser(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.isFrameStateSupported(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getEraIndex(sun.util.calendar.LocalGregorianCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.classFileEpilogue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.XmlSupport.importMap(InputStream, Map)": {
        "intra_proced": [
            "InvalidPreferencesFormatException", 
            "InvalidPreferencesFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.TrayIcon.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getHost()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.expungeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.open(File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.setMostRecentFocusOwner(Window, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putShort(long, short, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.mergePermissions()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.filterReturnForm(LambdaForm.BasicType, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransition.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.mutableModInverse(MutableBigInteger)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.inflateSpine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.PipelineHelper.getStreamAndOpFlags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.baseIsLeftToRight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.adjustScale(int, long)": {
        "intra_proced": [
            "NumberFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Color.getComponents(ColorSpace, float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.skip(long)": {
        "intra_proced": [
            "DeferredCloseInputStream", 
            "DeferredCloseProcessPipeInputStream"
        ], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IOException", 
            "OutOfMemoryError", 
            "IOException"
        ]
    }, 
    "java.nio.DirectLongBufferRU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.cancelLaterNodes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getCurrency()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.ContentHandler.getContent(URLConnection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.FilteredImageSource.startProduction(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.BindCaller.restoreToType(MethodHandle, MethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.assertMemberIsConsistent()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.nio.FloatBuffer.put(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$1400(long, long, long, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.finishEntry(ClassValue, ClassValue.Entry)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.Type.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isModal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.of(int)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.EnumSet.of(Enum)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.net.URLConnection.readBytes(int[], int, InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipCoder.toStringUTF8(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.text.DecimalFormatSymbols.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getLinearGray16ToOtherGray8LUT(ICC_ColorSpace)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setPageIncrement(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.util.stream.FindOps.makeRef(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getAvailableIDs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.setRenderingIntent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.enableInputMethods(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.put(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.isHeldExclusively()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.TempFileHelper.generatePath(String, String, Path)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.create(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.beans.Introspector.findMethod(Class, String, int, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.newArrayArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.get(char[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "Error"
        ]
    }, 
    "java.net.URL.openConnection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.copyIntoWithCancel(Sink, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.getBitDepth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.getNameString(MethodHandle, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.appendTo(StringBuilder, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.findResource(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToIntTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.put(FloatBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "BufferOverflowException", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.add0(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValue(TemporalField, int, int, SignStyle)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachKeyTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getAndAddInt(Object, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StackTraceElement.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceName(int, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager(sun.awt.AppContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.getPeer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.removePropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.linkLast(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.range()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectStreamClass.invokeReadResolve(Object)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.Formatter.print(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.solveCubic(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.WeakHashMap.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SortedOps.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.getTTL()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.add(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.processWindowFocusEvent(WindowEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.readAllBytes(Path)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": [
            "OutOfMemoryError", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.recursiveApplyCurrentShape(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.TextComponent.getSelectionEnd()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.format(Date)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchMappingsTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.callable(Runnable, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceValuesTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setModalExclusionType(ModalExclusionType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.NoSuchFieldException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getConfigurations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.tryLock(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "sun.misc.Unsafe.park(boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.HijrahDate.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.nio.HeapByteBuffer.asCharBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getMimeType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setMaximizedBounds(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.subCeiling(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.singleton(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.dispatchEventImpl(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.bigDigitLength(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.reflect.AccessibleObject.slowCheckMemberAccess(Class, Class, Object, int, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.KeyX.equals(WeakReference[], WeakReference[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.getSurplusQueuedTaskCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.access$100(URLClassLoader, String, sun.misc.Resource)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "SecurityException", 
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.TemporalQueries.localTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.isReachable(NetworkInterface, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.makeAccessException()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.schedule(Callable, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.util.SimpleTimeZone.getTransition(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar$Date, int, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.1.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.ofDefaultLocale()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.EnumSet.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URL.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoUnit.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.getForClass(String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.dynamicInvoker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.tryRelease(long, ForkJoinPool.WorkQueue, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setSample(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableNavigableSet(NavigableSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getPixels(int, int, int, int, float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.set(int, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.image.DirectColorModel.tableswitch($i24)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractList.set(int, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJLong.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.getterFunction(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.startDrag(Cursor, Transferable, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer"
        ]
    }, 
    "java.nio.charset.Charset.encode(CharBuffer)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.Formatter.print(BigDecimal, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.access$100(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.getParameters()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.TimSort.mergeCollapse()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.OffsetDateTime.toEpochSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.yield()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.access$100(EventQueue, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.WindowEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readNull()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.setState(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.startProduction(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.hashCode(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.nextGetIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getVKCollection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.getRegion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getCurrentAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.toArray()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.putShort(long, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getLineMetrics(String, Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.getAndUpdate(UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getLower(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ThreadLocal.remove(ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.Temporal.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.flatten(Node, IntFunction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newFileSystem(Path, Map)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.opEvaluateParallelLazy(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(WindowStateListener, WindowStateListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.expand(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.canonicalize(MethodType, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.lookupswitch($i7)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readExternalData(Externalizable, ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.getFontOrGraphicAt(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.Bidi.createLineBidi(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOfRange(float[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.reshapeNativePeer(int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.unmappableCharacterAction()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.compareTo(ChronoZonedDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.daysUntil(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.image.ImageFilter.resendTopDownLeftRight(ImageProducer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.leftShape(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getMostRecentEventTime()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.security.SecureRandom.setSeed(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.handleException(NoSuchAlgorithmException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.lineSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getInstance(String, String, String, String, sun.util.locale.LocaleExtensions)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isPublic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.asArray(IntFunction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.WeakCache.get()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.im.InputContext.disableNativeIM()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.arrayLength(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.removeRange(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.invalidateTree()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.access$200(Iterator, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.createIntersection(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.deepEquals0(Object, Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.abs(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.mapToObj(DoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.compareTo(Instant)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setGregorianChange(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ApplicationShutdownHooks.add(Thread)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.access$100(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.get(long)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.doSort(float[], int, int, float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.getCommonPoolParallelism()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.growEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$1500(ZipFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.setPara(AttributedCharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.enable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.compareTo(Long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.deepEquals(Object[], Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.security.cert.Certificate.writeReplace()": {
        "intra_proced": [
            "NotSerializableException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.ReflectAccess.getConstructorSignature(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.add(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.lookupswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.math.BigDecimal.bigTenToThe(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.LongSummaryStatistics.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.supportsUrgentData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.WeekFields.weekBasedYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.getMasks()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Timer.purge()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.interrupted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.URI.Parser.checkChar(int, long, long, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Variable.valueOfQueryOnly(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.checkScale(BigInteger, long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.findAny()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.newTable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.set(JobAttributes)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimerThread.mainLoop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.getDragAction()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.caseInsensitiveRangeFor(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.TextArea.setColumns(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.XmlSupport.loadProviderAsService(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicType(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.arrayLength(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getAllStackTraces()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.newIndexOutOfBoundsException(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.FileSystem.getBooleanProperty(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Polygon.contains(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getParent(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.LongArraySpliterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.of(Kind, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.addTo(Temporal, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isAnyLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SortedOps.makeDouble(AbstractPipeline)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getTransitions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.forEachOrdered(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.SubList.listIterator(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.mantissa()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.EmptySpliterator.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setFocusTraversalPolicy(FocusTraversalPolicy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.getQueue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypeChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.setGlobalActiveWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.unordered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getObjectVolatile(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.increaseComponentCount(Component)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.getLocation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isWindowShapingSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.replaceAll(BiFunction)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.toZonedDateTime()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.logging.Handler.publish(LogRecord)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.show(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getAnonymousLogger(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Toolkit.setLockingKeyState(int, boolean)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "HeadlessException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.of(String)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.replaceAll(BiFunction)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.access$000()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.getDouble(String, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.logging.LogManager.doSetParent(Logger, Logger)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.toString()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractCollection.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.initializeVerifier()": {
        "intra_proced": [
            "JarException"
        ], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.TemporalQueries.lambda$static$95(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.Thread.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractQueue.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.forDecoder(ReadableByteChannel, CharsetDecoder, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.NameGenerator.unqualifiedClassName(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.subMap(Object, boolean, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.addInterfaceMethods(Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.loadLibraries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.addChronoChangedListener(Consumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.IdentityHashMap.KeySpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getTimeZone(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.BasicPermissionCollection.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.security.AccessControlContext.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.KeyEvent.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfInt.newArrayArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.removeFirst()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Byte.compare(byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permission.newPermissionCollection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.get(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.lang.reflect.Parameter.getName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.AbstractWrappingSpliterator.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.println(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.isQuiescent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceFunctions(LambdaForm.NamedFunction[], LambdaForm.NamedFunction[], Object[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.run()": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "IOException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.lang.Thread.getUncaughtExceptionHandler()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.setSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.trustedStripLeadingZeroInts(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getBreakInstance(Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.lookup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.setAnimated(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.DoubleArraySpliterator.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getAccessibleAt(Point)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn(sun.nio.ch.Interruptible)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.exactDivideBy3()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Collections.emptyMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.setElemFloat(int, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.take()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.time.format.Parsed.updateCheckConflict(TemporalField, TemporalField, Long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.ProxyGenerator.generateProxyClass(String, Class[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.readObject(ObjectInputStream)": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "EOFException", 
            "StreamCorruptedException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.CharacterData00.findInCharMap(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeChars(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.DirectoryNode.skipped()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.getIssuerX500Principal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsStatic(byte)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.LocalDateTime.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.time.Clock.systemUTC()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.resolve(URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.HierarchyEvent.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.OptionalDouble.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.isVarArgs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.of(long, long, long, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointCount(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretShapes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.insertText(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.DualPivotQuicksort.doSort(short[], int, int, short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getFocusTraversalKeysEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong.bufferCreate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getGenericSuperclass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.findClass(String)": {
        "intra_proced": [
            "ClassNotFoundException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.hasAlpha()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.regex.Pattern.sequence(Pattern.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "IOException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.canonicalizeLanguage(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.updateState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.getInstance(String, Policy.Parameters)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Timer.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.access$000(FileDialog, File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.setAll(Object[], IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.bit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.ProviderList.getProvider(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZStreamRef.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.snode(SNode, Object, SNode, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermissionCollection.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.ArrayPrefixHelpers.LongCumulateTask.getPendingCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStroke(Character, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.PropertyChangeEvent.getPropagationId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.removeHandler(Handler)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Decoration.getDecoration(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.tableswitch($b8)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Label.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.tableswitch($i2)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Thread.getPriority()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.DoubleCumulateTask.getCompleter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.tableswitch(b4)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "EOFException", 
            "EOFException", 
            "IllegalPathStateException", 
            "IllegalPathStateException"
        ]
    }, 
    "java.util.Arrays.hashCode(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ForEachOps.ForEachOrderedTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setTrafficClass(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.lang.Long.bitCount(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.toString(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URL.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.toPrivateJapaneseDate(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.getBoolean(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Date.after(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.getInCache(Transform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.preferredSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.print.attribute.standard.MediaSize.getX(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.InflaterInputStream.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "ZipException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "NullPointerException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.AbstractPipeline.lazySpliterator(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToIntTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putIntB(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.access$000(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.castingArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getHeaderFieldInt(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.linkMethodImpl(Class, int, Class, String, Object, Object[])": {
        "intra_proced": [
            "LinkageError", 
            "LinkageError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalTime.ofNanoOfDay(long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ClassLoader.defineClass(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoClassDefFoundError", 
            "SecurityException", 
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.SimpleTimeZone.useDaylightTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.toLower(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.isParam()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(short[], int, int, short)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Date.getDay()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.SecurityManager.currentLoadedClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.signatureArity(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Scrollbar.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.String.indexOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.bindSingle(MethodType, LambdaForm, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(double, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessBuilder.redirectOutput(ProcessBuilder.Redirect)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.math.SignedMutableBigInteger.add(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Enum.compareTo(Enum)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectableChannel.isBlocking()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToDoubleTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DelegatingSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.forEachRemaining(LongConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.getColorModel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeIntSpliterator.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.anyMatch(LongPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.BulkTask.pushState(Node[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.writeBytes(byte[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkMethodName(byte, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.isBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.EventDispatchThread.setContextClassLoader(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.get(float[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.toJapaneseEra(sun.util.calendar.Era)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.hitTestChar(float, float, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.getPermissions(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.externalInterruptibleAwaitDone()": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.Dialog.setBackground(Color)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.time.ZonedDateTime.getHour()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.fireFlavorsChanged()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.stream.Nodes.CollectorTask.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.opWrapSink(int, Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.FilteredImageSource.addConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.util.AbstractMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.show()": {
        "intra_proced": [
            "IllegalStateException", 
            "Dialog"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Toolkit.getPrintJob(Frame, String, Properties)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.get(double[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.tableswitch($i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.addEntry(int, Object, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.push(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.packageEquals(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.balanceDeletion(HashMap.TreeNode, HashMap.TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getOffset(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.joinGroup(SocketAddress, NetworkInterface)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.store(OutputStream, char[])": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.cacheAddresses(String, InetAddress[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SliceOps.access$000(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.enqueue(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getDefaultPRNG(boolean, byte[])": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.regex.Pattern.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.nio.HeapCharBuffer.put(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AllPermissionCollection.1.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(LambdaForm.BasicType, Class, Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.MediaEntry.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDefault(Category)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isOtherUppercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ValuesView.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getMillisOf(Calendar)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.Locale.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.time.Period.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJFloat.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainDatagramSocketImpl.isClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getAttributeCheckRange(AttributedCharacterIterator.Attribute, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getGroupingSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getChar(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.translate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getIntB(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeEvent.getPropertyName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.basicInvoker()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.image.SampleModel.getPixel(int, int, float[], DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getAttribute(AttributedCharacterIterator.Attribute, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.AttributedString.AttributedStringIterator.updateRunInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isShutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.findBundleInCache(CacheKey, Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.preferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.mapNewModifiers(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.listIterator(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getOption(SocketOption)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.establish(Calendar)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.toEpochSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiply(BigInteger, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.copyMethods(Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.maybeDump(String, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindName(byte)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.annotateClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.lookupswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.put(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.mapToLong(IntToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.charAt(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.net.JarURLConnection.getMainAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isLinkLocalAddress(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.getAccessibleChildIndex(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.print(Calendar, char, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readUTF()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.asType(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError"
        ]
    }, 
    "java.time.ZonedDateTime.create(long, int, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.TrayIcon.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.trySplit()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.long0(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.getBasicConstraints()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.siftDown(int, RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.updateCheckConflict(ChronoLocalDate)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermission.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readStreamHeader()": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.io.Console.read(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.time.format.DateTimeFormatter.ofPattern(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.decreaseComponentCount(Component)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isMirrored(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretShapes(int, Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.resolveYearOfEra(Map, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.RunnableExecuteAction.setRawResult(Void)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.interestOps(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.KeyIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.lambda$asPredicate$25(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.MessageFormat.getFormats()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.makeMethodHandleInvoke(String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.KeyboardFocusManager.retargetFocusEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.scalb(float, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.ClassLoader.findLoadedClass(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.MessageDigestSpi.engineDigest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.replaceFirst(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.asTypeUncached(MethodType)": {
        "intra_proced": [
            "WrongMethodTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToDoubleTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.ValueIterator.nextIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isTerminated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.parkUntil(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.fromCharacteristics(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideToIntegralValue(BigDecimal, MathContext)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.1.rangeRefinedBy(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.setDefault(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigestSpi.engineDigest(byte[], int, int)": {
        "intra_proced": [
            "DigestException", 
            "DigestException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.access$000(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.net.URI.normalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getFirstDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.getSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getBaseBundleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.put(DoubleBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.lang.Thread.dumpStack()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.privateGetDeclaredMethods(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.TextPrinterParser.numberPrinterParser()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.getLocalizedName()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicLong.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getAccessControlContextFrom(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.getDropAction()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.version()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getSymbol()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.addSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToLongTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StackTraceElement.isNativeMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getScrollPosition()": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isMCOrgLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.suspend()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.logging.Logger.getUseParentHandlers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.toGenericString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.date(Era, int, int, int)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ClassCastException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.security.CodeSigner.getSignerCertPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setFocusable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.2.x(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayWriter.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.lookupswitch(i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipFile.getEntryBytes(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LogNode.walkAndSetParent(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.access$100(LightweightDispatcher, Component, MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.image.PackedColorModel.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.searchMethods(Method[], String, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.checkDefaultSerialize()": {
        "intra_proced": [
            "ExceptionInfo"
        ], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.newProxy(String, VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketSendUrgentData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.sinh(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$200(ZipFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.get(int[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferUnderflowException"
        ]
    }, 
    "java.lang.StringBuffer.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketImpl.shutdownInput()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.toByteArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.withOptional(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfoFile.getCustomTimeZone(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setHours(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.MatchTask.shortCircuit(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ValueIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.getHeadlessMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeCtors(Class, String, MethodHandle[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.CandidateListCache.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.SNode.tryCancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getColor(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.getSize()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.StringTokenizer.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Vector.forEach(Consumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getHardwareAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceKeys(long, Function, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.isValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Dimension2D.setSize(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.isUnshared()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.set(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.spi.FileTypeDetector.checkPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.Class.getTypeName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.TemporalQueries.lambda$static$92(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.GregorianCalendar.setLenient(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.createCompatibleSampleModel(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.clear()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.newArrayArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addHierarchyListener(HierarchyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.minLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.createComponentsOnRun(int, int, char[], int[], byte[], sun.font.TextLabelFactory, Font, sun.font.CoreMetrics, FontRenderContext, sun.font.Decoration, sun.font.TextLineComponent[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.buildNames(Name[], Name[], Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.startEntry(ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.initializeJavaAssertionMaps()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.checkBounds(byte[], int, int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.getEmptyResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plusWithOverflow(ChronoLocalDate, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Field.toGenericString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendZoneText(TextStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.format(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.getProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.ReferenceQueue.remove(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getDataElements(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineSetKeyEntry(String, Key, char[], Certificate[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.deleteShortcut(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapShortBuffer.get(short[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.info(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.CallbackHandlerProtection.getCallbackHandler()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.FormatStyle.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.readExternal(ObjectInput)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetDateTime.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Graphics.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getExponentSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.lastIndexOf(Object, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.AccessController.createWrapper(DomainCombiner, Class, AccessControlContext, AccessControlContext, Permission[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.difference(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.doConnect(InetAddress, int, int)": {
        "intra_proced": [
            "SocketException", 
            "AbstractPlainSocketImpl", 
            "AbstractPlainSocketImpl"
        ], 
        "inter_proced": [
            "AbstractPlainSocketImpl"
        ]
    }, 
    "java.lang.Character.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.validateChrono(TemporalAccessor)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ServiceLoader.access$600(ServiceLoader.LazyIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(long[], int, int, long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndAccumulate(Object, Object, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putDouble(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.toFormatter(ResolverStyle, Chronology)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.LightweightDispatcher.isMouseGrab(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.reflect.ReflectAccess.copyField(Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.substring(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractList.set(Object)": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.getTimeZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IllegalFormatCodePointException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.util.prefs.XmlSupport.loadPrefsDoc(InputStream)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.getFileDescriptor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.at(int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.geom.Path2D.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.doTruncate(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getActualMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.awt.image.PixelGrabber.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.isAfter(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.focusPreviousComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.indexToRange(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.setFrame(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.initProperties(Properties)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.setCaseSensitive(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getXOnScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.createBuffers(int, BufferCapabilities)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.subSequence(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectCharBufferU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setTimeInMillis(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.doubleArraySize(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.localizedWeekBasedYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharAngle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.accept(SocketImpl)": {
        "intra_proced": [
            "AbstractPlainSocketImpl"
        ], 
        "inter_proced": []
    }, 
    "java.time.Year.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.throwIllegalStateException(int, int)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getKeyEventPostProcessors()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.DirectFloatBufferS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isUpper(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getFields(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.newMethodAccessor(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.LongStreamBuilderImpl.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getDefaultFocusTraversalKeys(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.acquireMethodAccessor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.round(int, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.removeChildLogger(LogManager.LoggerWeakRef)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.zone.Ser.writeOffset(ZoneOffset, DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.newTree(DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.multiply(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.net.URL.openConnection(Proxy)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.getMaxY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.setDate(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getNormalShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.epochMonthToMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDropTargetEvent.dispatch()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.minimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.weakCompareAndSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.BigDecimalLayout.exponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.channels.SelectionKey.isReadable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.loadProviderFromProperty(ClassLoader)": {
        "intra_proced": [
            "ServiceConfigurationError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "javax.accessibility.AccessibleContext.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.subParse(String, int, int, int, boolean, boolean[], ParsePosition, boolean, CalendarBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.DirectoryNode.key()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.toResourceName0(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.TransferableProxy.isDataFlavorSupported(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.longPrimitiveReturnCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.replace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.checkedSortedSet(SortedSet, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.isClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.addImpl(Component, Object, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Exception.getStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDropEvent.getDropTargetContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToIntTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.format(Date, StringBuffer, Format.FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.offer(Delayed)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.beans.Introspector.getBeanInfo()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.encode(CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "BufferOverflowException"
        ]
    }, 
    "java.security.cert.Certificate.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getMinimumIntegerDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAccessControlContext(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.compareAndDecrementWorkerCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.isDynamicLayoutActive()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.color.ICC_Profile.getStandardProfile(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.arrayForEach(double[], int, int, DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.format(Date, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.acquireFieldAccessor(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.setEagerValidation(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.nio.FloatBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.next()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.IOException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.methodType()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.CharBuffer.allocate(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Calendar.isLenient()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomDoublesSpliterator.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.getStringBuffer()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.insert(int, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.BasicPermission.init(String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.XmlSupport.load(Properties, InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isInvokeBasic(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BorderLayout.minimumLayoutSize(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.logging.LogManager.getIntProperty(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.getFirstDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredMethod(String, Class[])": {
        "intra_proced": [
            "NoSuchMethodException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GraphicsCallback.PrintAllCallback.runComponents(Component[], Graphics, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.authorizedIPv6(String, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.preparedLambdaForm(MemberName)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.chrono.JapaneseDate.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "sun.misc.Unsafe.getByte(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.String.indexOf(char[], int, int, char[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.Clipboard.isDataFlavorAvailable(DataFlavor)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.plusMillis(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "sun.util.calendar.ZoneInfo.getLastRuleInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getAnnotationType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.addEvent(EventSetDescriptor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToLongTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getXYZTag(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.compare(File, File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.separateWithCommas(Class[], StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.EnumMap.access$900(EnumMap, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getRGB(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.1Splitr.arraySpliterator(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.tableswitch(i0)": {
        "intra_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DecimalFormatSymbols.getMonetaryDecimalSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getClassName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.cbrt(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.readConfiguration()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "ClassNotFoundException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.StreamOpFlag.MaskBuilder.set(Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.isError()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.putByteArray(String, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeUnshared(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InternalError"
        ]
    }, 
    "java.net.URLConnection.stripOffParameters(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summingLong$131(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.clearProperty(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.lookupswitch($i5)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.lookupswitch(i0)": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.String.concat(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newInputStream(Path, OpenOption[])": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.mappingAddress(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeDoubles(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.poll()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.MediaEntry.insert(MediaEntry, MediaEntry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.getMonths()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyInvocable(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.smallPrime(int, int, Random)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.DirectDoubleBufferRS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.OfLong.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProvider(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getProfileClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.acceptConsumed(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.toEngineeringString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setReceiveBufferSize(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.AbstractCollection.toArray()": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.logging.Logger.logp(Level, String, String, Throwable, Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(BigInteger, StringBuffer, Format.FieldDelegate, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.AbstractShortCircuitTask.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.forEach(DoubleConsumer)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getUnitIncrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.atDate(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.beans.VetoableChangeSupport.fireVetoableChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.replaceAll(BiFunction)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.tableswitch($b0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.ints(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getFlavorsForNative(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.CharsetDecoder.decodeLoop(ByteBuffer, CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.insertParameter(int, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findResource(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.withSubsequentWidth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.removeImageImpl(Image, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putDouble(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.iterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.NetworkInterface.getMacAddr0(byte[], String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.subList(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuffer.insert(int, char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.net.URLClassLoader.run()": {
        "intra_proced": [
            "ClassNotFoundException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.isLeapYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.NoSuchMethodException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "javax.security.auth.callback.PasswordCallback.clearPassword()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermissionCollection.add(Permission)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.updateCursorImmediately()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.InflaterInputStream.fill()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectShortBufferU.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.write(byte[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasBlockExternalData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.getChronologyName(Chronology, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "MissingResourceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetTime.toLocalTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.getSystemTray()": {
        "intra_proced": [
            "HeadlessException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.5ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.3.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOfRange(boolean[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.sumCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.returnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.shiftRight(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.newInstanceGeneric(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.mapSignersToCertArray(CodeSigner[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.withOffsetSameLocal(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.map(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getMinimalDaysInFirstWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getDebug()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findBootstrapClass(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.isVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingSubMap.absLowFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getAtIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.dateNow(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Dialog.blockWindows(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.removeKey(SelectionKey)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isMinimumSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.Entry.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getAnnotatedReceiverType()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ProcessEnvironment.StringEntrySet.2.setValue(Value)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.rangeCheckForAdd(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getAccessibleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getRolledValue(int, int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.NonfairSync.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToLongTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.range(ChronoField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.contains(Object)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.format(Date, StringBuffer, FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.descendingKeyIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getStackTraceDepth(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Utype.complement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.clearGlobalFocusOwnerPriv()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.KeySpliterator.getEstimate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.CharacterDataLatin1.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.getProlepticMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.font.TextHitInfo.getInsertionIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.checkAccess(Class, Class, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getTransitionRules()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.encodeDataFlavor(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.of(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.MonthDay.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttribute(AttributedCharacterIterator.Attribute, Object, int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.putBundleInCache(ResourceBundle.CacheKey, ResourceBundle, ResourceBundle.Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.clear(StreamOpFlag.Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.PatternSyntaxException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.finalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.createVolatileImage(int, int, ImageCapabilities)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.isIntValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.removeWindowFocusListener(WindowFocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getProperty(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.EntrySetView.add(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.connect(SocketAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.findFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Parts.getPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.put(ShortBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "BufferOverflowException", 
            "Error", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.util.BitSet.stream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.waitFor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "NoSuchElementException"
        ]
    }, 
    "java.text.FieldPosition.matchesField(Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isLoopbackAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.unreflectGetter(Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.inClassLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, char)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.stream.Nodes.flattenDouble(OfDouble)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToLongTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.isDaylightTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getSampleDouble(int, int, int, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.executeOnEventHandlerThread(Object, Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.setMinMax()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.verify()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.security.AccessController.preserveCombiner(DomainCombiner, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToDoubleTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.isClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.util.Collections.synchronizedCollection(Collection, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getContainer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.paragraphInit(byte, sun.font.CoreMetrics, Map, char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.Base64.byteArrayToBase64(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Spliterators.nextLong()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.skipBytes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfDouble.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.withDays(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.arrayLength(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength()": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isRepresentationClassInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(float[], int, int, float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeExact(MethodHandle, Object, Object, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getSystemPackage0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.isDelimiter(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.hash(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.updateEffectiveLevel()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketImpl.create(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.TimeZone.parseCustomTimeZone(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.compute(Object, BiFunction)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentHashMap"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.rotate(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.forEachWithCancel(Spliterator, Sink)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.Arrays.sort(Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.ProcessEnvironment.setValue(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.getWeekBasedYear(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigestSpi.engineUpdate(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.net.Inet6Address.deriveNumericScope(byte[], NetworkInterface)": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.copyWith(MethodType, LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getSiblingIndexBelow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.evaluateToArrayNode(IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.processParentHandlers(Logger, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.isFixedWidth(DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getPathIterator(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.get(String, String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.EntrySpliterator.getEstimate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.ofYearDay(int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.FontMetrics.getAscent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeFieldName(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.tableswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.subMap(Object, boolean, Object, boolean)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.set(PageAttributes)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.put(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Curve.rectCrossingsForPath(PathIterator, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainDatagramSocketImpl.setOption(SocketOption, Object)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.between(Temporal, Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.grow(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJInt.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.put(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.stream(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.increment()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.getNetworkInterface()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermission.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivileged(PrivilegedAction, AccessControlContext, Permission[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.compareTo0(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divideAndRemainderBurnikelZiegler(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.PrintJob.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setAutoFocusTransferOnDisposal(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.lookupCache(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.minusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.withResult(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.notifyModalityPopped(Dialog)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawBytes(byte[], int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.open(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJFloat.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.entering(String, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.addExact(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putDouble(ByteBuffer, int, double, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getData()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.Channels.newChannel(OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodType.readResolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.canEncode(CharBuffer)": {
        "intra_proced": [
            "CharsetEncoder"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.stream.Node.copyInto(Double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.AnnotationParser.parseParameterAnnotations(byte[], sun.reflect.ConstantPool, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.setSourceClassName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getLineMetrics(String, int, int, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.setStackTrace(StackTraceElement[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextSecondarySeed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.tableswitch($i5)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.EntrySet.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.setRawResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.wrap(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.getField(String)": {
        "intra_proced": [
            "NoSuchFieldException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.SampleModel.getSamples(int, int, int, int, int, float[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Unit.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.consume()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(float[], float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setDatagramSocketImplFactory(DatagramSocketImplFactory)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.reflect.generics.scope.ConstructorScope.make(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.DeferredCloseProcessPipeInputStream.lower()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.floorDiv(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.VerifyAccess.isTypeVisible(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.resize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(short[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.event.AdjustmentEvent.getAdjustable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.lambda$new$216(IntFunction, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileDescriptor.closeAll(Closeable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.of(LocalTime, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.transform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.access$300(AttributedString, Set, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.ensureValid(Chronology, Temporal)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.EnumMap.equals(EnumMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readUTF()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getSample(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.parseInt(char[], int, int)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.TimeZone.getDefaultRef()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "sun.util.calendar.JulianCalendar.getEras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addHierarchyBoundsListener(HierarchyBoundsListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeWrappedMember(MethodHandle, MemberName, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i52)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.EntrySetView.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.FlatteningPathIterator.currentSegment(float[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.OfLong.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.copy(Path, OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.exec()": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Double.longBitsToDouble(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.TempDirectory.generateFile(String, String, File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.plus(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchEntriesTask.quietlyCompleteRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.decrementAndGet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.IntCumulateTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.Normalizer.getCombiningClass(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getSystemClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.putLong(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.stream.AbstractTask.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.checkSpreadArgument(Object, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.PushbackInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.parse(CharSequence)": {
        "intra_proced": [
            "DateTimeFormatter"
        ], 
        "inter_proced": [
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.lang.ClassFormatError.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.7.x(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.createTempFile(String, String, File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.MonthDay.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "sun.misc.Unsafe.pageSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.returnSlotCount()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.security.KeyStore.TrustedCertificateEntry.getTrustedCertificate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.annotation.AnnotationParser.toArray(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.send(DatagramPacket, byte)": {
        "intra_proced": [
            "SocketException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "SocketException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.CharBuffer.wrap(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ExtendedOptionsImpl.setFlowOption(FileDescriptor, jdk.net.SocketFlow)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.isAnnotationPresent(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.minusHours(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.util.TimeZone.toZoneId()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.StreamOpFlag.createMask(StreamOpFlag.Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.clone()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.newArrayArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getNextLeftHit(int, TextLayout.CaretPolicy)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.font.TextLayout.equals(TextLayout)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.setIntCompactVolatile(BigDecimal, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.OffsetIdPrinterParser.parse(DateTimeParseContext, CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getRoundingMode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "Component", 
            "AssertionError"
        ]
    }, 
    "java.io.PrintWriter.format(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DuplicateFormatFlagsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.text.DecimalFormat.localizeDigits(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.remove(int)": {
        "intra_proced": [
            "ReentrantLock", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "ReentrantLock"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.BigDecimalLayout.toCharArray(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.toLocalTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.LongIteratorSpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.equals(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getComponentBefore(Container, Component)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.speciesDataFromConcreteBMHClass(Class)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.awt.TrayIcon.getMouseListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.LinkedList.listIterator(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.ValueRange.of(long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.IntArraySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.finder.BeanInfoFinder.setPackages(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.hasReceiverTypeDispatch()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.beans.PropertyDescriptor.getParameterTypes(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRound(BigInteger, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.Streams.accept(double)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeIntrinsic(MethodHandle, MethodHandleImpl.Intrinsic)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Enum.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkMulticast(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.toBigInteger()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.util.EnumMap.unmaskNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectConstructor(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredClasses()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferB.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointBeforeImpl(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.add(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.contains(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.checkForSpecialAttributes()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.FutureTask.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.notify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.NodeChangeEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.referenceKindIsConsistentWith(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedMappingTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.getValue(TemporalQuery)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.getDropTargetEventTarget(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getFocusTraversalKeys(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.put(DoubleBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.awt.geom.QuadCurve2D.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.DeferredCloseProcessPipeInputStream.drainInputStream(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.offer(Object, long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.finishCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getIterator(Attribute[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.addItem(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamOpFlag.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeIterator.fetchNextIfNeeded()": {
        "intra_proced": [
            "UncheckedIOException"
        ], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.io.PrintStream.write(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchEntriesTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getFirstEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getLigatures()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.EntrySet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.unlock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.addElement(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readFloat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getMonthLength(int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.setDaemon(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Curve.pointCrossingsForLine(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.action(Event, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayVariant(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.IntBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.4.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.valueOf(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.filterArgumentForm(int, BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.FloatingDecimal.appendTo(double, Appendable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.ListItr.hasPrevious()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.Collectors.lambda$summarizingLong$177(LongSummaryStatistics, LongSummaryStatistics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.of(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.hasListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.swap(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.groupCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getFunctionalInterfaceClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.ZoneIdPrinterParser.getTree(DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.getDefaultDragSource()": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.createBreakInstance(Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.getEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.ensureCapacityHelper(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.time.MonthDay.adjustInto(Temporal)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.merge(Map, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.copyInto(long[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toLong()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.date(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapIntBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.arraySpliterator(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.asSetter()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.text.DecimalFormat.format(BigDecimal, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.beans.VetoableChangeSupport.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.isDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.put(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.isRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.time.OffsetDateTime.withHour(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.mulsubLong(int[], int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.minimumLayoutSize(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.exp(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.filterTags(List, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.get(Object[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.forName(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Float.compare(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(long, int, long, int, long, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceEntriesTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchValuesTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.compare(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.compareTo(ZoneOffsetTransition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.scan(int, int, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.acceptDrop(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.pollFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.oIDCheck(int, Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.12ReducingSink.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.isValid(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.shouldRoundUp(int, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.EntryIterator.Entry.checkIndexForEntryUse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.supportsMulticast()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.lambda$average$186(double[], double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedNavigableSet.subSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.layout()": {
        "intra_proced": [], 
        "inter_proced": [
            "Component", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.time.YearMonth.compareTo(YearMonth)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.warning(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.write(OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getDouble(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.getInstance(String)": {
        "intra_proced": [
            "NoSuchAlgorithmException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.getRepresentationClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeLongSpliterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getZeroDigit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectFieldNoSecurityManager(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.resolveFields()": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Color.testColorValueRange(int, int, int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Instant.plusMillis(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapLongBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.getActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.retrieve(BigInteger, int, Random)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.System.setIn0(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCertPath(List)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.Event.attributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.add(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamClass.getSerialVersionUID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StackTraceElement.getClassName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.FilePermissionCollection.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.explicitCastEquivalentToAsType(MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.asSpreader(Class, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodType", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.acquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getGetListenerMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.autoWaitForIdle()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "InvocationTargetException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.math.BigInteger.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getDispatchThread(EventQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.entryInstanceOf(String, Class)": {
        "intra_proced": [
            "NullPointerException", 
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getSampleSize()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.logging.LogManager.LoggerContext.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.subtract(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Arrays.setAll(double[], IntToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.tableswitch($i4)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setCallersClassLoaderRef(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.EntryIterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.nio.file.FileSystem.getPathMatcher(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.log(LogRecord)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getX1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToLongTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.isHeadless()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.lookupswitch($c0)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.entryNames(JarFile, CodeSource[])": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException"
        ]
    }, 
    "java.util.stream.ForEachOps.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.launchMechanism()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EntryIterator.Entry.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.getService(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Font.hasTempPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.DelegatingSpliterator.OfPrimitive.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PrintCallback.runComponents(Component[], Graphics, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.doubleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.fillInStackTrace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.UnicodeScript.forName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.frequency(Collection, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(Object[], Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.ValueSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.available()": {
        "intra_proced": [
            "DeferredCloseInputStream", 
            "DeferredCloseProcessPipeInputStream"
        ], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.awt.PageAttributes.setColor(ColorType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.put(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.wrap(CharSequence, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.put(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.debugString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.LocalTime.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.checkedCopyOf(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.set(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(int, long)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.atan(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.canonicalize(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getGreen(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfDouble.emptyConsumer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.checkAll(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.doSignal(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.nextTransition(Instant)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar.Date, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.typeSig(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.privateGetParameters()": {
        "intra_proced": [
            "MalformedParametersException"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException"
        ]
    }, 
    "java.time.Year.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.tryAddWorker(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.lang.ProcessEnvironment.ExternalData.getBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.refreshVersion(Version)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.getPaper()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.nextDown(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.delete(int)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Thread.stop0(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.implReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.longValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.io.FilePermissionCollection.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isFinal(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.rangeByWeek(TemporalAccessor, TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceEntries(long, Function, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.BidiUtils.createContiguousOrder(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.register(Selector, int, Object)": {
        "intra_proced": [
            "ClosedChannelException", 
            "IllegalArgumentException", 
            "IllegalBlockingModeException", 
            "ClosedChannelException"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.image.DataBufferFloat.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Node.copyInto(Long[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.selectFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.toThreadState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.consumeTraversalKey(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandomSpi.engineGenerateSeed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.beans.PropertyDescriptor.appendTo(StringBuilder, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.prevIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.quote(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.putShortB(long, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.addAWTEventListener(AWTEventListener, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.TreeMap.getFloorEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaEntry.getMedia()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.startEdit()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.text.ChoiceFormat.applyPattern(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.DoublePipeline.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.checkOldImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getDeclaredSUID(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.lang.ClassValue.changeEntry(ClassValue, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.getPredefinedCursor(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getPackage(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.next()": {
        "intra_proced": [
            "NoSuchElementException", 
            "ZipError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.copyOfRange(int[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URL.getUserInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.push(EventQueue)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJInt.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.CumulateTask.quietlyComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.BinaryOperator.maxBy(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.tooLow(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getGraphicsConfiguration()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.defineClass(String, byte[], int, int, CodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getThreadFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.ensureOpen()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.buildCache()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.waitForIdle()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IllegalThreadStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "Error", 
            "InvocationTargetException"
        ]
    }, 
    "java.awt.Container.getNativeContainer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.reshape(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.setFrameFromDiagonal(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.accept(Object)": {
        "intra_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "sun.nio.cs.StreamEncoder.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.IdentityHashMap.toArray(Object[])": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Period.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.comparing(Function, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getSystemEventQueue()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.net.ServerSocket.setReuseAddress(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.time.temporal.WeekFields.weekOfWeekBasedYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.workerCountOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isRepresentationClassRemote()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getMonthLength(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.setObjFieldValues(Object, Object[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.isAccessibleChildSelected(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeShort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.pumpEvents(Conditional)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getDouble(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.fixUp(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermissionCollection.add(Permission)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.lambda$walk$82(FileTreeWalker.Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getSystemResource(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.time.chrono.HijrahChronology.getMinimumMonthLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.PaintEvent.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Socket.getRemoteSocketAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.time.OffsetDateTime.toInstant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.declaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getCursor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.remove(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.Window.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.u()": {
        "intra_proced": [], 
        "inter_proced": [
            "Pattern"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.replacement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.tailSet(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractInterruptibleChannel.interrupt(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.subLower(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.nextDouble()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermissionCollection.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.ClassLoader.definePackage(String, String, String, String, String, String, String, URL)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.5.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.forWrapperType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.Curly.match1(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.removeAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.remainderBurnikelZiegler(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeInt(IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.put(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.checkPackageAccess(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.CumulateTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.shape(char[], int, int, NumericShaper.Range)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.MinguoChronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.1.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.indexOfSubList(List, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.putFloat(byte[], int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.MalformedInputException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.EnumSetIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makePairwiseConvertIndirect(MethodHandle, MethodType, boolean, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.varargsArray(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getFieldAccessor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.listIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getVisibleAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.invalidateSMCache(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.tryRelease(long, WorkQueue, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.getLocalSocketAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "NullPointerException"
        ]
    }, 
    "java.net.SocksSocketImpl.authenticate(byte, InputStream, BufferedOutputStream, long)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException"
        ]
    }, 
    "java.lang.reflect.Field.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.PutField.put(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.getMainAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.FieldVisitor.visitEnd()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(Object[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.lookupObject(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.verifyArity()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReduceOps.makeInt(int, IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.fine(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getCalendarProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.getStackTraceElement(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.buffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.setServerSocket(ServerSocket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.componentRemoved(ContainerEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.CallSite.getTarget()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.getPreferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.abs()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJFloat.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ChangeListenerMap.add(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeShorts(short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineIsCertificateEntry(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.image.IntegerComponentRaster.markDirty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.compareUnsigned(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.fillBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.wrongTargetType(MethodHandle, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.Math.toIntExact(long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendText(TemporalField, TextStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashSet.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.time.LocalDateTime.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.powerOfTwoD(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.newSlice(int[], int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.DirectDoubleBufferS.get(double[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferUnderflowException"
        ]
    }, 
    "java.time.ZonedDateTime.withMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ComponentColorModel.isCompatibleSampleModel(SampleModel)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.abs(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(MouseWheelListener, MouseWheelListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.addLast(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.isCharWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.lookup(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalCharsetNameException", 
            "IllegalCharsetNameException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.ComponentEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.dateNow(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.EventQueue.removeSourceEvents(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.Character.hashCode(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.FocusEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.runStateOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.coalesceMouseEvent(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getPeer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJObject.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UncheckedIOException.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.security.Provider.addEngine(String, boolean, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.log(Level, String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.addAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.InflaterInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "ZipException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "NullPointerException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DragSource.processDragDropEnd(DragSourceDropEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.put(Enum, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferB.put(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.replaceNames(Name[], Name[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getQuery()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.scanToken(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.PageAttributes.PrintQualityType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelPrefix(double[], int, int, DoubleBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapByteBuffer.putInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelInterleavedSampleModel.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isMimeTypeEqual(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.absHigher(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.bitCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.unpark(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.isLeapYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.createDirectory(Path, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.compareAndSet(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.index(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.BitSet.expandTo(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lambda$get$262()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Button.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.visitEnd()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.JComponent.getComponent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.findByLocalizedLevelName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.CharacterData02.digit(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.unreflectSetter(Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.put(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.util.Arrays.toString(int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.createDataBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(FocusListener, FocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getTransferType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.toCalendarDayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getUpper(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.OffsetIdPrinterParser.parseNumber(int[], int, CharSequence, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.of(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Calendar.setFirstDayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.Collections.descendingMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.ErrorManager.error(String, Exception, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.lang.Class.getCanonicalName()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Node.forEach(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.LLSpliterator.getEst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.rangeCheck(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.removeHandler(Handler)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ReentrantLock"
        ]
    }, 
    "java.io.File.canWrite()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.MulticastSocket.checkAddress(InetAddress, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.RunnableExecuteAction.rethrow(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.formatUnsignedInt(int, int, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.forClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.closePath()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalPathStateException", 
            "IllegalPathStateException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToIntTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.invalidateParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.exprString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.dateYearDay(Era, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.geom.AffineTransform.getQuadrantRotateInstance(int, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getComponentAt(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigestSpi.clone()": {
        "intra_proced": [
            "CloneNotSupportedException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Instant.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newDirectoryStream(Path, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DropTarget.stop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.pointCrossings(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.addAndGet(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferRB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.isSupported(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.implReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newOutputStream(WritableByteChannel)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.DecimalFormat.toLocalizedPattern()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.jar.JarFile.setEagerValidation(boolean)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.Semaphore.FairSync.hasQueuedPredecessors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.connect(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.copySign(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.indexOf(Name, Name[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.dispatchEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.getFocusCycleRootAncestor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getDeclaredAnnotationMap(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Streams.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.access$1100(Logger, Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypeSignature()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.color.ICC_Profile.getColorSpaceType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.getTypeAndAlgorithm(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.IntBuffer.compareTo(IntBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.asUncheckedRunnable(Closeable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.append(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Object, Object[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.getTTL()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfoFile.toCustomID(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.getMin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.MediaType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.isBold()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.primitiveRightShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.internalSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleResources.getJavaTimeDateTimePattern(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashSet.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.ints(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Comparator.comparingDouble(ToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.mergeSort(Object[], Object[], int, int, int, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.highMask(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getDuration()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.addTime(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.previous()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.sharedToString(int, boolean, Class[], Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toUpperCase(Locale)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.getDirectFieldNoSecurityManager(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.initConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.emoveQEQuoting()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.genericMethodType(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferRB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PrimitiveIterator.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.resolveName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.Raster.getSampleFloat(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.prolepticYear(Era, int)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.setRGB(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.getProvider(String)": {
        "intra_proced": [
            "ZoneRulesException", 
            "ZoneRulesException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.resolvedHandle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.casTabAt(Node[], int, Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamEncoder.forOutputStreamWriter(OutputStream, Object, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.date(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJChar.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Timer.schedule(TimerTask, Date)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.drainTasksTo(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.1.hasPrevious()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.deleteChar(AttributedCharacterIterator, char[], int, StyledParagraph)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ClassValue.initializeMap(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCertificate(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.matchesNameAndDescriptor(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getSetStateFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertPath.getEncoded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.util.stream.Collectors.lambda$averagingDouble$147(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.findCollector(String, int, Class, Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Spliterators.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.access$700(ServiceLoader.LazyIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.offsetByCodePointsImpl(char[], int, int, int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.access$000()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Formatter.format(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "FormatterClosedException"
        ]
    }, 
    "java.util.TaskQueue.add(TimerTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.setFwDispatcher(sun.awt.FwDispatcher)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(int, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.SecurityManager.checkExit(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.security.Security.getProviderProperty(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.lang.reflect.Constructor.newInstance(Object[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.datagramSocketCreate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineGetEntry(String, KeyStore.ProtectionParameter)": {
        "intra_proced": [
            "UnrecoverableKeyException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.descendingSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.Node, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "SocketException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.getIndexedPropertyType()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.util.Spliterators.IntIteratorSpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getImageURL()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedURLException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.ZoneOffset.totalSeconds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.compareTo(Year)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.updateAndGet(UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.SignedMutableBigInteger.signedSubtract(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.revalidateSynchronously(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.checkTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.longLongCompareMagnitude(long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.OffsetDateTime.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.beans.ChangeListenerMap.getEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.makeRef(AbstractPipeline)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.hide()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.text.Bidi.getRunLevel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isInvokeBasic(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.NonfairSync.acquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.DestinationType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.reflectionData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getNormalShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReference.accumulateAndGet(Object, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.partitioningBy(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.builder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.changeName(int, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketPermission.getCanonName()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException"
        ]
    }, 
    "java.math.BigInteger.primitiveLeftShift(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.isConnected()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.computeFields(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.UnknownContentHandler.getContent(URLConnection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.swap(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.tableswitch($i22)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.setAddr(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.reduce(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.BitSet.trimToSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.BaseSpliterator.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.entryNames(JarFile, CodeSource[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredAnnotationMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.YearMonth.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Toolkit.createList(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.access$400(TextLine, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.asShortBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "javax.swing.JLayeredPane.setOpaque(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setUncaughtExceptionHandler(Thread.UncaughtExceptionHandler)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectInputStream.HandleTable.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getNthDayOfWeek(int, int, sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.previousSetBit(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Date.normalize(sun.util.calendar.BaseCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.adapt(Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferUShort.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.basicType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getStrongHit(TextHitInfo, TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.text.NumberFormat.setMaximumFractionDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.open(Path, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Rectangle.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.clearAccessibleSelection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.badKeyMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.VetoableChangeSupport.addVetoableChangeListener(VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.createSymbolicLink(Path, Path, FileAttribute[])": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToQuadrantRotation(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.copyMembers(DateFormatSymbols, DateFormatSymbols)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "IOException"
        ]
    }, 
    "java.util.Date.getSeconds()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Scrollbar.setBlockIncrement(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getEnumConstantsShared()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.awt.Container.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.add(Delayed)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectByteBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.date(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.Invokers.methodHandleInvokeLinkerMethod(String, MethodType, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.getZipFileOpenTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.notifyNewBounds(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.security.KeyStoreSpi.engineIsKeyEntry(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.evaluateToNode(PipelineHelper, Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.storeInsnOpcode(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.isMimeTypeEqual(MimeType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.text.MessageFormat.format(Object, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.AbstractPipeline.wrap(PipelineHelper, Supplier, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getMouseEventTargetImpl(int, int, boolean, EventTargetFilter, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.tableswitch($i3)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "sun.net.ExtendedOptionsImpl.checkValueType(Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.setCurve(QuadCurve2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getDaylightSaving()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.chunkSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getPrimeSearchLen(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.setMultipleMode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.transferFocus(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Constructor.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isActive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.evaluate(TerminalOp)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.MissingResourceException.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getFilterComponents(String, String)": {
        "intra_proced": [
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZStreamRef.address()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.Frame.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.nextLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.SubList.rangeCheck(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.cmm.ProfileDeferralMgr.unregisterDeferral(ProfileActivator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.defineClass0(ClassLoader, String, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.1.value()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.atZone(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Constructor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.scan(int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.pathToShape(double[], boolean, sun.font.LayoutPathImpl)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.pow(int, MathContext)": {
        "intra_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.Component.requestFocus(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.constantZero(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.supportsKeyClass(Key)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.validatePage(PageFormat)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.createHierarchyEvents(int, Component, Container, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.findUnderMouseInWindow(PointerInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.TextComponent.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceToInt(long, ToIntBiFunction, int, IntBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withDayOfYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Executable.getAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.ensureExplicitCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.lang.reflect.Modifier.isTransient(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.javaIncrement(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.isHidden(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.createNSProvider(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToDoubleTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.wrap(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.build()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Matcher.end()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.ParallelLoaders.register(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.CodePointIterator.create(CharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.formatToCharacterIterator(Object)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.evaluateToArrayNode(IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.compare(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InvocationEvent.access$000(InvocationEvent, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.list(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.nio.DirectCharBufferS.put(CharBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.io.File.lastModified()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.LocalDateTime.withNano(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Container.reshape(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getScaleFactor(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.isAbsolute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getAWTEventListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.security.Provider.access$700(Provider.Service)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.1Splitr.arrayForOne(double[], int, DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.setMinimalDaysInFirstWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.init(ThreadGroup, Runnable, String, long, AccessControlContext)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "sun.util.locale.LanguageTag.getRegion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.toExternalForm()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getNativeFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.userNodeForPackage(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.arrayForOne(Object, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.localizedWeekOfMonth(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.bind(int, InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.put(char[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.sharedToGenericString(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.HashSet.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.checkValidIntValue(long, TemporalField)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.dropArgumentChecks(MethodType, int, List)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.Clock.withZone(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.eraOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.advanceTail(TransferQueue.QNode, TransferQueue.QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.indexFor(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getDecimalSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.lowerKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getAnnotationType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasWriteObjectMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Path2D.Float.quadTo(float, float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.useDaylightTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.intArrayCmpToLen(int[], int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.addInputMethodAttrs(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.time.Instant.ofEpochSecond(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.parseByte(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.resolve(URI, URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.locale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.ValidationList.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.environment()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "InternalError"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferB.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.anyDefined(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceKeysTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plusWithOverflow(LocalDate, long, long, long, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.LongPipeline.evaluateToArrayNode(IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.remove(ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.append(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.privateGetDeclaredFields(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.firstVisualChunk(int[], byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.JarURLConnection.parseSpecs(URL)": {
        "intra_proced": [
            "MalformedURLException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.remove(TextListener, TextListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.subdivide(double[], int, double[], int, double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.event.AdjustmentEvent.getValueIsAdjusting()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.findByValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.longBuilder(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.remove(Object, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.resize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(BigDecimal)": {
        "intra_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.util.SimpleTimeZone.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.appendTo(StringBuilder, String, Reference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.engineDigest(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DigestException", 
            "DigestException"
        ]
    }, 
    "java.awt.Window.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.compareMethods(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.of(Enum, Enum, Enum, Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException"
        ]
    }, 
    "java.net.Socket.bind(SocketAddress)": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SocketException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.LongPipeline.summaryStatistics()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.LinkedList.get(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass, Class, ClassNotFoundException, ObjectStreamClass)": {
        "intra_proced": [
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException"
        ], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InvalidClassException"
        ]
    }, 
    "java.lang.ProcessEnvironment.access$300(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.upFocusCycle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractInterruptibleChannel.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.linkToCallSiteMethod(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "IllegalArgumentException", 
            "MethodType", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.font.Font2D.getNumGlyphs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.makeSignature(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.cert.CertPath.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferRB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.addAlias(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.compute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.EntrySetView.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.addZeros(char[], int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.setOldModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.trackMouseEnterExit(Component, MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectStreamField.isPrimitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Node.study(TreeInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.setLocalResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.replaceAll(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.put(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Era.getAbbreviation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferFloat.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.makeGetter(Class, String, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.adjustInto(Temporal, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.Character.isLetter(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.RoundingMode.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomIntsSpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.load0(Properties.LineReader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.SignatureFileVerifier.setSignatureFile(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOp.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.coalesceEvents(AWTEvent, AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.sin(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.AreaAveragingScaleFilter.accumPixels(int, int, int, int, ColorModel, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.setTargetVolatile(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.security.auth.Subject.getPrincipals()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.drainTo(Collection)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.signum(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PaintHeavyweightComponentsCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.skip(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.File.isHidden()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJLong.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipUtils.get16(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkLink(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.beans.EventSetDescriptor.setListenerType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.add(int[], long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getFirstLightweightRequest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.CacheKey.valueOf(Object, ReferenceQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.readline(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.FileTreeWalker.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.remove(InputMethodListener, InputMethodListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.replaceName(Name, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.withVariant(HijrahChronology)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.intrinsicName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.InetAddressHolder.init(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.initif(String, byte[], NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileLock.isValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.ClassRepository.getSuperInterfaces()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.relativize(URI, URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Streams.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeRef(Collector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.addYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.replaceAll(BiFunction)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.adapt(Spliterator)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.isLoaded0(long, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(PrimitiveIterator.OfLong, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.getReferenceKind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.shortcuts()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.Name.internArguments()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isOtherUppercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.isDaemon()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Float.closePath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectInputStream.readHandle(boolean)": {
        "intra_proced": [
            "InternalError", 
            "StreamCorruptedException", 
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(int)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.ServerSocket.getImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.DirectByteBuffer.asLongBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.security.Timestamp.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.addAccessibleSelection(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.DatagramChannel.open(ProtocolFamily)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.LocalizedOffsetIdPrinterParser.getDigit(CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.asConstructor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.FontResolver.getFont(int, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.regionMatches(boolean, int, String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.max(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.isParseBigDecimal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(Object[], int, int, Object, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isRequestFocusAccepted(boolean, boolean, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredFields()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Nodes.doubleBuilder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.redirectOutput(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getQueueLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.createObject(sun.util.locale.BaseLocale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.IsoFields.rangeRefinedBy(TemporalAccessor)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readBoolean()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.awaitBooted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.makeRef(AbstractPipeline, long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StrictMath.floorDiv(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.BasicPermission.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.append(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.setPData(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.doDispose()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "Error", 
            "InvocationTargetException"
        ]
    }, 
    "java.awt.Component.getBaselineResizeBehavior()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.recordIdentity(RenderingHints.Key)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Method.getDefaultValue()": {
        "intra_proced": [
            "AnnotationFormatError"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.UnresolvedPermissionCollection.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.access$000(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.setMethodAccessor(Method, sun.reflect.MethodAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.updateCheck(Object, Object)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.ModalEventFilter.getModalDialog()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PushbackInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.connectV4(InputStream, OutputStream, InetSocketAddress, long)": {
        "intra_proced": [
            "SocketException", 
            "AssertionError", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.Socket.isBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.setCursor(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newAsynchronousFileChannel(Path, Set, ExecutorService, FileAttribute[])": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.read()": {
        "intra_proced": [
            "DeferredCloseInputStream", 
            "DeferredCloseProcessPipeInputStream"
        ], 
        "inter_proced": [
            "IOException", 
            "OutOfMemoryError", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarVerifier.access$000(JarVerifier.VerifierCodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.parse(String)": {
        "intra_proced": [
            "ParseException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.Introspector.getBeanInfo(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.IdentityHashMap.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getRGB(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.of(int)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.hasQueuedSubmissions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.gallopRight(Comparable, Object[], int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Float.needRoom(boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCertificates(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.max(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.move(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.compile(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.createAndStripZerosToMatchScale(long, int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getActualMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.DualPivotQuicksort.sort(char[], int, int, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.handleHtmlMimeTypes(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.makeIdentity(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.wrap(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.DeqSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.net.NetworkInterface.getNetworkInterfaces()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.LocalDateTime.getHour()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.DoubleIteratorSpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.FormatStyle.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.initGC(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "Error", 
            "Error", 
            "Error", 
            "IllegalAccessException"
        ]
    }, 
    "sun.awt.util.IdentityArrayList.add(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setAccessible(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.heapify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJShort.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(char[], int, int, String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.Float.setRect(float, float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContentEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.access$200()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.util.stream.Streams.RangeIntSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.initDeserializedWindow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "HeadlessException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.awt.dnd.DragGestureRecognizer.resetRecognizer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getDocumentRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.accept(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.sequential()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.add(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getSelectedText()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.add(int[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.toEnvironmentBlock(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.convertToAbbr(StringBuilder, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.getMenuCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.registerVariants()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.compare(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoUnit.isDurationEstimated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createDirectory(Path, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.gallopLeft(Comparable, Object[], int, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.font.BidiUtils.createVisualToLogicalMap(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.isFrameStateSupported(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.annotation.RetentionPolicy.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SystemClassLoaderAction.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NoSuchMethodException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.security.Timestamp.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.awt.font.NumericShaper.Range.toRangeIndex(Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractQueue.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.newProxyInstance(ClassLoader, Class[], InvocationHandler)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.IdentityHashMap.hash(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.compare(Map.Entry, Map.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.setOption(int, Object)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.enumerate(ThreadGroup[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.forEach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.thenComparing(Function, Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectIntBufferRS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.getSavedProperty(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.adjustmentValueChanged(AdjustmentEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeGuardWithCatchForm(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.security.SecureClassLoader.defineClass(String, ByteBuffer, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.newReflectionData(SoftReference, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.put(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.getTextIterator(TemporalField, TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.aliases()": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getShortL(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.DoubleArraySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.signatureType(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.socketSetOption(int, boolean, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.getVariant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.floatToRawIntBits(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.offsetByCodePoints(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptLineDistSq(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.getPlatformMappingsForNative(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.toString(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.adjustDecendantsOnParent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.getDisplayName(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getActionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.getDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.addFont(Object, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setBackground(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.rotate1(List, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.tooHigh(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.deepToString(Object[], StringBuilder, Set)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.File.compareTo(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.searchValues(long, Function)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.getTargetSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.setIndexedReadMethod0(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.awt.MediaTracker.addImage(Image, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.TimeUnit.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.shiftLeft(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.processDragMouseMoved(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.CalendarDataUtility.retrieveJavaTimeFieldValueName(String, int, int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.setReadable(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Spliterators.emptySpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.truncatedTo(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketPermission.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.setOption(int, Object)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Character.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocusInWindow(sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.ceilingKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeRef(BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelPrefix(int[], IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.applyPattern(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.atTime(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.ZonedDateTime.minusHours(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setAccessibleParent(Accessible)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.valueOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.replace(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeByte(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implPut(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.abs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.tableswitch(i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.StringBuffer.subSequence(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.isHeadlessInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isCased(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.getProtocolVersion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getExtensionKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharAscent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getTimezoneOffset()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJChar.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.exactInvoker()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.Component.paintAll(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.log1p(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.interrupt()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.Head.sourceStageSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.NativeLibLoader.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.isBefore(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.initPolicy(Policy)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.util.GregorianCalendar.getCurrentFixedDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.setSample(int, int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getClassLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.forEach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.compareMagnitudeNormalized(long, int, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.zip.Inflater.getTotalIn()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Frame.firePropertyChange(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToDoubleTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuShortcut.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.FileSystem.normalize(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.retargetMouseEnterExit(Component, MouseEvent, Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.math.BigDecimal.divide(BigInteger, int, long, int, long, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.net.URLClassLoader.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayName()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.util.GregorianCalendar.getGregorianCutoverDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.getAccessibleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.socketGetOption(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.createObject(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.parse(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.readObject(ObjectInputStream)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.lang.Short.reverseBytes(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readFully(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "EOFException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.tableswitch($i3)": {
        "intra_proced": [
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuItem.access$100(MenuItem)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.selectFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(short, Locale)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.toRangeIndex(NumericShaper.Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.tableswitch($b18)": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "BufferedOutputStream"
        ], 
        "inter_proced": [
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.awt.color.ICC_ColorSpace.toRGB(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.InputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormatSymbols.setEras(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.methodType(Class, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.siftUp(int, RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.hash(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.primeToCertainty(int, Random)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.createError(CharSequence, RuntimeException)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistChronology.isLeapYear(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.gc()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.localizedWeekOfYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.asLongBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.image.IntegerComponentRaster.getScanlineStride()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.signalNotFull()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.time.ZonedDateTime.withDayOfYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.ctlOf(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.setFrame(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.specificToStringHeader(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedValueTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.sum()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Window.reshape(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasWriteObjectData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.revalidateSynchronously()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEnvironment.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.parse(String)": {
        "intra_proced": [
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException", 
            "MimeTypeParseException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.recursiveApplyCurrentShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.Formatter.checkGeneral()": {
        "intra_proced": [
            "MissingFormatWidthException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.access$000()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.Bits.putDoubleB(ByteBuffer, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.getCurrentAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getCalendarSystem(sun.util.calendar.BaseCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.printInteger(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.parseByte(String, int)": {
        "intra_proced": [
            "NumberFormatException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.FileSystem.getPath(String, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.node(StringTokenizer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Font.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.applet.Applet.play(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isLoopbackAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setNativeName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.nextInt()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.AbstractTask.getCompleter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findResources(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.dispatch()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.nio.IntBuffer.wrap(int[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.SidesType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.castingIdentity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.NetHooks.beforeTcpConnect(FileDescriptor, InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PolicySpi.engineGetPermissions(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.addToCache(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.timedJoin(Thread, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AbstractMethodError"
        ]
    }, 
    "java.text.DecimalFormatSymbols.getPerMill()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.setDaemon(boolean)": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Formatter.precision(String)": {
        "intra_proced": [
            "IllegalFormatPrecisionException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.MutableBigInteger.euclidModInverse(int)": {
        "intra_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.TimeUnit.toSeconds(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.evaluate(TerminalOp)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.reverse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.focusPreviousComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.put(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.setEventQueue(EventQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.exit()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Method.copy()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.Clock.tickMinutes(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.legacyMergeSort(Object[], int, int, Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectCharBufferU.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValueReduced(TemporalField, int, int, ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.numberOfTrailingZeros(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getManifest()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Parameter.getParameterizedType()": {
        "intra_proced": [], 
        "inter_proced": [
            "MalformedParametersException"
        ]
    }, 
    "java.util.stream.StreamShape.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.AbstractList.ListItr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getSampleModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.containsMapping(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.lookupTag(List, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.expandFromVM()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getChar(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.tableswitch(i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.regex.Pattern.peekPastLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.mergePaintEvents(PaintEvent, PaintEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparators.reversed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashSet.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.leaveGroup(SocketAddress, NetworkInterface)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.fixDebugName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.EntrySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.DoubleCumulateTask.quietlyComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.1Splitr.arraySpliterator(long[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToLongTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getGraphics()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.lang.invoke.MethodType.hasPrimitives()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.permuteArgumentsForm(int, int[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.get(String, ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.boxed()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.LocalTime.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getFocusedWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.plus(MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.util.jar.JarVerifier.4.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.LongCumulateTask.compareAndSetPendingCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.internalMemberName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long6(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.isTranslucencyCapable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.lambda$initStreams$266()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendLocalized(FormatStyle, FormatStyle)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.clone()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.jar.JarVerifier.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Optional.of(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.KeySet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.pollNextLocalTask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.count()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.isLevelInitialized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.entries2()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.TextArea.setRows(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.doSwingSerialization()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeNull()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.parameterToArgSlot(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.logp(Level, String, String, Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.setIn(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.logging.LogManager.SystemLoggerContext.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelPrefix(Object[], int, int, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.createDataBuffer()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.AWTKeyStroke.isOnKeyRelease()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getTransferDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.finder.MethodFinder.findAccessibleMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getFieldAccessor(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.MonthDay.of(int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.keysSpi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.toURI()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.WritableRaster.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.2ReducingSink.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfLong.makeSpliterator(OfLong, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToDoubleTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.removeMapping(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarInputStream.checkManifest(JarEntry)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ZipException", 
            "ZipException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "EOFException", 
            "IOException", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.isMinimumSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.detachDispatchThread(EventDispatchThread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferShort.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isSiteLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setModalityType(Dialog.ModalityType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.Class.argumentTypesToString(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.KeyEvent.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setZoneShared(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.8ReducingSink.combine(8ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.opIsStateful()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.UnicodeProp.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.parseLong(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GraphicsEnvironment.preferLocaleFonts()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.flush()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.dateNow(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.IntPipeline.average()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.LinkedHashMap.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.lookupswitch($i4)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.stream.IntPipeline.reduce(int, IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.RGBImageFilter.filterRGBPixels(int, int, int, int, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "InterruptedException"
        ]
    }, 
    "java.awt.FontMetrics.bytesWidth(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getActualMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.awt.Polygon.addPoint(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.printComponents(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceEntriesTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.match(MimeType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.hasKeyAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.computeInvoker(MethodTypeForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.add(Component, Object, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.ReplicateScaleFilter.setHints(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.growSpine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.desiredAssertionStatus()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractList.clear()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocksSocketImpl.7.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.fieldCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermissionCollection.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Event.controlDown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.stripTrailingZeros()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.List.removeActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.EmptySpliterator.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToDoubleTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.setBeanInfoSearchPath(String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodType.asCollectorType(Class, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Frame.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.foldArgumentsForm(int, boolean, MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.WeakHashMap.KeyIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getCertificateAlias(Certificate)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isOtherLowercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implCompute(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findSystemClass(String)": {
        "intra_proced": [
            "ClassNotFoundException", 
            "ClassNotFoundException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "Error", 
            "ClassNotFoundException"
        ]
    }, 
    "java.awt.image.MemoryImageSource.sendPixels(ImageConsumer, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.makeCtors(Class, String, MethodHandle[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.ValueConversions.unboxExact(sun.invoke.util.Wrapper, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newInputStream(Path, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.EventDispatchThread.start()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.isEditable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.resolveOrFail(byte, MemberName, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.store(Object, Object, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.location()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.setCharAt(int, char)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getTimeZone(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.PrintWriter.print(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.security.Provider.getKeyClass(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassNotFoundException"
        ]
    }, 
    "java.util.TreeMap.AscendingSubMap.absHighest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.aliases()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.activeCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.LineNumberReader.readLine()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "java.lang.Integer.numberOfTrailingZeros(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeNode.findTreeNode(int, Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeFloat(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.localizedWeekOfMonth(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addLightweightRequest(Component, boolean, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.uncaughtException(Thread, Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.security.Provider.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.currentClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.put(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValueReduced(TemporalField, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.accept(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.dnd.DropTargetContext.getCurrentDataFlavorsAsList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putLongL(ByteBuffer, int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Image.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Period.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.Boolean.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.add(int, Object)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URLConnection.setFileNameMap(FileNameMap)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeIntSpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.preferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.1MatcherIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putFloat(long, float, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absLowFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.put(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeLongUTF(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setMultipleDocumentHandlingToDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.exactInvoker(MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.beans.PropertyDescriptor.getPropertyEditorClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.emptyNode(StreamShape)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.getterFunctions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setGregorianChange(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.doubles(long, double, double)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendFraction(TemporalField, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.lookupViaProviders(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDropEvent.acceptDrop(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.lookupswitch($i1)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.3.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.JarURLConnection.getJarFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Normalizer.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.URLClassLoader.getPermissions(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.paintComponents(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.isSealed(String, Manifest)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.subdivide(CubicCurve2D, CubicCurve2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getCodeSigners(JarFile, JarEntry)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "NullPointerException", 
            "JarException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.isApparentlyUnblocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getClassDataLayout()": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException", 
            "InternalError", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.awt.BufferCapabilities.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.get(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.setMaximumIntegerDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.Formatter.print(int, Locale)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.intValue()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "sun.reflect.generics.repository.FieldRepository.make(String, sun.reflect.generics.factory.GenericsFactory)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.cachedLambdaForm(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "sun.net.www.MessageHeader.getHeaders(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.joinGroup(SocketAddress, NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.firstInMonth(DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.MinguoDate.lengthOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringReader.read(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.getProlepticYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.flipBit(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getLong(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeInts(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.addItem(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.InterruptedException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.getDelay(TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "java.time.format.DateTimeParseContext.currentParsed()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointBefore(CharSequence, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getColorModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.mapsDiffer(Map, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.runAndReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getLineMetrics(char[], int, int, Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.makeGetters(Class, String, MethodHandle[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Line2D.ptLineDist(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.tableswitch(i22)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.compareIgnoringCase(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.checkForComodification()": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getGlyphVisualBounds(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.getDesktop()": {
        "intra_proced": [
            "HeadlessException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.text.DateFormat.getTimeInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.MemoryImageSource.addConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.getBooleanProperty(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.getPropertiesEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.setBeginIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.font.TextLine.getCharShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.getInstance(String, String)": {
        "intra_proced": [
            "CertificateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocksSocketImpl.remainingMillis(long)": {
        "intra_proced": [
            "SocketTimeoutException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.reduce(DoubleBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.getInternalName(Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.11ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.linkFirst(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddressImplFactory.isIPv6Supported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(AbstractStringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.StringTokenizer.hasMoreTokens()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.eq(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDropTargetEvent.consume()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiply(BigDecimal, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.util.Calendar.getDisplayNames(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.Bits.putShort(ByteBuffer, int, short, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getCurrentAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.addNodeChangeListener(NodeChangeListener)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.awt.Polygon.updateBounds(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.KeySetView.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.flags(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.zonedDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.fireVetoableChange(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeLong(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Stream.empty()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.setCurrentSequencedEvent(SequencedEvent)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.fillEqn(double[], double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.permuteArguments(int, int[], LambdaForm.BasicType[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.implFlush(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.GeneralPath.moveTo(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getLineInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.match(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.fakeMethodHandleInvoke(MemberName)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.isBefore(ChronoZonedDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.beans.PropertyDescriptor.getClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.tableswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.substring(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.insertParameterTypes(int, List)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readBooleans(boolean[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.warnUnsupportedCharset(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.roll(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.of(Enum, Enum[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.replaceFunctions(NamedFunction[], NamedFunction[], Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.CacheKey.expungeFrom(ConcurrentMap, ConcurrentMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.readSocksReply(InputStream, byte[], long)": {
        "intra_proced": [
            "SocketTimeoutException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.text.ChoiceFormat.format(double, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "sun.net.util.IPAddressUtil.convertFromIPv4MappedAddress(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.nextUp(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedList.checkedCopyOf(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summingDouble$135(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.collectIntegralDigits(int, char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.getBooleanAttributes(File)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.getLongB(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.computeIfAbsent(Object, Function)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.Event.ioeException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.removeEldestEntry(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.coalescePeerEvent(sun.awt.PeerEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getTileGridYOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.computeFields()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.ScrollPaneAdjustable.access$000(ScrollPaneAdjustable, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.getBackBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFully(byte[], int, int)": {
        "intra_proced": [
            "EOFException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.Entry.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.putAll(Map)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Container.isValidateRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.checkPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.MediaTracker.isErrorAny()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOfRange(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.net.Socket.setSendBufferSize(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.isFlavorTextType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.ValueIterator.nextNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.checkDateTime()": {
        "intra_proced": [
            "IllegalFormatPrecisionException", 
            "UnknownFormatConversionException", 
            "MissingFormatWidthException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.sizeCache(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isAnnotation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.math.BigInteger.shortValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, BigDecimal, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectLongBufferS.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.setDate(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferL.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.dumpMarkers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.coerceData(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.tableSizeFor(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.value()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.of(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.guessContentTypeFromStream(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.add(Component, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Locale.getDisplayString(String, Locale, int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.remove(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedList.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.findFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.isDragImageSupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.reflect.Method.getGenericInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.unordered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.getMask(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.nextLocalTask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.setValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.ListItr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.awt.event.FocusEvent.setSource(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setPixels(int, int, int, int, float[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.makeDouble(AbstractPipeline, long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeParseException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.getGlobalPermanentFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UncheckedIOException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSetAll(double[], IntToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readUnsignedByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionCollection.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Line2D.getY2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferFloat.setElemDouble(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.max()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.UNIXProcess.helperPath(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.getWaitingThreads(Condition)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(int, Month, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.BorderLayout.layoutContainer(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "Component", 
            "AssertionError"
        ]
    }, 
    "java.time.chrono.Era.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitEnd()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.rotate90()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.getLong(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.characteristics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomIntsSpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.append(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.addAll(int, Collection)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.bytesToFloats(byte[], int, float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.6.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.UNIXProcess.waitFor(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.io.OutputStreamWriter.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.access$500(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.OfPrimitive.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Version.promise()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultFocusTraversalPolicy.accept(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivilegedWithCombiner(PrivilegedExceptionAction, AccessControlContext, Permission[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.setLocation(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getHandlers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.epochDayToEpochMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.isZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.makeChild(Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.fail(Class, String)": {
        "intra_proced": [
            "ServiceConfigurationError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.isEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getLogger(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "MissingResourceException", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.util.IdentityHashMap.resize(int)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.isAfter(OffsetTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.taskCanceled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.insertChar(AttributedCharacterIterator, char[], int, StyledParagraph)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Dialog.setLocationByPlatform(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.returnSlotCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.date(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.createObject(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.putSpi(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.allocateInstance(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makePairwiseConvert(MethodHandle, MethodType, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.math.MutableBigInteger.copyValue(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getDefaultRGBComponents(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.initSystemClassLoader()": {
        "intra_proced": [
            "IllegalStateException", 
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive.forEach(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getGlyphPixelBounds(int, FontRenderContext, float, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.Arrays.fill(short[], short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setDefaultSelection(DefaultSelectionType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.isInterrupted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getRawTypeAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.needsPackageAccessCheck(ClassLoader, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getParamNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.readPassword(String, Object[])": {
        "intra_proced": [
            "IOError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.nio.file.FileTreeIterator.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.valueOf(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.precision()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isMCSiteLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.PeerEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.withDayOfYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Collections.max(Collection, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleInfo.isVarArgs()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.LocaleStore.getText(long, TextStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.isNaN(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.enumerate(ThreadGroup[], int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.currentSegment(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ApplicationShutdownHooks.remove(Thread)": {
        "intra_proced": [
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setLevel(Level)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.nio.DirectShortBufferS.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.replace(Object, Object, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.add(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.file.FileTreeIterator.hasNext()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "UncheckedIOException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.security.MessageDigest.engineDigest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Buffer.position(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.isAntiAliased()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.replaceStaleEntry(ThreadLocal, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Iterator.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(ItemListener, ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendChronologyId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.forEachRemaining(IntConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ClassLoader.findNative(ClassLoader, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Dialog.isVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.of(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.regex.Pattern.ref(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.setMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.reflect.annotation.AnnotationParser.parseAnnotations(byte[], sun.reflect.ConstantPool, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.addAllIfNotPresent(Class.MethodArray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getGlobalActiveWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivileged(PrivilegedAction, AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContent()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.JobAttributes.getMinPage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.io.StringWriter.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.KeyStoreSpi.engineGetCertificateAlias(Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.synchronizedList(List, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getKeyEventDispatchers()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.socketCreate(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.getDouble(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.withNano(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Nodes.IntArrayNode.copyInto(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.BaseIterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.defineClass(String, byte[], int, int, ClassLoader, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getChar(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerWeakRef.setParentRef(WeakReference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BasicStroke.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.formatTo(TemporalAccessor, Appendable)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubList.remove(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setFocusTraversalPolicyProvider(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.send(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.lookupswitch($c17)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.fixmods(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.CacheValue.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.checkKey(String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.canBeFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Node.copyInto(Integer[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.mapInputMethodHighlight(InputMethodHighlight)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.flatMapToLong(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getFontMetrics(Font, FontRenderContext, float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.LaunchMechanism.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.dragEnter(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.forInputStreamReader(InputStream, Object, Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isLightweight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.getCachedLocalizedLevelName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.hashCode()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.computeIfAbsent(Object, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleArrayNode.copyInto(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.modInverseBP2(MutableBigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isModalBlocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.getBounds(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.info(String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.ExceptionNode.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.etLayoutInfo(Container, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putFloatL(ByteBuffer, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.availableProcessors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URISyntaxException.getReason()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.zeroForm(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToLongTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.addContainerListener(ContainerListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.shortValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.put(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.toInstant()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Calendar.internalSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongArrayNode.copyInto(long[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.SoftReference.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getActionCommand()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.write(Object, DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.7.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createPackedRaster(int, int, int, int, int, Point)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.getPreferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.clearAutoscroll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayScript(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.printerParser(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.rehash()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.getSnapshot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.BeanDescriptor.appendTo(StringBuilder, String, Reference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.setOption(SocketOption, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getPixelBounds(FontRenderContext, float, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.nio.IntBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.of(Transform.Kind, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.dropActionChanged(DropTargetDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.fromRGB(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getValidOffsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Normalizer.isNormalized(CharSequence, Normalizer.Form)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getDate()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Character.isAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.AsVarargsCollector.asFixedArity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.Itr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeListenerProxy.propertyChange(PropertyChangeEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble.bufferCreate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.LoggerContext.ensureDefaultLogger(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.indexOf(NamedFunction, NamedFunction[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.add(Pattern.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.encodeLoop(CharBuffer, ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.compareTo(ShortBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.removeLessSpecifics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.repaint(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.listFiles()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.IntWrappingSpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getCodeSources(JarFile, URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$throwingMerger$114(Object, Object)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.security.KeyStore.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.Invokers.setCachedInvoker(int, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.setDynamicLayout(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.TextArea.appendText(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.getRootLogger()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.6ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.ServiceKey.matches(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divide3n2n(MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "sun.invoke.util.ValueConversions.unboxExact(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isLocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.setOption(SocketOption, Object)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoEra.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getSpiClass(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.addActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.getURLs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.println()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.longs(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.Container.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.runFinalizer(sun.misc.JavaLangAccess)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getInputContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipUtils.dosToJavaTime(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.createScreenCapture(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.wait(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.HeapLongBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.OptionalDouble.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.FormatFlagsConversionMismatchException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.lookupswitch(i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "NoSuchElementException"
        ]
    }, 
    "java.time.temporal.WeekFields.getFirstDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.setResult(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.seedUniquifier()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.transfer(WeakHashMap.Entry[], WeakHashMap.Entry[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.Platform.helperPath(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.intFromBigEndian(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeChars(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.setCurve(double, double, double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeWithArguments(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType", 
            "MethodType", 
            "MethodType", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.ResourceBundle.CacheKey.getLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.identityHashCode(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getCreationDate(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.PopupMenu.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.put(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.util.LinkedList.linkBefore(Object, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.before(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.getIdentity()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Policy.refresh()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.bitLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createCheckboxMenuItem(CheckboxMenuItem)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.noneMatch(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.addWorkerFailed(Worker)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.getMaximumAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectionKey.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.reverseOrder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isSoftDotted(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedCharacterIterator.Attribute.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.getColorModel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DoubleSummaryStatistics.getCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.setShape(Shape)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchMappingsTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.io.ObjectStreamClass.getPrivateMethod(Class, String, Class[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.io.FileReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.6.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.unreflectConstructor(Constructor)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseOffsetBased(DateTimeParseContext, CharSequence, int, int, DateTimeFormatterBuilder.OffsetIdPrinterParser)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.helpExpungeStaleExceptions()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.addIfNotPresent(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.NoSuchMethodException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getSubimage(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.monthsUntil(ChronoLocalDate)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarInputStream.getManifest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.longs(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventFilter.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LongSummaryStatistics.getAverage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.Name.isValid(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.getAndIncrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.printHashCode(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.setEndIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isAlwaysOnTop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarEntry.getAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.parseObject(String)": {
        "intra_proced": [
            "ParseException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getActiveCount()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.text.Format.format(Object, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.areExtraMouseButtonsEnabled()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.geom.Path2D.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.insertParameter(int, LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setDefaultFocusTraversalKeys(int, Set)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.InterfaceAddress.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.asTypeUncached(MethodType)": {
        "intra_proced": [
            "AssertionError", 
            "WrongMethodTypeException"
        ], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "ClassCastException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Desktop.checkFileValidation(File)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PriorityQueue.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.loadFromCache(Entry[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CharacterIteratorFieldDelegate.formatted(int, Format.Field, Object, int, int, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getDoubleB(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.checkFloat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.isProxyActive(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn(int, String, String, String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.PipelineHelper.getSourceShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.exists(Path, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setBounds(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.getActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getData(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getFixedDate(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PaintCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOfRange(char[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PropertyPermissionCollection.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.hasMarker(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.SoftCache.check(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getPreferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.capacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.WindowTranslucency.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.getAdler(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.getLevel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.removeTreeNode(ConcurrentHashMap.TreeNode)": {
        "intra_proced": [
            "TreeBin", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Calendar.tableswitch(b0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isMixingNeeded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.assertNotPromise()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setFieldsNormalized(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeSignature(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.iszero(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuBar.getMenuImpl(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedList.pop()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.awt.font.FontRenderContext.isTransformed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.isRegularFile(Path, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.dateYearDay(Era, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledFutureTask.setNextRunTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.8ReducingSink.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.withMinute(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.Period.parseNumber(CharSequence, String, int)": {
        "intra_proced": [
            "DateTimeParseException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.JobAttributes.getPageRanges()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.forJRE()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.peekNextLocalTask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SliceOps.completedSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.checkInvariants(TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.CausedFocusEvent.Cause.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getLongL(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.internalNextInt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.startOfWeekOffset(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.IntIteratorSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.afterNodeRemoval(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.stringWidth(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceKeys(long, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getPixelSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.newLine()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.WeekFields.weekOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getTopmostComponentIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.DatagramChannel.read(ByteBuffer[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(Runnable, RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.OrientationRequestedType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitAstoreInsn(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.getSubjectX500Principal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.IntUnaryOperator.andThen(IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.getExactSizeIfKnown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomLongsSpliterator.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.clearDuplicatesAndNulls()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Throwable.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setMixingCutoutShape(Component, Shape)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setSample(int, int, int, double, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.multiplyExact(long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.net.URI.quote(String, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.MonthDay.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "UnsupportedTemporalTypeException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.StringBuilderHelper.getStringBuilder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.checkNewProxyPermission(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "sun.font.TextLabelFactory.getLineBidi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.awaitUntil(Date)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.isRecursivelyVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.time.Instant.getNano()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.remove(WindowFocusListener, WindowFocusListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.valueOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.TemporalQueries.chronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.mapMerger(BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentForm(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.font.TextLayout.fastInit(char[], Font, Map, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.SecurityManager.checkMulticast(InetAddress, byte)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.setVarargs(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.toString(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimePrintContext.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.addInternal(EventListener, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.1.initialValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.ServiceLoader.fail(Class, URL, int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ServiceConfigurationError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Color.getRed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.makeLong(LongConsumer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.OfPrimitive.makeChild(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.count()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.equals(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.tableswitch($i5)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.shutdownInput()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.join()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Locale.toLanguageTag()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.invokeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.Node.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.GlyphLayout.layout(Font, FontRenderContext, char[], int, int, int, sun.font.StandardGlyphVector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Timestamp.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Collections.emptySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.iterator(Spliterator.OfInt)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.nextEscaped()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.getProperties(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getHoldCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.add(BigDecimal, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.Component.keyUp(Event, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isMCLinkLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.print(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.update(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.chooseDelegatingForm(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.runStateLessThan(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isSpace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.tableswitch($i3)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.channels.DatagramChannel.bind(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.removeItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.indexOf(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.reorderVisually(byte[], int, Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.checkPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.Bits.char1(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.node(String)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.logging.Logger.getLevel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.zeroForm(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.Predicate.or(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getDeclaredAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.getMousePosition()": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.ProcessEnvironment.validateValue(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DigitList.getDataChars(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.ofDateAdjuster(UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.awt.Choice.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.hide()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.Field.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureClassLoader.getPermissions(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.Currency.countOccurrences(String, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arguments(int, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.parseURL(URL, String, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "SecurityException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.createTransition(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetTime.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.lang.CharacterData.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.resolveDate(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectByteBuffer.put(int, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.SharedSecrets.setJavaNioAccess(sun.misc.JavaNioAccess)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectStreamClass.getResolveException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.io.PrintStream.toCharset(String)": {
        "intra_proced": [
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.spi.CollatorProvider.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.MethodRepository.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.deleteCharAt(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.setDefaultActions(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.read(DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.nativeSetSource(ComponentPeer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.isWindowTranslucencySupported(WindowTranslucency)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.audit()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.font.TextLine.getComponentShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.end(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.SliceOps.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.print(PrintRequestAttributeSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceTask.setLocalResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttribute(Attribute, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.ensureLogManagerInitialized()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.arg(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BufferCapabilities.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.push(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getImage(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.load0(Class, String)": {
        "intra_proced": [
            "UnsatisfiedLinkError"
        ], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "IOException", 
            "ArrayIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.AbstractTask.setLocalResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDefault()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.text.DigitList.getLong()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.FeatureDescriptor.setClass0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.getLevelAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.charValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "IllegalAccessException"
        ]
    }, 
    "java.awt.MenuComponent.AccessibleAWTMenuComponent.getAccessibleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.before(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.io.FileSystem.listRoots()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.KnownLevel.findByValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.preAccept()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.inRange(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.decode(ByteBuffer, CharBuffer, boolean)": {
        "intra_proced": [
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamField.getTypeString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.WritableRaster.getDataElements(int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.clear(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.security.cert.X509Certificate.getIssuerAlternativeNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.firstEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.sequential()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitJumpInsn(int, jdk.internal.org.objectweb.asm.Label)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.filterArgumentsCheckArity(MethodHandle, int, MethodHandle[])": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SortedOps.makeLong(AbstractPipeline)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.ReplaceTable.lookup(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.remove(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneRegion.checkName(String)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.registerChrono(Chronology, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.setAll(long[], IntToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.getValue(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getParameters0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.shouldBeInitialized(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.log(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getVariantFor(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InvalidClassException"
        ]
    }, 
    "java.util.Vector.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofSeconds(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.1Splitr.newSpliterator(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.merge(Object, Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineSetCertificateEntry(String, Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.of(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "ZoneRulesException", 
            "ZoneRulesException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DecimalFormat.isGroupingUsed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.decodeJavaMIMEType(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.subdivide(double[], int, double[], int, double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.longs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOrderedTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.matchLocation(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException"
        ]
    }, 
    "java.awt.Rectangle.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getParameterTypes(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.remainder(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.releaseInflater(Inflater)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.tailMap(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.event.MouseEvent.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(MouseMotionListener, MouseMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findStaticSetter(Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getCertificates()": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.checkBase(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getFamily()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.Raster.createCompatibleWritableRaster(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.lang.Class.EnclosingMethodInfo.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.ReducedPrinterParser.withSubsequentWidth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putShortL(ByteBuffer, int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOfSupplementary(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.put(float[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.awt.image.BufferedImage.getAlphaRaster()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.layoutChars()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.ofLocalizedTime(FormatStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.Path2D.contains(PathIterator, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getSoTimeout()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.AbstractWrappingSpliterator.initPartialTraversalState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.reducing(BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.nonfairTryAcquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.iteratorBinarySearch(List, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.spi.XmlPropertiesProvider.store(Properties, OutputStream, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.isStreamFlag()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.quickRemove(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getBeanInfo(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.toLocalTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.OptionalInt.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.io.ExpiringCache.Entry.timestamp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.setLine(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.scaledTenPow(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.Thread.exit()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException"
        ]
    }, 
    "java.util.GregorianCalendar.getWeekNumber(long, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.setPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.tableswitch($i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.BundleReference.getCacheKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.cachedChildren()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.collect(Supplier, ObjLongConsumer, BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicLong.getAndSet(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.CI.newNode(String, String, PrefixTree)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Robot.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getCharB(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Double.lineTo(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.setWeekdays(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.zero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.CopyMoveHelper.CopyOptions.parse(CopyOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.doRestoreFocus(Component, Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putInt(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.setDirectory(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.SignatureFileVerifier.needSignatureFile(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.outcode(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.doSignalAll(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.match(char, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.noneMatch(LongPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getCodeSigners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.ValidationList.register(ObjectInputValidation, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.rangeCheckForAdd(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getFloat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.isQueued(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "HeadlessException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.putForCreate(Object, Object)": {
        "intra_proced": [
            "StreamCorruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.cmm.ProfileDeferralMgr.activateProfiles()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.getDateFormatSymbols()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.net.ServerSocket.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.longStream(OfLong, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.asIntBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getAttributeValues()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.List.setForeground(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getAnonymousLogger()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.placeInCache(Entry[], int, Entry, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.grow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.findFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.localizedWeekOfWeekBasedYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.isConnectionReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.get0(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createTempFile(String, String, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Scrollbar.setValues(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.isValid(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.DirectIntBufferU.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getReturnType(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createCanvas(Canvas)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.removeNoInvalidate(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.TimeUnit.3.x(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getLayoutPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getCanonicalPath()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getSelectedObjects()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.setRect(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ApplicationShutdownHooks.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.awt.MenuItem.getLabel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createScrollbar(Scrollbar)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getBoundsOp()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeLongUTF(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.start(int)": {
        "intra_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetDateTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.SocketOutputStream.socketWrite0(FileDescriptor, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.finished()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.AbstractWrappingSpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divideKnuth(MutableBigInteger, MutableBigInteger, boolean)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.LocalDate.atTime(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Executable.getGenericParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.UnicodeBlock.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.TransferableProxy.getTransferDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.getSocket()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isShowing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.setParameter(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.text.DecimalFormat.setMaximumFractionDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PageFormat.tableswitch($i0)": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Vector.set(Object)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.probeBackupLocations(Entry[], ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.XmlSupport.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.enumerate(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.AWTKeyStroke.getCachedStroke(char, int, int, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Properties.LineReader.readLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Random.nextBoolean()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.montReduce(int[], int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.getAccessibleIndexInParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.newTreeNode(int, Object, Object, HashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getHostAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.getConstructorParameterAnnotations(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeArray(Object, ObjectStreamClass, boolean)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachMappingTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.solveQuadratic(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.invokeWithArgumentsTracing(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.resolveClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.isConnected()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.parameter(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.lambda$merge$104(BiFunction, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.getDragSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getDropTarget()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Dimension2D.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.event.AdjustmentEvent.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.peek()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.concurrent.Semaphore.Sync.setState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.BltBufferStrategy.getBackBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.SunGraphicsEnvironment.isFlipStrategyPreferred(ComponentPeer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.fillPolygon(int[], int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.LinkedList.superClone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.SplashScreen.getBounds()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.io.ObjectOutputStream.HandleTable.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.toArray()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.toCharArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.access$900(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getZoneStringsImpl(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.invoke.MemberName.getMethods(Class, boolean, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.MessageType.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.ensureCapacityInternal(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.DirectIntBufferU.put(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.unordered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.accessFailedMessage(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putShort(Object, long, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.visit(int, int, String, String, String, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getMethod(Class, String, int)": {
        "intra_proced": [
            "IntrospectionException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.DoublePipeline.forEachWithCancel(Spliterator, Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Launcher.getClassLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferShort.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.file.Files.isSameFile(Path, Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.Entry.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.compareAndSet(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.checkInitialized()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Comparators.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.set(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getThreadGroup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getCaretPosition()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Loop.matchInit(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapFloatBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.toMap(Function, Function, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.fill3DRect(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getProfileDataFromStream(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.PushbackInputStream.unread(int)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.getCursor()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfInt.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.checkError()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.dateYearDay(int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.time.ZoneOffset.of(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getMinimumAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Annotation.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getGenericInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.normalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.SimpleTimeZone.makeRulesCompatible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchFieldException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Tripwire.lambda$static$232()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.1Splitr.arrayForOne(long[], int, LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.exit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.addFieldValue(Map, ChronoField, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.toArray(Object[])": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.filter(LongPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setBoundsOp(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.isCriterionSatisfied(Provider, String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.net.ProxySelector.setDefault(ProxySelector)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.SplashScreen.setImageURL(URL)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.Calendar.getMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.fill()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeParseContext.startOptional()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.stream.PipelineHelper.copyIntoWithCancel(Sink, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getInstance(TimeZone, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectByteBuffer.nextPutIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.asSubclass(Class)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.isModalExclusionTypeSupported(ModalExclusionType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.Entry.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.gcd(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TreeSet.headSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mixOnZOrderChanging(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.isAutoFocusTransferEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.pumpApprovedKeyEvents()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.ReferencePipeline.reduce(Object, BiFunction, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.PriorityQueue.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.Itr.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.copySign(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.decode(byte[], int, int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "Error", 
            "UnsupportedCharsetException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.StringJoiner.prepareBuilder()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Locale.forLanguageTag(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.insert(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "jdk.internal.org.objectweb.asm.Type.getObjectType(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getShort(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.sinh(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfLong.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDate.atTime(OffsetTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.text.normalizer.NormalizerBase.isNormalized(String, Form)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.tableswitch($i9)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TrayIcon.getAccessControlContext()": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.casHead(TransferStack.SNode, TransferStack.SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LongSummaryStatistics.getCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.hypot(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.remove(Formatter.Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.createIdentityForms()": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.MutableBigInteger.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.revalidate(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.format(Date, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divideLongMagnitude(long, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.doIntersectionPrivilege(PrivilegedAction, AccessControlContext, AccessControlContext)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.computeInvoker(MethodTypeForm)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.CharacterData0E.getProperties(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.generic()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics"
        ]
    }, 
    "java.net.InetAddress.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.read(byte[], int, int)": {
        "intra_proced": [
            "DeferredCloseInputStream", 
            "DeferredCloseProcessPipeInputStream"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IOException", 
            "OutOfMemoryError", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.firePropertyChange(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.truncatedTo(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.CharacterData00.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.postProcessKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "HeadlessException"
        ]
    }, 
    "java.awt.Window.calculateSecurityWarningPosition(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "HeadlessException"
        ]
    }, 
    "java.time.chrono.HijrahDate.tableswitch($i4)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn(BasicType, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.drawLine(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.resume0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.1subIFs.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.setArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.make(Field)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodType"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.tryToLoadClass(String, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeString(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isFile()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.casNext(TransferStack.SNode, TransferStack.SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.length()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.security.KeyStore.getCertificateChain()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.setBlockDataMode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.expungeStaleElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.putBundleInCache(CacheKey, ResourceBundle, Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.length()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.Collections.SynchronizedNavigableSet.headSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isMCGlobal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.SunFontManager.usePlatformFontMetrics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.minus(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.ConstantCallSite.getTarget()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.latestUserDefinedLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.codePointAt(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ResourceBundle.needsReload(String, Locale, String, ClassLoader, ResourceBundle, long)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.insertArguments(MethodHandle, int, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.Locale.getDisplayScript()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.newSpeciesData(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.rename(File, File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(ItemListener, ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.environment(String[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.tableswitch(b25)": {
        "intra_proced": [
            "WriteAbortedException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StreamCorruptedException", 
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InternalError", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "InternalError", 
            "InvalidClassException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InvalidClassException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "ClassCastException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "AssertionError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IllegalArgumentException", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "FormatterClosedException"
        ]
    }, 
    "java.security.CodeSource.matchCerts(CodeSource, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.parseLocale(sun.util.locale.BaseLocale, sun.util.locale.LocaleExtensions)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putLong(ByteBuffer, int, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.peekByte()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.equals(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.registerProvider(ZoneRulesProvider)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ReentrantLock", 
            "ZoneRulesException"
        ]
    }, 
    "java.util.AbstractCollection.hugeCapacity(int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.lastIndexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.valueOfQueryOnly(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength(AbstractQueuedSynchronizer.ConditionObject)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.eventTypeEnabled(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.ReplaceTable.grow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipUtils.get32(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.range(ChronoField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.grow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.addIfAbsent(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.3.getFrom(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.tableswitch(i0)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.FileOutputStream.getFD()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.read(InputStream, int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.getEmptyResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.calcRealMapSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DelegatingMethodHandle.asCollector(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getExtendedKeyCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.startsWithLocHeader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToRotation(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.expm1(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodRef.set(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.getLocalPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.checkAccess(Class, Class, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AlphaComposite.derive(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Math.sqrt(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.setSample(int, int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.getDragThreshold()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Rectangle.getLocation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubList.rangeCheck(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.CharacterData02.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.getValue(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.throwMissingResourceException(String, Locale, Throwable)": {
        "intra_proced": [
            "MissingResourceException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.oClientCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.www.MimeTable.loadTable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isDigit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.removeVetoableChangeListener(String, VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.isGap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.engineUpdate(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException", 
            "UnsupportedOperationException", 
            "ReadOnlyBufferException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.lang.Double.valueOf(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.setCharAt(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.erase()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.getProfile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.supportsParameter(Object)": {
        "intra_proced": [
            "InvalidParameterException", 
            "InvalidParameterException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.LocaleExtensions.isValidKey(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.getUnchecked(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EventObject.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.getConstructorSlot(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarEntry.getCodeSigners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.setProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.addFirst(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.dequeueKeyEvents(long, Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterators.getComparator()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.toResolved(ResolverStyle, Set)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.nodeExists(StringTokenizer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.io.InputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Throwable.PrintStreamOrWriter.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.registerListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setIconImage(Image)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.util.Spliterators.iterator(OfLong)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.casCleanMe(TransferQueue.QNode, TransferQueue.QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingSubMap.absLowest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.run()": {
        "intra_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.font.TextLine.getCharLevel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.UNIXProcess.lambda$null$263(ThreadGroup, Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalThreadStateException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.TextComponent.getText()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getClipBounds(Rectangle)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.9ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceToLong(long, ToLongBiFunction, long, LongBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.createBreakInstance(sun.util.locale.provider.LocaleProviderAdapter, Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.accept(long)": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.security.Provider.computeIfAbsent(Object, Function)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.chrono.ChronoPeriodImpl.addTo(Temporal)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doSignal(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implPutAll(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.countItems()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.put(int[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.lang.String.replaceFirst(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.bval(Kind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendOptional(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.getRunningThreadCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getReflectionFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.printCharacter(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.ThreadGroup.list(PrintStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.Optional.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedCharacterIterator.readResolve()": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.getPackage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.charset.Charset.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.setDictionary(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.repaint(long, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getEnclosingConstructor()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.insert(int, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Currency.readLongArray(DataInputStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.beans.VetoableChangeSupport.extract(VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.beans.PropertyDescriptor.getPropertyType0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.removeAll(Collection)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.weakCompareAndSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.asIntBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.remove(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.tableswitch(b17)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.net.URI.Parser.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plus(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.defineClass(String, ByteBuffer, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException", 
            "NoClassDefFoundError", 
            "SecurityException", 
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.readObject(ObjectInputStream, boolean)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "EOFException", 
            "EOFException"
        ]
    }, 
    "java.util.jar.JarFile.JarEntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.time.MonthDay.atYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.DualPivotQuicksort.doSort(char[], int, int, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.isLeapYear(long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "PrivilegedActionException"
        ]
    }, 
    "java.time.chrono.IsoChronology.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextHitInfo.isLeadingEdge()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.IdentityHashMapIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.close(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.oppositeSigns(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.removeItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.quietlyComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.file.Files.getAttribute(Path, String, LinkOption[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.tableswitch($i33)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.takeIPv4Address(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.setOption(SocketOption, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.isDesktopSupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.System.setErr0(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.FocusEvent.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.addArgumentForm(int, LambdaForm.BasicType)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferRB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getGraphics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.disconnect0(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.put(FloatBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "BufferOverflowException", 
            "Error", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.awt.Rectangle.intersection(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.init(byte[], NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.configureBlocking(boolean)": {
        "intra_proced": [
            "ClosedChannelException", 
            "IllegalBlockingModeException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.postEvent(AWTEvent, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.enableEvents(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJShort.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.siftUp(int, RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoEra.lookupswitch(i0)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.enableReplaceObject(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.Vector.setElementAt(Object, int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferRL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.4.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.add(long, int, long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError"
        ]
    }, 
    "java.lang.ProcessBuilder.Redirect.Type.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.cos(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.replace(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahEra.of(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketPermission.impliesIgnoreMask(SocketPermission)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistChronology.prolepticYear(Era, int)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getWordInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.advanceTail(QNode, QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.util.ArrayList.hugeCapacity(int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.FieldReflector.getPrimFieldValues(Object, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.isParseIntegerOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJShort.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.hash(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.findResource(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.insert(MenuItem, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.KeySet.headSet(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.loadLibrary(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "sun.misc.Unsafe.putDouble(long, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.inflateBytes(long, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.checkCacheLoad()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.repostIfFollowsKeyEvents(WindowEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.MenuBar.add(Menu)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.font.NumericShaper.getShaper(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.temporal.WeekFields.getMinimalDaysInFirstWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.removeStaleEntries(ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.getUserInfo()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Arrays.binarySearch0(double[], int, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.mixOnZOrderChanging(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedList.set(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Character.isLowerCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Thread.start0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarSystem.getCalendarDate(long, TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.processComponentEvent(ComponentEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.getTextIterator(TemporalField, TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.registerFont(Font)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.fill3DRect(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.GeneralPath.lineTo(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.canContainFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.addUnstarted()": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.binarySearch(List, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.take()": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitMaxs(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.log(Level, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.forEachOrdered(Consumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.copyTree()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.Certificate.readResolve()": {
        "intra_proced": [
            "NotSerializableException"
        ], 
        "inter_proced": [
            "CertificateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.VertWS.complement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.casHead(SNode, SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.parsePort(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketImpl.connect(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.next()": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.scope.MethodScope.make(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.flags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.ofEpochDay(HijrahChronology, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.getUserName()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.Line2D.relativeCCW(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.scan(WorkQueue, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.doubleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getBooleanProperty(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PropertyPermission.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.arrayInsnOpcode(byte, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.group(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.time.ZonedDateTime.of(int, int, int, int, int, int, int, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.RectangularShape.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.getFontMetrics(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.put(ShortBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "BufferOverflowException", 
            "Error", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.fullBytes(int[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.Socket.setCreated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.getItem(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.flatMap(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.newBufferedWriter(Path, Charset, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.MappedByteBuffer.load()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.defineClass(String, byte[], int, int, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoClassDefFoundError", 
            "SecurityException", 
            "SecurityException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findStaticGetter(Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IOException", 
            "OutOfMemoryError", 
            "IOException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Toolkit.createImage(ImageProducer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.isTerminating()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm(MethodType, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.encode(Charset, char[], int, int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "BufferOverflowException"
        ]
    }, 
    "sun.util.locale.BaseLocale.createInstance(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.startsWith(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.checkPositionIndex(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.isFocusCycleRoot(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.checkKFMSecurity()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getScanlineStride()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ReplicateScaleFilter.calculateMaps()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.oIDCheck(int, Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.accept(int)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Enum.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.time.LocalDate.getDayOfYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.append(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.io.ObjectInputStream.readUTF()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.resolveYD(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.MinguoDate.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.newCachedThreadPool(ThreadFactory)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.reverse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.IntCumulateTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkCreateClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.nio.channels.ServerSocketChannel.bind(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedList.typeCheck(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.getMethodType()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.AbstractList.add(int, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.childrenNamesSpi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getCurrencyInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.engineUpdate(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedNavigableSet.tailSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceKeysToInt(long, ToIntFunction, int, IntBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeInt(Supplier, ObjIntConsumer, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongArrayNode.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.containsFocus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.StreamBuilderImpl.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.requireNonNull(Object, String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getSampleModelTranslateX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setPrintQualityToDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.SignatureFileVerifier.process(Hashtable, List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.parseHostname(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getYearOffsetInMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.getEnumeration(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.systemDefaultZone()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "InternalError"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.access$000(DefaultKeyboardFocusManager, KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.security.Permissions.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "sun.misc.URLClassPath.getResource(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.xor(BitSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextLong(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.tableswitch($i6)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.geom.Path2D.getPoint(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.dispose()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.nio.CharBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocus(Component, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.getBaseLevel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.checkProxyAccess(Class, ClassLoader, Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.System.mapLibraryName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getTRC(int)": {
        "intra_proced": [
            "ProfileDataException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.CurrencyNameProvider.getSymbol(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.delete0(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Ser.tableswitch(b0)": {
        "intra_proced": [
            "InvalidClassException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "IllegalArgumentException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.text.SimpleDateFormat.applyPatternImpl(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.adjustWidth(int, Flags, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.5.x(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.tryLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AWTAutoShutdown.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDragEvent.getDropTargetContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.applyComponentOrientation(ComponentOrientation)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getMouseListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.event.MouseWheelEvent.isConsumed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.localizedMagnitude(StringBuilder, long, Formatter.Flags, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.lazySet(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SortedOps.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withHour(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.defaultReadFields(Object, ObjectStreamClass)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.lookupswitch($i7)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.Bits.putCharB(long, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeIntSpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.isInfinite(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyChangeEvent.getIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.systemDefault()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.security.cert.CertificateFactorySpi.engineGenerateCertificates(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.typeCheck(BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.setHeadAndPropagate(Node, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToIntTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.clean(QNode, QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getNextRightHit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.privilegedConnect(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getParameterAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.read(ByteBuffer[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getTargetBeanDescriptor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.setOption(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getTimeOfDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.access$800(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.methodType(Class, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.tryAcquire(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.access$000(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.OfRef.makeChild(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AbstractMethodError"
        ]
    }, 
    "java.awt.font.TextLayout.getNextRightHit(int, CaretPolicy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToLongTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.dropParameterTypes(int, int)": {
        "intra_proced": [
            "MethodType"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.eraOf(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.clearGlobalFocusOwnerPriv()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getLoader(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.replaceAll(BiFunction)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.clean(SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.indexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getItems()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.awaitJoin(WorkQueue, ForkJoinTask, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.DatagramChannel.setOption(SocketOption, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isFlavorJavaFileListType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.valueOf(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.addAllAbsent(Collection)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.InvalidPropertiesFormatException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.WeakReference.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getComponents(Object, int[], int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfPrimitive.findNextLeafNode(Deque)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.isUserNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.getTextCharset(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.setBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.getMax()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.create(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.awt.event.InvocationEvent.finishedDispatching(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.SNode.isCancelled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.TreeMap.subHighest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.packTimes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.yearLength(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.Entry.getLowerCase()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.setParent(ResourceBundle)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.enableResolveObject(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Collections.reversed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getPackageInfo()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.NameGenerator.instanceName(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.WaitDispatchSupport.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.security.Provider.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.saturateLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.isBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.BltBufferStrategy.revalidate(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getRedMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.1checkedAddresses.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.subSequence(int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfDouble.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Bound.isWord(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getZoneOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.bitWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntArrayNode.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.getRemaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Collections.checkedNavigableSet(NavigableSet, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseEra.getPrivateEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingKeySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.restoreToType(MethodHandle, MethodHandle, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "ClassCastException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.Nodes.doubleBuilder(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.Calendar.getMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.compareTo(URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.AttributedString.entrySet()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuBar.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeShorts(short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Ser.read(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.of(HijrahChronology, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.geom.Path2D.intersects(PathIterator, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.DirectShortBufferU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.enumerate(Thread[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.provideRules(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.compareMagnitudeNormalized(BigInteger, int, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Formatter.conversion(String)": {
        "intra_proced": [
            "UnknownFormatConversionException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.put(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeListenerProxy.getListener()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.getUnchecked(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getNumDataElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCertificate(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.descendingIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.invalidateWeekFields()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.io.BufferedReader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getFieldName(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.fromRGB(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.SimpleMethodHandle.copyWithExtendD(MethodType, LambdaForm, double)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.io.ByteArrayInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToDoubleTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getAscent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.constructor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.mapToObj(IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.UnknownHostException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.put(long[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.util.stream.AbstractShortCircuitTask.setPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.findLevel(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedHashSet.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.setShortMonths(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.doTruncate(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.MethodArray.removeByNameAndDescriptor(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getFields()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.tableswitch($i1)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.findKey(Selector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.initTable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.substring(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.reExecutePeriodic(RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getVScrollbarWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.provideZoneIds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.setDefault(Locale.Category, Locale)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.Collections.emptyNavigableSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.formatUnsignedLong(long, int, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getUnnormalizedComponents(float[], int, int[], int)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipFile.startsWithLOC(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getGenericInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.checkAccess(Class, Class, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.getUnchecked(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.getNode(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.2.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.substring(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.getLong(String, Long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.getTree(DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchKeysTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJByte.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getSelectedIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.isShutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilderFactory.setIgnoringComments(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.isValidSignature(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.setYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.getText(long, TextStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.get(String, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absHigher(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.newTreeNode(int, Object, Object, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.BreakIteratorProvider.getWordInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.doTunnel(String, int)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.popCC(CountedCompleter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.4Adapter.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.monthLength(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getRed(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkPropertyAccess(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.onShutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeIntrinsic(MethodType, LambdaForm, MethodHandleImpl.Intrinsic)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.localizedMagnitude(StringBuilder, char[], Flags, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getRequestProperties()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.checkSystemTrayAllowed()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.security.Provider.removeInvalidServices(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.add(Map.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.loadSystemCustomCursorProperties()": {
        "intra_proced": [
            "AWTException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ColorModel.getNormalizedComponents(int[], int, float[], int)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.JapaneseEra.of(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.DirectColorModel.getRed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.digest(byte[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "DigestException", 
            "DigestException"
        ]
    }, 
    "java.io.StringWriter.write(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.deltaTransform(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.size()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.setAndClear(StreamOpFlag.Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoubleStream.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.dataAvailable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.readObject(ObjectInputStream)": {
        "intra_proced": [
            "ClassNotFoundException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "CertificateException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.setRect(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.delItems(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.InetAddress.InetAddressHolder.getFamily()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getTargetEventInfo()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.FilterInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.internalValues()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.put(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.add(long, int, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicLong.weakCompareAndSet(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.permutedTypesMatch(int[], BasicType[], Name[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.BytecodeDescriptor.parseMethod(String, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printCharacter(Object)": {
        "intra_proced": [
            "IllegalFormatCodePointException", 
            "IllegalFormatCodePointException", 
            "IllegalFormatCodePointException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.setVarargs(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.setDefaultZone()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.downFocusCycle(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Set.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getAccessibleChild(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.LineNumberReader.read()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.GregorianCalendar.yearLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.file.attribute.PosixFilePermissions.isX(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.collectingAndThen(Collector, Function)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ClassCastException", 
            "AssertionError"
        ]
    }, 
    "java.nio.file.Files.probeContentType(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.headMap(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Ser.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.toString(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.normalize(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.newProxy(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.logrb(Level, String, String, String, String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.DateFormat.parseObject(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.BandedSampleModel.getSample(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setChar(Object, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.isLocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.CharProperty.isSatisfiedBy(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.removeAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapEntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferByte.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getCtrlX1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getCtrlX2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodRef.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.DebugTraceInfoStack.push(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getAWTEventListeners(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.math.MutableBigInteger.rightShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.isInstantiable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(Object, StringBuffer, FieldPosition)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.tableswitch(i0)": {
        "intra_proced": [
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.SliceOps.SliceTask.completedSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.maskNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.initializeDesktopProperties()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.createImage(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Image.getCapabilities(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.canonicalizeAll(Class[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getChars(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.enable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(long, int, BigInteger, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.BigDecimalLayout.scale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getNano()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.setRoundRect(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.setCreationTime(FileTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setFocusTraversalKeys(int, Set)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Button.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.accessCheckedHandlers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.addLayoutComponent(Component, Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.NonfairSync.nonfairTryAcquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getAvailableCurrencies()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.time.ZoneOffset.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.DoublePipeline.allMatch(DoublePredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.misMatchedTypes(String, MethodType, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Hashtable.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.font.NumericShaper.search(int, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.InvocationTargetException.getTargetException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.round(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.range(ChronoField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.compareTo(OffsetDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.codePoints()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.daysUntil(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.LinkedEntryIterator.nextNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(AdjustmentListener, AdjustmentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.set(ThreadLocal, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getOpaqueShape()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.setClass0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.compareTo(ProcessEnvironment.Variable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.SignatureFileVerifier.isBlockOrSF(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptSegDistSq(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.freeMemory(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.append(StringBuffer, String, Format.FieldDelegate, FieldPosition[], Format.Field)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.IsoFields.resolve(Map, TemporalAccessor, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.CheckboxMenuItem.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSupport.longStream(Spliterator.OfLong, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.isAlwaysOnTopSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.classLoaderDepth()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.JarURLConnection.getAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.isLeftToRight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SortedOps.makeRef(AbstractPipeline, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.casAnnotationData(Class, Class.AnnotationData, Class.AnnotationData)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.SynchronizedNavigableSet.descendingSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.nextProbablePrime()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodType.invokers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.TzdbZoneRulesProvider.getRules(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.normalize(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Scrollbar.setMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.preAlign(BigDecimal, BigDecimal, long, MathContext)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.nio.file.Files.2.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.TextStyle.asNormal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.lookupswitch($c15)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.OptionalDouble.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.validateAmount(TemporalAmount)": {
        "intra_proced": [
            "DateTimeException", 
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.GroupCurly.match2(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(Node, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.toHexString(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.startsWith(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getInputStream(ZipEntry)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "JarException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ForEachOps.ForEachTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.delete()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.SplashScreen.getImageFileName(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.toString(String, String, String, String, String, int, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferB.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AllPermissionCollection.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getLoggerNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "UnsupportedTemporalTypeException", 
            "ClassCastException"
        ]
    }, 
    "java.util.stream.DoublePipeline.isOrdered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.doInvokeAny(Collection, boolean, long)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "TimeoutException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ConditionalSpecialCasing.tableswitch(i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Map.compute(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.swap(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.getStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.submit(ForkJoinTask)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.util.HashMap.TreeNode.find(int, Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.color.ProfileDataException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.compareTo(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getNormalizedComponents(int[], int, float[], int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.HijrahDate.getEraValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ProxySelector.select(URI)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Inet6Address.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.tableswitch($b9)": {
        "intra_proced": [
            "OutputStream", 
            "OutputStream"
        ], 
        "inter_proced": []
    }, 
    "java.text.Normalizer.normalize(CharSequence, Normalizer.Form)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.setProperties(Properties)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.AffineTransform.getTranslateY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachEntry(long, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.previous()": {
        "intra_proced": [
            "NoSuchElementException", 
            "ConcurrentModificationException", 
            "NoSuchElementException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseCaseSensitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.makeChild(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyFromArray(Object, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitVarInsn(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharDescent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getGenericSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.convertStyle(FormatStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.loadFactor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.dispatch()": {
        "intra_proced": [
            "SequencedEvent"
        ], 
        "inter_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "SecurityException", 
            "SecurityException", 
            "SecurityException", 
            "SecurityException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.ResourceBundle.getBundle(String, Locale, ClassLoader, ResourceBundle.Control)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.TextLabelFactory.getFontRenderContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(long[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.getLabel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.equals(Transform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendZoneRegionId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.setSpan(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.ServerSocketChannel.bind(SocketAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.tableswitch($b0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.image.Raster.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putFloat(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.getListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.removeBeanInfo(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredMethods()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.SortedOps.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.Float.valueOf(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.addShifted(MutableBigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.isLeapYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.Entry.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.getAvailableZoneIds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkPackageDefinition(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.time.LocalDateTime.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.ZonedDateTime.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.NoSuchFieldError.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getCalendarSystem(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.reflect.Constructor.getSlot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isJavaIdentifierPart(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.pinDayOfMonth(sun.util.calendar.LocalGregorianCalendar$Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.xml.sax.InputSource.setSystemId(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.CountingWrapper.updateForm(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.compare(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getTypeAnnotationBytes0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.read0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.makeSpliterator(Spliterator, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.sequential()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.booleanValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.badValueMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.AssertionError.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.rotateRight(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.Reflection.ensureMemberAccess(Class, Class, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.securityPropFile(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.add(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isSet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextAttribute.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addMouseMotionListener(MouseMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.tryAcquireSharedNanos(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(Calendar, char, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistEra.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.setTimeZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiplyAndRound(BigInteger, BigInteger, int, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Font.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.Locale.lookupswitch($i1)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.toConcurrentMap(Function, Function, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.setDimensions(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.isBoundary(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.isDisposing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.URLClassPath.addURL(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long2(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getBundle(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.setSample(int, int, int, float, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.toEpochDay()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.ComparableTimSort.minRunLength(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.EnsureInitialized.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.tailSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.getAndAdd(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.getAndDecrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.3.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.ofMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDate.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.beans.ChangeListenerMap.getListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.lambda$distinct$192(Long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toLowerCase(Locale)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.IntPipeline.access$000(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.getReaderForText(Transferable)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.Polygon.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.DirectoryNode.directory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getTargetDefaultEventIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.tableswitch(b1)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.chrono.IsoChronology.eras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.initDefault()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.LocalDate.atStartOfDay()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.regex.Pattern.closure(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.X509Certificate.verify(PublicKey, Provider)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.getFilter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.update(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getXOnScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.ones(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.releaseShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.addFirst(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.Character.UnicodeScript.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectConstructor(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ReplicateScaleFilter.setPixels(int, int, int, int, ColorModel, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.shutdown()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "ReentrantLock", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readChars(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.signum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.processInputMethodEvent(InputMethodEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.maskToRangeSet(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferB.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.bitsOrSingle(Pattern.BitClass, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.canDisplay(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(long[], int, int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.outOfBoundsMsg(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.merge(Object, Object, BiFunction)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.add(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getIntegerInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.cardinality()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isMCGlobal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.checkPackageAccess(Class, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implMerge(Object, Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.Node.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.parseObject(String)": {
        "intra_proced": [
            "ParseException"
        ], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.util.zip.ZipCoder.encoder()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.until(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReduceOps.12ReducingSink.combine(12ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isLinkLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Math.ulp(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.pow(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TimSort.mergeAt(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.TreeMap.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getWeakReference(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getInstant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Dimension2D.setSize(Dimension2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.makeFormat(int, int, StringBuilder[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.IntPipeline.findAny()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.GetInstance.Instance.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.setHeadAndPropagate(AbstractQueuedSynchronizer.Node, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absHighest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.permutedTypesMatch(int[], BasicType[], Name[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.newLine()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "java.time.ZonedDateTime.withZoneSameInstant(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.IdentityHashMap.access$000(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.DoubleCumulateTask.compareAndSetPendingCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getNumberInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.get(long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException", 
            "TimeoutException"
        ], 
        "inter_proced": [
            "InterruptedException", 
            "AbstractMethodError"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.shutdown()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.security.AccessControlContext.containsAllLimits(AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.decodeRules()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.logging.LogManager.drainLoggerRefQueueBounded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.compute(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.ExtendedProviderHolder.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.isUp0(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.compute()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.enumeration(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.EntrySpliterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.hostsEqual(URL, URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.SharedSecrets.setJavaLangAccess(sun.misc.JavaLangAccess)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.LinkedList.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.convertMimeTypeToDataFlavors(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectCharBufferRU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.allOf(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "sun.invoke.util.Wrapper.makeArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.abs(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.genInvalidFieldMessage(TemporalField, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.oIDCheck(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.MethodArray.addAll(Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingSubMap.absHighFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.processWorkerExit(ThreadPoolExecutor.Worker, boolean)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.util.ArrayList.listIterator(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachValue(long, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.wait(long, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getActiveWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.CopyMoveHelper.copyToForeignTarget(Path, Path, CopyOption[])": {
        "intra_proced": [
            "IOException", 
            "FileAlreadyExistsException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.sort(Comparator)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ShortBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getHost(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectLongBufferS.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.name(Class, boolean)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.intBuilder(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createInterleavedRaster(DataBuffer, int, int, int, int, int[], Point)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextBoolean()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionsHash.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.add(int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.resolve(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(OfInt, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.getDayOfYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Container.adjustListeningChildrenOnParent(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.collectLong(PipelineHelper, Spliterator, boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.reconstitutionPut(Hashtable.Entry[], Object, Object)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.security.cert.Certificate.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.initFromCollection(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.URI.Parser.parseHostname(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigInteger.modPow2(BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TreeMap.AscendingSubMap.absLowFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.IntCumulateTask.quietlyComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AllPermissionCollection.add(Permission)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SecurityException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.getDirectMethodCommon(byte, Class, MemberName, boolean, boolean, Class)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "InternalError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MemberName", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.getAndDecrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.readLine(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EnumMapIterator.checkLastReturnedIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.keySpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.isConstantZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.isR(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.toString(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.ToolkitEventMulticaster.add(AWTEventListener, AWTEventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.OptionalInt.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.flattenLong(Node.OfLong)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.append(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.LongOverflow.check(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.spi.CharsetProvider.charsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.jar.Attributes.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.withDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.channels.spi.AbstractSelector.end()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.getUnchecked(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamEncoder.flushBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ActionEvent.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.ScrollPaneAdjustable.removeAdjustmentListener(AdjustmentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.helpComplete(WorkQueue, CountedCompleter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getLargestPoolSize()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.atZone(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Calendar.getBaseStyle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isMCNodeLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.applet.Applet.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(Class, Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getSampleFloat(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.forName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createPopupMenu(PopupMenu)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getParameterTypes(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.copyMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.match(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.and(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getPrefixLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.requestFocus(sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.KeyFactory.apply(ClassLoader, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.read()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.security.SecureRandom.getSecureRandomSpi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.myFRC(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.Redirect.1.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.remove()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.io.ObjectStreamClass.getLocalDesc()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.newInstance(URL[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setMinimumSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.cloneCoordsFloat(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setLong(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CompositeFont.isStdComposite()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readFloat()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.nio.HeapByteBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.removeOwnedWindow(WeakReference)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormat.getDateTimeInstance(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.spreadInvoker(MethodType, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType", 
            "MethodType", 
            "MethodType", 
            "ClassCastException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.getSocket()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Timer.serialNumber()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createFrame(Frame)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.register(AbstractSelectableChannel, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.layoutContainer(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "Component"
        ]
    }, 
    "java.time.OffsetDateTime.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.longs(long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.typeCheck(Enum)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Point2D.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.bitCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.parseAmbiguousDatesAsAfter(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printStackTrace(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.internalGet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.draw3DRect(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.ManagedBlocker)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.ofYearDay(JapaneseEra, int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.getWeekRange(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toLowerCase()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.addIfAbsent(Object, Object[])": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.getLanguage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getGenericInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.setSides(SidesType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.compareTo(Integer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.EventType.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.indexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.resolve(byte, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.Window.getShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.setLocalResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.compute(Object, BiFunction)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.containsAllPDs(ProtectionDomain[], ProtectionDomain[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Panel.AccessibleAWTPanel.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isRepresentationClassCharBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(BigInteger, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printString(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.net.Inet6Address.getHostAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextComponent.getCharCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.changeReferenceKind(byte, byte)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.security.KeyStoreSpi.engineStore(LoadStoreParameter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getReds(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isVisible()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.compareTo(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getDataElement(int[], int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Character.isSpaceChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.arityCheck(Object[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.Collectors.groupingBy(Function, Supplier, Collector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Timer.sched(TimerTask, long, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.byteAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.rangeCheckForAdd(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.evaluate()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.leftOf(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.access$300(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readUnsignedShort()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.put(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IntSummaryStatistics.combine(IntSummaryStatistics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(Object[], Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Collection.removeIf(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getExtendedState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EntrySet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.addZeros(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.nextInt()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.makeSpliterator(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.lookupswitch(c0)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "IllegalFormatConversionException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.ObjectInputStream.readLongUTF()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getTag(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.insertSeparator(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ref.Finalizer.runAllFinalizers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.getFallbackLocale(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.net.Inet6Address.isSiteLocalAddress(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.lookupswitch($i5)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Executable.getAnnotatedExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.appendTo(StringBuilder, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.createSecondaryLoop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.checkAddress(InetAddress, String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.compareTo(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.WeakCache.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.layoutChars(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Checkbox.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.Class.getDeclaringClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.removeReferences(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.bind(SocketAddress)": {
        "intra_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.HijrahDate.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.text.NumberFormat.getInstance(Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isEnabledImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(WindowListener, WindowListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.reparentTraverse(ContainerPeer, Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt.bufferCreate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permission.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceEntries(long, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.modInverse(BigInteger)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.Duration.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.add(PopupMenu)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "sun.java2d.cmm.ProfileDeferralMgr.registerDeferral(ProfileActivator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.findYear(long, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Path2D.quadTo(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.asIntBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.setMaxPriority(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.TimeUnit.convert(long, TimeUnit)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfRef.makeChild(Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.createHierarchyEvents(int, Component, Container, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.iterator(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEnvironment.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.removeRange(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.tableswitch($i0)": {
        "intra_proced": [
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException", 
            "NoninvertibleTransformException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.get(String, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.tryRelease(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.format(Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException", 
            "DuplicateFormatFlagsException"
        ]
    }, 
    "java.util.logging.LogManager.access$1300(LogManager, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.getPosixFilePermissions(Path, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarEntry.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectFloatBufferRU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.collectArguments(MethodHandle, int, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodType", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.StringBuilder.append(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.VM.isSystemDomainLoader(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.ArrayDeque.offerLast(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.file.Files.FileTypeDetectors.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(byte[], byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.newNode(String, String, DateTimeFormatterBuilder.PrefixTree)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.copy()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Permissions.getPermissionCollection(Permission, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Double.doubleToLongBits(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.valueOf(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.text.AttributeEntry.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.getActions(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.getFieldStrings(int, int, DateFormatSymbols)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.geom.Curve.pointCrossingsForPath(PathIterator, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.length(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getSerializableConstructor(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.mixOnReshaping()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Scrollbar.getPageIncrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toString(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.addMethod(MethodDescriptor)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.temporal.IsoFields.getWeekRange(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.toMillis(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.append(PathIterator, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.insertParameterTypes(int, Class[])": {
        "intra_proced": [
            "MethodType"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.Arrays.parallelSort(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.getInteger(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DateFormatSymbols.getProviderInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AlphaComposite.getInstance(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.schedule(Runnable, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.getLevelName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getRenderingIntent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.tableswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.remainder(BigDecimal, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.OffsetTime.truncatedTo(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.IntrinsicMethodHandle.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.Entry.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.1.nextIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.firePropertyChange(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.putIfAbsent(Object, Object)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.appendEncoded(StringBuffer, char)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.nio.DirectIntBufferRS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsConstructor(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getInstance(Locale)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.getEmptyResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.setCurve(Point2D[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.IteratorSpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "sun.misc.Resource.getCodeSourceURL()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleResources.getDecimalFormatSymbolsData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileVisitOption.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getSample(int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Locale.getInstance(String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.IdentityHashMap.IdentityHashMapSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setMinutes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.Reflection.filterFields(Class, Field[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDisplayNames(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.visitField(int, String, String, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implRemoveService(Service)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.normalize(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.writeObject(ObjectOutputStream)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.nio.file.TempFileHelper.createTempDirectory(Path, String, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.IsoChronology.date(Era, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.setKeepAliveTime(long, TimeUnit)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.util.prefs.XmlSupport.export(OutputStream, Preferences, boolean)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.logging.LogRecord.setResourceBundle(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.set2DigitYearStart(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "sun.font.LayoutPathImpl.pathToPoint(double, double, boolean, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkAccess(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.unlock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.isAfter(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.getBeanInfo(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.getQueueLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.permitStatus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.keySpliteratorFor(NavigableMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "HeadlessException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.awt.Container.getObjectLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.addProvider(Provider)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.put(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.isLoggable(LogRecord)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.isTemporary(Component, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.childSpi(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeLong(long, LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DoubleSummaryStatistics.sumWithCompensation(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.CodePointIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.Beans.isBeansPresent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readUTFSpan(StringBuilder, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.minimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.weakCompareAndSet(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.tailMap(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.access$200(MemberName, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.AbstractStringBuilder.insert(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToDoubleTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.save(Properties, OutputStream, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitUnboxing(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterator.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.InetSocketAddressHolder.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocusInWindow(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.ofWeekBasedYear(Chronology, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceKeysToLong(long, ToLongFunction, long, LongBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.remove(TrayIcon)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.OptionalDouble.of(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getShort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.isMultipleMode(FileDialog)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getModifiersExText(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.firstNonzeroIntNum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.tableswitch($i1)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.validateTree()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.preferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PopupMenu.getItemCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.ZipFileInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putOrderedObject(Object, long, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermissionCollection.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.tabAt(Node[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getRawClassAnnotations(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getShort(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getJustifiedLine(float, float, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.set(String, String, int, String, String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.SliceIS.toLower(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectFloatBufferRS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedKeyTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedInputStream.getBufIfOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.of(ChronoLocalDate, LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.isWeekDateSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.VerifyType.isNullConversion(Class, Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DoubleSummaryStatistics.getMin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.isCallerSensitive(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.Dialog.toBack()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapEntryIterator.prevEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.readLine(String, Object[])": {
        "intra_proced": [
            "IOError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.net.ServerSocket.setReceiveBufferSize(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.Window.setType(Window.Type)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalComponentStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.clearMostRecentFocusOwnerOnHide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getMinimumYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.LongCumulateTask.quietlyComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.keys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.shape(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectShortBufferU.get(short[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "Error"
        ]
    }, 
    "java.math.BigInteger.not()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isISOControl(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.open(SocketAddress)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.CausedFocusEvent.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toCodePoint(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.prepareImage(Image, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.preferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.unorderedSkipLimitSpliterator(Spliterator, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.disposeImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "InvocationTargetException"
        ]
    }, 
    "java.io.FileSystem.delete(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceValuesTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToIntTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.deepEquals(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.Desktop.browse(URI)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.text.DecimalFormatSymbols.getInternationalCurrencySymbol()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setTemporaryLostComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitArrayOp(LambdaForm.Name, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.evaluate(TerminalOp)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipCoder.decoder()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.await()": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.hasWaiters(ConditionObject)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.nio.HeapByteBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.ArrayAccessor.getAccessor(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.previousOrSame(DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getRequestProperty(String)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.CharArrayWriter.writeTo(Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.floorEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.remainderKnuth(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Collections.CheckedMap.typeCheck(BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.lambda$comparingInt$7b0bb60$1(ToIntFunction, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.setLoopbackMode(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.scan(int, int, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getValidPixels()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.maybeReBox(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.putVal(Object, Object, boolean)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.valueOf(ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.HashMap.removeTreeNode(HashMap, HashMap.Node[], boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.rangeByWeek(TemporalAccessor, TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyToLongArray(long, Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.setTimeInMillis(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.tailMap(Object, boolean)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJChar.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Boolean.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.image.SunWritableRaster.makeTrackable(DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.IntArraySpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.InetAddressHolder.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.internalGetEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.lazySpliterator(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.getInstance(String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.PerfCounter.getFindClassTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getPolicy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.testBit(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.put(float[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.compare(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.tryAcquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.forEachRemaining(LongConsumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalTime.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.setThrown(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.doSetDefaultActions(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageCapabilities.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.ServiceConfigurationError.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.matchString(String, int, int, Map, CalendarBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.LongWrappingSpliterator.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setReuseAddress(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getField(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.CharacterDataLatin1.getPropertiesEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.findComponentAt(Container, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.CandidateListCache.createObject(sun.util.locale.BaseLocale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.getExponent(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.checkID(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.list(PrintStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.access$100(FieldPosition, Format.Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.compareTo(ChronoZonedDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.security.Provider.implComputeIfAbsent(Object, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "ReentrantLock", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.invoke.MemberName.getReturnType()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "sun.invoke.util.ValueConversions.boxExact(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.loadProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Double.needRoom(boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getName(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceDragEvent.getGestureModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomLongsSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Polygon.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.hybridGCD(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.Vector.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readBlockHeader(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.SelectiveAWTEventListener.getEventMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.merge(Object, Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.AdaptedRunnableAction.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.formatToCharacterIterator(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Arrays.stream(double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.ZoneInfo.getOffsetsByWall(long, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getFlatness()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleSyntaxException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.ZonedDateTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.channels.spi.SelectorProvider.inheritedChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.tryMatch(TransferStack.SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.6ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.getRefreshRate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.parseServer(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendText(TemporalField, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getDate()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringCoding.deref(ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedPredecessors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.time.format.TextStyle.toCalendarStyle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.staticFieldBase(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.release(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.reparentChild(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTime.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.isOnSyncQueue(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.truncatedTo(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "sun.security.util.ManifestEntryVerifier.update(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.tableswitch(i0)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.addWorkerFailed(ThreadPoolExecutor.Worker)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.time.format.DateTimeTextProvider.getText(TemporalField, long, TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.toUpper(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.lookupswitch($i2)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.add(int, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "javax.swing.JRootPane.getContentPane()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.getPath()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.MenuComponent.postEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.TimeZone.getTimeZone(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapShortBuffer.put(short[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.lengthOfYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "sun.misc.Unsafe.copyMemory(Object, long, Object, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.size()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.setPrimFieldValues(Object, byte[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.trailingZeros(char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.appendEscape(StringBuffer, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractInterruptibleChannel.end(boolean)": {
        "intra_proced": [
            "ClosedByInterruptException", 
            "AsynchronousCloseException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.adjustListeningChildrenOnParent(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(float, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getShortL(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.setMinimumIntegerDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.of(int, Month)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapShortBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.maxCharsPerByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.withSecond(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.jar.JarVerifier.2.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.registerProvider0(ZoneRulesProvider)": {
        "intra_proced": [
            "ZoneRulesException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDateTime.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ClassValue.refreshVersion(ClassValue.Version)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJInt.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.tryAcquireNanos(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.readResolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.continueLine(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.parallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.1.previousIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.treeifyBin(Node[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.collectArgumentsChecks(MethodHandle, int, MethodHandle)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodType", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.font.TextLayout.singleFont(char[], int, int, Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.CheckedCollection.zeroLengthElementArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isProtected(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.accept(int, String)": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.dateNow(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Graphics2D.getColor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isIPv4CompatibleAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.removeImageImpl(Image)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.split(char[], int[])": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.add(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.scan(int, int, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.printf(Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "DuplicateFormatFlagsException", 
            "FormatterClosedException", 
            "IOException"
        ]
    }, 
    "java.net.DatagramSocket.isBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.setSeed(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeUTF(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.range(long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.Semaphore.tryAcquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(double, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.filterArgumentChecks(MethodHandle, int, MethodHandle)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.AttributedStringIterator.getAttribute(Attribute)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.adapt(Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "HeadlessException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.DoubleCumulateTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.resetSeed(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.swap(List, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.getFromBackup(Entry[], Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.setDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferUShort.getBankData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.userRoot()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.tryUnpush(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.checkLookupTable(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.util.GregorianCalendar.computeTime()": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.decode(String)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "UnsupportedOperationException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut(boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "Worker", 
            "ReentrantLock"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.makeLong(Supplier, ObjLongConsumer, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Base64.base64ToByteArray(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.AbstractExecutorService.submit(Runnable, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.getItemListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.ZoneOffset.parseNumber(CharSequence, int, boolean)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.filterArgumentForm(int, LambdaForm.BasicType)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.io.ObjectStreamClass.processQueue(ReferenceQueue, ConcurrentMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.toIntArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isOtherAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.findPropertyType(Method, Method)": {
        "intra_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassLoader.postDefineClass(Class, ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.add(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.StringJoiner.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.PipelineHelper.makeNodeBuilder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printStackTrace(Throwable.PrintStreamOrWriter)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.zone.ZoneRules.getStandardOffset(Instant)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.mergeAt(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.ReferencePipeline.mapToLong(ToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.isOnSyncQueue(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.lookupClassOrNull()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.setText(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.SliceOps.SliceTask.isLeftCompleted(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.subtractExact(long, long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.getErrorsAny()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getPixel(int, int, double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.longToByteArray(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.StringBuilder.lastIndexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.append(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.io.ObjectStreamClass.getMethodSignature(Class[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GraphicsDevice.setFullScreenWindow(Window)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.util.logging.LogManager.getUserContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipUtils.winTimeToFileTime(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.getProlepticMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.isTimeBased()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.getAlphaRaster(WritableRaster)": {
        "intra_proced": [], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.put(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Conversion.isValid(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.defaultPage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "IllegalAccessException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Timestamp.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfoFile.useOldMapping()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.normalized()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.AdaptedCallable.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.get(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptSegDist(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.repaint(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getDouble(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.invokeWithArguments(Object[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.typeSig(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, double, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getVisualHighlightShape(TextHitInfo, TextHitInfo, Rectangle2D)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.TaskQueue.fixDown(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.arrayLength(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.packedBytes(int, int, int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.awt.HeadlessToolkit.createTrayIcon(TrayIcon)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeUTF(String, DataOutput)": {
        "intra_proced": [
            "UTFDataFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Integer.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextDouble(double, double)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.postEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createDragGestureRecognizer(Class, DragSource, Component, int, DragGestureListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.initEphemeralPorts(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.getFields(Class, boolean, String, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.isDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.int3(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.lookupswitch($c0)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getMenuShortcutKeyMask()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException"
        ]
    }, 
    "java.time.LocalDate.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.BitSet.set(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ConditionalSpecialCasing.toUpperCaseCharArray(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.lang.BootstrapMethodError.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.ceilingEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isLowSurrogate(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.resolveOrFail(byte, Class, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.OfDouble.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.setMonths(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.GlyphLayout.get(sun.font.GlyphLayout.LayoutEngineFactory)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getStringBounds(CharacterIterator, int, int, FontRenderContext)": {
        "intra_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.getParameter(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicLong.updateAndGet(LongUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.access$300(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.image.DirectColorModel.createCompatibleWritableRaster(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StrictMath.sqrt(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getEpochDay(int, int, int)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "PrivilegedActionException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Base64.altBase64ToByteArray(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.clearCurrentFocusCycleRootOnHide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.isExternallySet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.setStartYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.ValueSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.parkNanos(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.lookupswitch($c2)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.maybeCompile(LambdaForm, MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitI2X(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isAssignableFrom(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext, Permission[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.awaitWork(WorkQueue, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.put(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.removeItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.holder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.setScale(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Properties.replace(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.setcursor(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactorySpi.engineGetCertPathEncodings()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.of(LocalDateTime, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectCharBufferS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEach(BiConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.createOffsetArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.getAndIncrement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.isKeyEntry(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.getPackages(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.decrementWorkerCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.internArgument(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.access$300(Class, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ServiceConfigurationError"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.internalProperties()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.ZonedDateTime.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.min(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.of(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.evaluateToNode(PipelineHelper, Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.ScrollPane.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.text.DateFormat.getTimeZone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.net.SocksSocketImpl.bindV4(InputStream, OutputStream, InetAddress, int)": {
        "intra_proced": [
            "SocketException", 
            "AssertionError", 
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.LinkedHashMap.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.layout(BigInteger, int, Formatter.BigDecimalLayoutForm)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StrictMath.atan2(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getCalendarSystem(sun.util.calendar.BaseCalendar$Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttributeRunData(Attribute, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.createSubsetSampleModel(int[])": {
        "intra_proced": [
            "RasterFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.newByteChannel(Path, Set, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayoutInfo.hasBaseline(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.JarURLConnection.getJarFileURL()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.clean(TransferQueue.QNode, TransferQueue.QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.get(short[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "Error"
        ]
    }, 
    "java.awt.Component.getInputMethodListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigDecimal.divide(BigDecimal, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Arrays.rangeCheck(int, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Comparator.thenComparing(Function)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.TextField.processActionEvent(ActionEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeListenerProxy.getListener()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.getMaxValue(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.Manifest.readLine(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.groupingBy(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.objectFieldOffset(Field[], String)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.max(Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.TextComponent.setSelectionEnd(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.get0(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.parseIPv6Reference(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.replace(Object, Object)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.afterNodeAccess(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStreamReader.getEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Hashtable.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.time.chrono.Ser.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.InetAddress.anyLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.event.WindowEvent.getOppositeWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.getHostAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Tripwire.trip(Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DoubleSummaryStatistics.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.lambda$find$83(BiPredicate, FileTreeWalker.Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.preInitMaximumArraySizes(Container)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitInvoke(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Ctype.complement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getFieldType()": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.handleEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.zeroPaddingNumber(int, int, int, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.awt.geom.RectangularShape.setFrameFromDiagonal(Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.socketPreClose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.ZipEntryIterator.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.SerialCallbackContext.getObj()": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException"
        ]
    }, 
    "java.awt.image.WritableRaster.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.setLocalResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getValueIsAdjusting()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.internalNextLong(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.setParsed(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.CheckedCollection.typeCheck(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.next(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getPrimFieldValues(Object, byte[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingSubMap.absLower(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.add(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.beans.FeatureDescriptor.appendTo(StringBuilder, String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.temporal.IsoFields.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.keyFor(Selector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.removeChildLogger(LoggerWeakRef)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.forEach(Consumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setBoolean(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.internalGet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.get(int[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferUnderflowException"
        ]
    }, 
    "java.math.BigDecimal.divide(long, int, long, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SortedOps.end()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.Chronology.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.of(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(int[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.transferFocusUpCycle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.rangeWeekOfWeekBasedYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.ensureCapacity(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getMouseEventTarget(int, int, boolean, Container.EventTargetFilter, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.canBeStaticallyBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(boolean[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferB.put(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.rotateLeft(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.canSet(StreamOpFlag.Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.saveConvert(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsValid(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.isNegative()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.set(ThreadLocal, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.normalize()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Currency.getMainTableEntry(char, char)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.ensureOpenOrZipException()": {
        "intra_proced": [
            "ZipException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DigitList.extendDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.getFloat(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.flushBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readShort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.correctType(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.enableInputMethods(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributeEntry.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.signum(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToLongTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.getNormalizedYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.isZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.removeActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.isFirstOrDisposed()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.Collections.indexedBinarySearch(List, Object, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.quiesceCommonPool()": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "RuntimeException"
        ]
    }, 
    "java.time.format.DateTimePrintContext.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getCertificate(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.isPlaceholder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.processQueue(ReferenceQueue, ConcurrentMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.indexOf(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.DateFormatProvider.getDateInstance(int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectionKey.selector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.max()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.font.TextLayout.sameBaselineUpTo(Font, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.absLowest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.getIndexedPropertyType0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.isKnown(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeObject0(Object, boolean)": {
        "intra_proced": [
            "NotSerializableException", 
            "NotSerializableException"
        ], 
        "inter_proced": [
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "UnsupportedOperationException", 
            "ClassCastException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InternalError"
        ]
    }, 
    "java.awt.FontMetrics.getMaxAscent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getMissingGlyphCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getListenersCount(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.fromCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getEnclosingMethod()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.Calendar.getActualMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.zip.InflaterInputStream.ensureOpen()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitLoadInsn(BasicType, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Long.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.freeEntry(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.spread(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getAmPmStrings()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.setCurve(Point2D, Point2D, Point2D, Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.registerWorker(ForkJoinWorkerThread)": {
        "intra_proced": [
            "ForkJoinPool"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.findDirectMethodHandle(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.isConstantZero()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.setText(CharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapKeyIterator.prevEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.1.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.setDouble(Object, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.remove()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.CharBufferSpliterator.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.ShortBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ProcessBuilder.start()": {
        "intra_proced": [
            "NullPointerException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.LinkedHashMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.hasSameRules(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.disposeImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.newNode(int, Object, Object, HashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.putTreeVal(HashMap, HashMap.Node[], int, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.isValidDay(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "sun.java2d.StateTrackableDelegate.markDirty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getInt(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.wrap(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.resolve()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.regex.Pattern.match2(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.doInvoke()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.TextField.getMinimumSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.legacyMergeSort(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readClassDescriptor()": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "EOFException", 
            "EOFException"
        ]
    }, 
    "java.awt.GraphicsCallback.PaintHeavyweightComponentsCallback.runComponents(Component[], Graphics, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.max(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getBufferSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageCapabilities.isAccelerated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.fieldHolder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.processMouseWheelEvent(MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.tieBreakOrder(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.isValidOffset(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkRead(FileDescriptor)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.WeakHashMap.resize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.contains(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Canvas.createBufferStrategy(int, BufferCapabilities)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "Error", 
            "Error", 
            "Error"
        ]
    }, 
    "java.awt.Toolkit.createPanel(Panel)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.getPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.tableswitch($i1)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.add(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.removeNode(int, Object, Object, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.removeMouseListener(MouseListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.appendTo(StringBuilder, String, Reference)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.asFileAttribute(Set)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "sun.invoke.util.BytecodeDescriptor.unparse(MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferUShort.setElem(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractSpinedBuffer.count()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.contains(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.ofPattern(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.spi.AbstractSelector.implCloseSelector()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.newEntry(ZipEntry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToDoubleTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.subSequence(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.reinitialize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.DirectByteBuffer.putShort(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.needIncrement(long, int, int, long, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.deleteOnExit()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.1Splitr.newSpliterator(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitArrayLoad(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.compute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferByte.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStroke(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.privateGetMethodRecursive(String, Class[], boolean, MethodArray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.setEOF(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Console.readLine()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOError", 
            "IOException"
        ]
    }, 
    "java.net.URI.Parser.scanIPv4Address(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isDesktopSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.getInvocationHandler(Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.rangeCheck(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.IOException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.setResult(LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.tableswitch($i12)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.MouseWheelEvent.getClickCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.resolveOrFail(byte, MemberName, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ClassCastException"
        ]
    }, 
    "java.nio.DirectByteBuffer.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.invoke(ForkJoinTask)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "CancellationException", 
            "ReentrantLock"
        ]
    }, 
    "java.time.temporal.IsoFields.getWeekRange(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.datatransfer.MimeType.getSubType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.selectFields()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.ensureMemberAccess(Class, Class, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.parseMonths(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Math.multiplyExact(int, int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Enum.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.security.KeyStore.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Locale.tableswitch(i0)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.listIterator(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.InetAddress.get(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.toLower(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.AbstractCollection.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.CollectorTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.finer(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.list()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.casTabAt(ConcurrentHashMap.Node[], int, ConcurrentHashMap.Node, ConcurrentHashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.setScale(int, RoundingMode)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.viewAsType(MethodType, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.Component.getFont(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.toPattern()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.DataBuffer.getDataTypeSize(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.InputEvent.getButtonDownMasks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getPropertyChangeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.set(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.KeySet.tailSet(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.ChronoPrinterParser.getChronologyName(Chronology, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.copy(Path, Path, CopyOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getBidiEmbedding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.flushSpi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToTranslation(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.toFormatter(Locale, ResolverStyle, Chronology)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.nio.DirectByteBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.cloneArray(Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.pop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.Class.setSigners(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.compareCerts(Certificate[], Certificate[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DoubleSummaryStatistics.getSum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.createLink(Path, Path)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.rangeFor(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.resetLogger(Logger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.print.PageFormat.getImageableHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.valueOf(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongArrayNode.forEach(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.end()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getBroadcast()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "sun.util.calendar.CalendarDate.setMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.putIfAbsent(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAllByName0(String, InetAddress, boolean)": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": [
            "InetAddress", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.time.DayOfWeek.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.checkedEntry(Entry, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.value()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.getOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getModifiersEx()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.Node[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfDouble.forEach(DoubleConsumer, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.rotateLeft(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.ReferenceQueue.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.initStack()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypeWrapper()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getInstanceRef(Locale)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.produceEquivalentAlternation(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Properties.load0(LineReader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.preparedFieldLambdaForm(byte, boolean, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "MethodType", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.HeavyweightFocusRequest.addLightweightRequest(Component, boolean, sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.explicitCastArgumentsChecks(MethodHandle, MethodType)": {
        "intra_proced": [
            "WrongMethodTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Collectors.toConcurrentMap(Function, Function, BinaryOperator, Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.tableswitch($i5)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.regex.Matcher.group(int)": {
        "intra_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.AbstractPipeline.wrapAndCopyInto(Sink, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.take()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getOutputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.safeTrim(byte[], int, Charset, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.toCharArray(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormatSymbols.setAmPmStrings(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getInstance(Locale)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.invoke.util.ValueConversions.unboxCast(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.PerfCounter.getFindClasses()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.EntryIterator.Entry.checkIndexForEntryUse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.appendTail(StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.transform(float[], int, float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.getLocalizedDateTimePattern(FormatStyle, FormatStyle, Chronology, Locale)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i5)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.readOrdinaryObject(boolean)": {
        "intra_proced": [
            "InternalError", 
            "InvalidClassException"
        ], 
        "inter_proced": [
            "InvalidClassException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "AssertionError", 
            "ExceptionInfo", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.NumberFormat.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparator.thenComparingDouble(ToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Collectors.lambda$averagingInt$139(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.resolveWBY(Map, Chronology, int, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.logging.Level.KnownLevel.findByLocalizedLevelName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.load(Properties, InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.ModalityType.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.VKCollection.findName(Integer)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.offer(Runnable)": {
        "intra_proced": [
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.decode(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.toResourceName0(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.partitioningBy(Predicate, Collector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LongSummaryStatistics.getMax()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.asNormalOriginal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.offerFirst(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.util.Properties.access$000(ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.getAdler()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.getInt(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.readPrimordialConfiguration()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DoubleBuffer.get(double[], int, int)": {
        "intra_proced": [
            "BufferUnderflowException"
        ], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.EntrySet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.run()": {
        "intra_proced": [
            "IOException", 
            "InternalError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.CharacterData02.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.encode(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.nio.Bits.getCharB(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.accept(double)": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.net.URI.scanHexSeq(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.localizedDayOfWeek(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.hasQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.Traverser.pushState(Node[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ParseException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.unreserveMemory(long, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.mapSignersToCodeSource(URL, CodeSigner[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.InflaterInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "ZipException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "NullPointerException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.StringReader.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getMinimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.connect(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.compareTo(Boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.parallelStream()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.security.cert.Certificate.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.floorMod(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.toKey(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleExtensions.getUnicodeLocaleType(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.validateUnconditionally()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.dispatchUncaughtException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.TypeResolver.resolveInClass(Class, Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.setAccessible0(AccessibleObject, boolean)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.setTargetNormal(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.getUnchecked(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferRB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.makeImpl(Class, Class[], boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJLong.Merger.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.RGBImageFilter.filterIndexColorModel(IndexColorModel)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.matchesField(Format.Field, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.ensureDefaultLogger(Logger)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.replaceObject(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getFromClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "EmptyStackException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendPattern(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectDoubleBufferRU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessEnvironment.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.put(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.newIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.registerChrono(Chronology)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.Raster.createBandedRaster(int, int, int, int, Point)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.FloatBuffer.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.getSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectConstructorNoSecurityManager(Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.addRequestProperty(String, String)": {
        "intra_proced": [
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.makeRef(Consumer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferByte.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.addLocalLogger(Logger, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.1Splitr.arrayForOne(int[], int, IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseDefaulting(TemporalField, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.skipDelimiters(int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayDeque.removeFirstOccurrence(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.StrictMath.scalb(double, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.add(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Inet6Address.getByAddress(String, byte[], NetworkInterface)": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Arrays.stream(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.tieBreakOrder(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributeEntry.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.getKeyUniverse(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.helpQuiesce()": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.awt.geom.Rectangle2D.outcode(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.remove(AWTEventListener, AWTEventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isTitleCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.getMinimumAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.time.OffsetTime.getMinute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.unlinkFirst(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.mapToLong(DoubleToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.set(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.format.TextStyle.asStandalone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getComponents(int, int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setPixel(int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.addAll(int, Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.CharacterData02.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permissions.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.logging.LogRecord.setResourceBundleName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.flip(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.AWTKeyStroke.getModifiersText(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.removeWindowStateListener(WindowStateListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.tryCompensate(WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.fs.DefaultFileSystemProvider.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.isConvertibleTo(MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.UnsupportedOperationException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "ClassCastException"
        ]
    }, 
    "java.security.Permission.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.getInputStream()": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(OfDouble, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CharacterIteratorFieldDelegate.getIterator(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.flush2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCertPath(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.createImpl()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.debugString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URLConnection.getContentLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getDayOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.put(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.DeferredCloseProcessPipeInputStream.raise()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystemException.getReason()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.buildNames(LambdaForm.Name[], LambdaForm.Name[], LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(short[], short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.roll(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Long.toString(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(InputMethodListener, InputMethodListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.compareTo(Delayed)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putInt(ByteBuffer, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.readTreeSet(int, ObjectInputStream, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.resize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Bound.check(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.truncatedTo(TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.StringBuffer.substring(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.anyMatch(DoublePredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashSet.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.MappedByteBuffer.load0(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setSample(int, int, int, float, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.initCauseFrom(Error, Exception)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getSeconds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.intersects(BitSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.getMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.lines(Path)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.util.SimpleTimeZone.setDSTSavings(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Policy.isSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.siftDown(int, RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToLongTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.stream(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.WeakHashMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getContainerListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.parallelSetAll(long[], IntToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.interrupt(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.justify(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withResolverStyle(ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "IllegalThreadStateException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.IsoChronology.isLeapYear(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.ofEpochDay(long)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getLongL(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.isPreserved(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.magSerializedForm()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.dateNow(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.beans.BeanDescriptor.getCustomizerClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.getAlignOnBaseline()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistEra.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.superConnectServer(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Signal.getNumber()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.parse(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setFont(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.AbstractQueue.offer(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.isNaN()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ImageMediaEntry.parseflags(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJDouble.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.sync()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.regex.Pattern.match(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "SecurityException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.bval(Transform.Kind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.equals(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.offer(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.withSecond(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.zone.ZoneRules.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getKeyClass(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringKeySet.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.getDateInstance(int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Toolkit.getScreenInsets(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.ensurePrestart()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.time.LocalDateTime.getMonthValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.tryReleaseShared(int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.LoaderReference.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.start()": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": [
            "IllegalThreadStateException"
        ]
    }, 
    "java.awt.Toolkit.loadLibraries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.finer(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.findGetter(Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.awaitRunStateLock()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.misc.FormattedFloatingDecimal.getExponentRounded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.substring(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.getTranslatedRegion(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.parsePattern(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.tryUnpush(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Conversion.isText(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.limit(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getPreferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.findReplacement(Entry[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.JarEntryIterator.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.hasQueuedPredecessors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.drainTo(Collection, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.cancelLaterNodes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.finalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractPlainSocketImpl"
        ]
    }, 
    "java.util.stream.ReduceOps.9ReducingSink.combine(9ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putShort(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isMCOrgLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getIntL(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.CumulateTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineGetCertificateChain(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptLineDist(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AppContext.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getTimeImpl()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.longs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.write(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContentLengthLong()": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.ClassValue.match(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.hasExtensions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.openPipe()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.isBefore(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.transform.TransformerFactory.newTransformer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.getName(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.UNIXProcess.newFileDescriptor(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getTraversalRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setSocketImplFactory(SocketImplFactory)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.jar.JarVerifier.nothingToVerify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.cancelAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.write(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.parseParameterAnnotations(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.setOption(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.min(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getEntryUsingComparator(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getActionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.fill(long[], long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setSample(int, int, int, int, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DelegatingSpliterator.OfPrimitive.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.util.Formatter.parse(String)": {
        "intra_proced": [
            "DuplicateFormatFlagsException"
        ], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "IndexOutOfBoundsException", 
            "UnknownFormatConversionException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.EntryIterator.nextIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.createRunAttributeDataVectors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.tableswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.setFieldsComputed(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getDayOfWeekDateOnOrBefore(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.print(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.Vector.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypeClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.getOwner(Path, LinkOption[])": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfPrimitive.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.prefixOf(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.setFile(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.readAllLines(Path, Charset)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToDoubleTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.access$200(ServiceLoader, Class, URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "ServiceConfigurationError", 
            "UnknownServiceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.11ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getDisplayName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.canonicalizeRegion(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.isSupported(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.ref.ReferenceQueue.enqueue(Reference)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDate.timeLineOrder()": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.Introspector.flushCaches()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.getPool()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.select(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.HashSet.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.text.Normalizer.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.putTreeVal(int, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.AsVarargsCollector.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.subformat(StringBuffer, FieldDelegate, boolean, boolean, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.jar.JarFile.getMetaInfEntryNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.setInterface(InetAddress)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.tryLock(long, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.longs(long, long, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.doneWithMeta()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.count()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.file.Files.loadInstalledDetectors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.makeDynamicInvoker()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandles", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.DirectIntBufferU.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(byte, Locale)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.remove(DragSourceMotionListener, DragSourceMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.isSynthetic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.destroy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.forEach(BiConsumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.synthesizeAllParams()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.set(Object)": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.tableswitch($i2)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.util.stream.IntStream.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.preAccept()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.destroyBuffers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.ofCalendarField(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.multiplyToomCook3(BigInteger, BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachKeyTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.currentSegment(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.write(ByteBuffer[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.3.apply(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeFloats(float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isStandardTextRepresentationClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.normalize(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Class.removeByNameAndDescriptor(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isUnicodeIdentifierStart(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.put(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.ClassRepository.make(String, sun.reflect.generics.factory.GenericsFactory)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putDouble(int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.of(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.image.SampleModel.setDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.TextStyle.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getBootstrapClassPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.setPixels(int, int, int, int, ColorModel, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.removeMouseMotionListener(MouseMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.addAll(Collection)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.setTimeZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.setLocation(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.makeShort(byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.updateForm(LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.Math.min(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.ofTotalSeconds(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedMappingTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DoubleWrappingSpliterator.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalQueries.offset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.toMatchResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newReader(ReadableByteChannel, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedCharsetException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectLongBufferU.put(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.addToVector(Object, int, Vector, int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.time.OffsetDateTime.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.Math.round(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.ToolkitEventMulticaster.removeInternal(EventListener, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.date(Era, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "sun.reflect.misc.ReflectUtil.checkProxyPackageAccess(ClassLoader, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.makeMethodHandleInvoke(String, MethodType, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.triggerTime(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.GetField.get(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.getErrorsID(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.make72Safe(StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.parallelPrefix(int[], int, int, IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.CubicIterator.currentSegment(float[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getIntegerInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.floor(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.zip.ZipFile.ZipEntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong.makeSpliterator(OfLong)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.setGraphicsConfiguration(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.forEach(BiConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.returnTypesMatch(String, Object[], Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.CharacterDataLatin1.toUpperCaseEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.Providers.getFullProviderList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setupResourceInfo(String, Class)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "MissingResourceException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.security.BasicPermissionCollection.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "sun.net.RegisteredDomain.getRegisteredDomain(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.search(long, BiFunction)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(byte[], int, int, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.setTimeToLive(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.offer(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.stream.LongStream.iterate(long, LongUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.getInstanceXYWH(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getDefaultList(String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.printString(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractInterruptibleChannel.begin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.available()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.event.ItemEvent.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.readObject(ObjectInputStream)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.ResourceBundle.isValidBundle(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.atDate(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.AbstractPipeline.evaluateToArrayNode(IntFunction)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.TextArea.getMinimumSize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.charsWidth(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ResourceBundle.CacheKey.setCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.withYears(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.ClassWriter.toByteArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.paramString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.setToRotation(double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.isLeapYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.run()": {
        "intra_proced": [
            "Thread"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.Line2D.intersectsLine(Line2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.tableswitch($i2)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.mapToInt(ToIntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.removeMouseWheelListener(MouseWheelListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivileged(PrivilegedAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.set(String, EventListener[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Throwable.printStackTrace(PrintStreamOrWriter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.isConnectionResetPending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.nullCheck(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.usesFractionalMetrics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.TextStyle.isStandalone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.createAttributedCharacterIterator(String, Attribute, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkExec(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.math.BigDecimal.UnsafeHolder.setIntCompactVolatile(BigDecimal, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.getDayOfYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.newEncoder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.KnownLevel.matches(Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillArray(Integer, Object[], Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getContent()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException", 
            "NullPointerException", 
            "UnknownServiceException"
        ]
    }, 
    "sun.util.calendar.CalendarUtils.isJulianLeapYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.get(TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.net.PortConfig.getUpper()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getImpl(String, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.nio.HeapByteBuffer.putShort(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEnvironment.put(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isBridge()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkListen(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.time.chrono.MinguoChronology.isLeapYear(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.paint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.redirectOutput(Redirect)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.JComponent.getComponentCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.processMouseWheelEvent(MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StackTraceElement.getMethodName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.tailSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.9.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleExtensions.getUnicodeLocaleAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getInt(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getMonthValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.helpTransfer(Node[], Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putInt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getCalendarType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.getNumBands()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setNormalizedYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavorsAsList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.prefs.XmlSupport.putPreferencesInXml(org.w3c.dom.Element, org.w3c.dom.Document, Preferences, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.6.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.init(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.readConfiguration(InputStream)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "IllegalStateException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ClassNotFoundException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.isTransitionYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.access$100()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferL.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.ComponentOrientation.getOrientation(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.nio.channels.FileLock.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.allowsMultipleSelections()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.getPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuComponent.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapByteBuffer.getFloat(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.access$400(AttributedString, AttributedCharacterIterator.Attribute, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.form()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.CacheKey.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.getListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.implAccept(Socket)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "SocketException"
        ]
    }, 
    "java.lang.CharacterName.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.paintHeavyweightComponents(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.apply(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.FontRenderContext.getAntiAliasingHint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.endEdit()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.text.ChoiceFormat.getFormats()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.getDisplayName(TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Character.isSurrogate(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.extendWith(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.LongStreamBuilderImpl.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToIntTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.getResolutionVariant(Image)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.replaceAll(UnaryOperator)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.fixResult(int, Name[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addVetoableChangeListener(VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.getInterface()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Arrays.fill(char[], char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.checkID(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.maskNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeListenerProxy.getPropertyName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.subHigher(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.implReplaceWith(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.findComponentAt(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitNewArray(LambdaForm.Name)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "InternalError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToDoubleTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.node(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.deltaTransform(double[], int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.unreflect(Method)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.isSealed(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.resume()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectInputStream.readChars(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.util.SimpleTimeZone.getEnd(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar.Date, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.tableswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "RasterFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.nio.file.AccessMode.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.equals(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.awt.image.DataBufferFloat.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getActualMinimum(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.Formatter.Conversion.isFloat(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.FieldReflector.getFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getSelectedIndexes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createTempDirectory(Path, String, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.helpQuiescePool(WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.filterReturnValueChecks(MethodType, MethodType)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.dateNow(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.collect(Collector)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.jar.JarVerifier.1.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.descendingKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileVisitOption.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.getFloat(String, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "sun.misc.FormattedFloatingDecimal.getMantissa()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.checkPtype(Class)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceKeysTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Conversion.isInteger(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.getSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.DecimalFormatSymbolsProvider.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.setMinimumFractionDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.isPastCutoverDate(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormBuffer.copyNamesInto(LambdaForm.Name[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.short1(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.hashCode(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.removeAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.toInstant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedEntryTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ModalEventFilter.compareTo(ModalEventFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.formatted(Format.Field, Object, int, int, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.checkScale(long, long)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.setLocalPatternChars(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.wrap(long[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.submit(Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AbstractMethodError"
        ]
    }, 
    "java.awt.Component.getComponentListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.insert(int, char[], int, int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Locale.getScript()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.OfPrimitive.count()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.parallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.getPrivateuse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.DescendingSubMap.absFloor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getFlavorsForNatives(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.ModalExclusionType.compareTo(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.linkCallSiteTracing(Class, MethodHandle, String, MethodType, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.awt.GraphicsDevice.getDisplayModes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.offerFirst(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getYOnScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.access$500(Provider.Service, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permissions.elements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.throwException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.offer(Object, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException", 
            "InterruptedException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.time.OffsetDateTime.compareInstant(OffsetDateTime, OffsetDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MemberName.isFinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.decode(Charset, byte[], int, int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.NetworkInterface.getAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.LocaleExtensions.getKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.matcher(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.ReflectAccess.getConstructorAnnotations(Constructor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.open0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.io.File.setWritable(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferL.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.checkClassLoaderPermission(ClassLoader, Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Checkbox.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.isDaylightSavings(Instant)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.DirectFloatBufferU.get(float[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferUnderflowException"
        ]
    }, 
    "java.lang.invoke.MemberName.staticIsConsistent()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.LocalDateTime.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.ZonedDateTime.withLaterOffsetAtOverlap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DistinctOps.opEvaluateParallel(PipelineHelper, Spliterator, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.resolveDate(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.io.BufferedWriter.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Graphics2D.getPaint()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getConstructors()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ClassValue.Version.isLive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.updateBytes(int, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.mergePropertyDescriptor(PropertyDescriptor, PropertyDescriptor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parseUnresolved(CharSequence, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigInteger.square()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Hashtable.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doSignalAll(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.getCapabilities()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.localizedWeekBasedYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.setInput(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.removeKeyListener(KeyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.hasQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.search(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.forName(String)": {
        "intra_proced": [
            "UnsupportedCharsetException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalCharsetNameException", 
            "IllegalCharsetNameException"
        ]
    }, 
    "java.awt.font.TextLine.createLineFromText(char[], StyledParagraph, sun.font.TextLabelFactory, boolean, float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.jar.JarVerifier.getCodeSource(URL, JarFile, JarEntry)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "JarException"
        ]
    }, 
    "java.util.ResourceBundle.loadBundle(ResourceBundle.CacheKey, List, ResourceBundle.Control, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.setLastModifiedTime(FileTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String, int, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.event.InvocationEvent.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.balanceDeletion(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.TextStyle.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.zip.ZipFile.access$100(ZipFile, Inflater)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.util.logging.Logger.log(Level, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.downFocusCycle(Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.calculateHashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.makeNodeBuilder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.isResizable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.internalNextLong(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.store(OutputStream, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.methodModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.setCallSiteTargetNormal(CallSite, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Parts.getRef()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getContent(Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException", 
            "NullPointerException", 
            "UnknownServiceException"
        ]
    }, 
    "java.util.Spliterators.spliterator(Collection, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileVisitResult.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Spliterators.1Adapter.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getPreferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.readResolve()": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeUTF(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UTFDataFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDate.isBefore(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBufferR.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.security.Provider.getImplClass()": {
        "intra_proced": [
            "NoSuchAlgorithmException", 
            "NoSuchAlgorithmException"
        ], 
        "inter_proced": [
            "ClassNotFoundException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.MessageFormat.createAttributedCharacterIterator(AttributedCharacterIterator[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.compareHostnames(SocketPermission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.ReflectionFactory.copyField(Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.remove(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.isReachable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.resolveWBY(Map, Chronology, int, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarEntry.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.getSourceActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.getLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.activeGroupCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.checkDelayArgument(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.wakeup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.buildFromSorted(int, int, int, int, Iterator, ObjectInputStream, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.Random.longs(long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.renderable.RenderContext.concatenateTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.compareTo(Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.disconnect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.getNumDataElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.range()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toSurrogates(int, char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfPrimitive.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.setSeconds(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAccessor.get(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ref.Reference.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.drainTo(Collection)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.enq(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkUnprivilegedlookupClass(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.compareAndSwapInt(Object, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerWeakRef.setNode(LogNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeGetter(Class, String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkPermission(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.awt.Container.findComponentAtImpl(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PopupMenu.getItem(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.removeTreeNode(HashMap, Node[], boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentD(BoundMethodHandle, int, double)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getMinimalDaysInFirstWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.deleteCharAt(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterators.LongIteratorSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.hasQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceValuesTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getZoneStrings()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.loadLibrary0(Class, File)": {
        "intra_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError"
        ], 
        "inter_proced": [
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "EmptyStackException"
        ]
    }, 
    "java.util.Vector.Itr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setReuseAddress(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.remove(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.setPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.equals(byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.offsetByCodePoints(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.DataOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.AWTEvent.anAccessSystemClipboard()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.setPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.validate(int, int, int)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GridBagLayout.getLayoutWeights()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicBoolean.set(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createImage(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.ScrollPaneWheelScroller.handleWheelScrolling(ScrollPane, MouseWheelEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.runFinalizersOnExit(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.security.Provider.ensureLegacyParsed()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapCharBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.hasWaiters(Condition)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.setPermission(File, int, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.ArrayAccessor.correctType(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptSegDist(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.normalize(sun.util.calendar.BaseCalendar$Date)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.image.SampleModel.getPixels(int, int, int, int, float[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.linesIntersect(double, double, double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.headMap(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.reflect.annotation.TypeAnnotationParser.buildAnnotatedType(byte[], sun.reflect.ConstantPool, AnnotatedElement, Class, Type, sun.reflect.annotation.TypeAnnotation.TypeAnnotationTarget)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.AccessibleAWTComponent.removePropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.aggregateStamp(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.signum(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.checkNumericZone(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.forBasicType(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.keyOrNull(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.typeCheck(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getMinY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.compareTo(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$700(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.MediaTracker.removeImage(Image, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.map(LongUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.getDecimalStyle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.isLoopback0(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.getenv(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.getClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isMCNodeLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectMethodForConstant(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.getClassContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.putMapEntries(Map, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.getPositiveSign()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsConfiguration.getImageCapabilities()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.file.Files.provider(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Timer.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getToolkitImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.getOwnedWindows()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Button.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.Entry.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.open(Path, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.security.KeyStore.setKeyEntry(String, Key, char[], Certificate[])": {
        "intra_proced": [
            "KeyStoreException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(OfLong, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.demandLogger(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.BorderLayout.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.putId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.of(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.format.Parsed.resolveInstantFields()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.DelayQueue.take()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.regex.Pattern.error(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.wrapSpliterator(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.get(int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReference.getAndAccumulate(Object, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.checkReplaceKFMPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.reflect.Method.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.addKey(SelectionKey)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.IntrinsicMethodHandle.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.unlink(LinkedBlockingQueue.Node, LinkedBlockingQueue.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$counting$123(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.SimpleTimeZone.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.forEach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.join(char[], int[])": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.addNotify(TrayIcon)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.math.MutableBigInteger.divideMagnitude(MutableBigInteger, MutableBigInteger, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.FilePermission.lookupswitch($c21)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractMap.put(Object, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.ConcatSpliterator.OfPrimitive.tryAdvance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.ProviderList.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getStringBounds(String, Graphics)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquire(int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndUpdate(Object, UnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.loadInstalled(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.net.DatagramSocket.checkFiltering(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.stream.ReduceOps.11ReducingSink.combine(11ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.count()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getItemListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.setEra(sun.util.calendar.Era)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addKeyListener(KeyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isAbsolute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Event.getOldEventKey(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getAlpha(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandomSpi.engineSetSeed(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.tailSet(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetWaitStatus(Node, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.isEventHandler(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Collator.compare(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.previousDouble(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.ReducedPrinterParser.withFixedWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBufferR.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.inRange(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.iterator(OfInt)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setPixels(int, int, int, int, float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.sequence(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.setEntry(String, KeyStore.Entry, KeyStore.ProtectionParameter)": {
        "intra_proced": [
            "NullPointerException", 
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToLongTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.newTree(DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.roll(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.collectFractionalDigits(int, char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriod.between(ChronoLocalDate, ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.decodeEndRule()": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.awt.image.VSyncedBSManager.releaseVsync(BufferStrategy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.Year.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.untreeify(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getSystemPackage(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(ContainerListener, ContainerListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.checkPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Nodes.AbstractConcNode.getChild(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.makeChild(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.isFinalCased(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.putFloat(ByteBuffer, int, float, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.putPropertyStrings(Provider.Service)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJByte.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.isMatched(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.nextThreadID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.accumulateAndGet(Object, Object, BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.makeInt(IntPredicate, MatchOps.MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.doubles(double, double)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getDeclaredAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.localizedDayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBufferDouble.setElemDouble(int, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.connect(SocketAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.multipliedBy(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "sun.net.util.IPAddressUtil.isIPv6LiteralAddress(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.access$200(FieldPosition, Format.Field, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.getScaleInstance(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.toNanos(long)": {
        "intra_proced": [
            "AbstractMethodError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeDouble(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypeSlots()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.namesOK(int, Name[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.mapToDouble(LongToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.isP2P0(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillToRight(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "ClassCastException", 
            "AssertionError"
        ]
    }, 
    "java.util.HashMap.KeySpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.SunGraphicsEnvironment.getUsableBounds(GraphicsDevice)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.ManifestEntryVerifier.verify(Hashtable, Hashtable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.SignatureFileVerifier.needSignatureFileBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.geom.QuadIterator.isDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.BundleReference.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.forkSecondaryFinalizer(Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getDefaultSerialFields(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.EventQueue.removeSourceEvents(EventQueue, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.headSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.loadClassInternal(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassNotFoundException"
        ]
    }, 
    "java.awt.Container.checkGD(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.of(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.spliterator(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry.badValueMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.getGraphicsConfiguration()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.contains(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.genericInvoker()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.net.URI.checkChar(int, long, long, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addWindowListener(WindowListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeBoolean(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.nio.LongBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getImplMethodName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summingInt$127(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStoreInsn(LambdaForm.BasicType, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setOOBInline(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.SimpleTimeZone.getStart(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar.Date, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addToWindowList()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.getFocusableWindowState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.findAny()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.DataFlavorComparator.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.getDisplayName(TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.setNames(Name[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.decrementAndGet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.lambda$static$7f2d2d5b$1(ChronoLocalDate, ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectMethodNoSecurityManager(byte, Class, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.ofNullable(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceEntriesTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Random.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Math.log10(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharSequence.lambda$codePoints$2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readProxyDesc(boolean)": {
        "intra_proced": [
            "InternalError", 
            "InvalidClassException"
        ], 
        "inter_proced": [
            "IllegalAccessError", 
            "ClassNotFoundException", 
            "IllegalArgumentException", 
            "InvalidClassException", 
            "InternalError", 
            "InternalError", 
            "InvalidClassException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Class.MethodArray.addAll(MethodArray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newDirectoryStream(Path, Filter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.initDefault(Category)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.filterTags(List, Collection, FilteringMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.getPropertyDescriptors(BeanInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.YearMonth.atDay(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.StringBuilder.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.HashMap.compareComparables(Class, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.maskNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.setImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.siftUpComparable(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.forEach(BiConsumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$averagingDouble$146(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.boxed()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.CharArrayWriter.append(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapLongBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.checkInvoker(MethodHandle)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.stream.IntPipeline.limit(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "sun.font.AttributeMap.getValues()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.hasFocus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.getFirst()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.setKeyEntry(String, byte[], Certificate[])": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.util.SubList.listIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absHighFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.preProcessKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeEvent.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.StyledParagraph.insertInto(int, int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getAccessibleStateSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.run()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "NoSuchFieldException"
        ]
    }, 
    "java.net.MulticastSocket.setNetworkInterface(NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.setSource(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.nodeExists(String)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.jar.JarFile.maybeInstantiateVerifier()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Class.toClass(Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.sharedToGenericString(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.parseUnsignedInt(String, int)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "FormatterClosedException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.time.temporal.ChronoField.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getStringArray(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.generateCRL(InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AlphaComposite.getInstance(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.remove(EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.im.InputContext.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.statusAll(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.replaceParameterTypes(int, int, Class[])": {
        "intra_proced": [
            "MethodType"
        ], 
        "inter_proced": [
            "MethodType", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.Container.checkAddToSelf(Component)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.doubleCapacity()": {
        "intra_proced": [
            "AssertionError", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.BufferCapabilities.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.failConversion(char, Object)": {
        "intra_proced": [
            "IllegalFormatConversionException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.readSymbolicLink(Path)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Font.getItalicAngle(FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.shouldNativelyFocusHeavyweight(Component, Component, boolean, boolean, long, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledFutureTask.isPeriodic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.toLocalTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfLong.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.in(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getCalendarType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.map(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.fromSerializableHashtable(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.AbstractChronology.date(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.add(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.awt.font.NumericShaper.1.compare(Range, Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.doubleArraySize(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.checkImage(Image, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.isW(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.printModifiersIfNonzero(StringBuilder, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.JarInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.util.Arrays.parallelSort(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Handler.setFilter(Filter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermission.getMask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.put(double[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.period(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.Duration.minusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Arrays.fill(int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.restoreFocus(WindowEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.add(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.toResourceName(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.SliceTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.deleteEntry(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URI.at(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.interruptIfStarted()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ReduceOps.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.dragExit(DropTargetEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.reinitialize()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.Color.getColor(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "AssertionError"
        ]
    }, 
    "java.lang.Character.highSurrogate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.fixAfterInsertion(TreeMap.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.maxDirectMemory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.log(Level, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.setParams(Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.removeVetoableChangeListener(VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.runAllFinalizers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttributeImpl(Attribute, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getDeclaredMethods0(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.charEqualsIgnoreCase(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.isLive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.isMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.waitFor(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.util.stream.LongPipeline.Head.sourceStageSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.getInstance(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.setText(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.9ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AnnotatedElement.getAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.Collectors.computeFinalSum(double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.min(Collection, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.replaceAll(List, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.List.sort(Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SliceOps.SliceTask.setLocalResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.replace(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.Spliterators.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.isProbablePrime(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.localInit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.removeMouseListener(MouseListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.checkValidDayOfYear(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Period.ofMonths(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.FieldReflector.setPrimFieldValues(Object, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.bindArgumentL(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.DoubleSummaryStatistics.combine(DoubleSummaryStatistics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PopupMenu.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.fixAfterInsertion(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.VerifierCodeSource.isSameDomain(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamEncoder.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToIntTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.clear()": {
        "intra_proced": [
            "ReentrantLock", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "ReentrantLock"
        ]
    }, 
    "java.time.ZonedDateTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.FloatBuffer.put(FloatBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.math.SignedMutableBigInteger.subtract(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getFloat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterName.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.jar.Attributes.read(FastInputStream, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.consumeProcessedKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.split(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "Pattern", 
            "Pattern", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.util.function.DoubleConsumer.andThen(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getMethods(Class, boolean, String, MethodType, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.makeLong(byte, byte, byte, byte, byte, byte, byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InputMethodEvent.lookupswitch($i2)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.countCodePoints(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.fillRect(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.compareMagnitudeNormalized(long, int, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Formatter.toString(Formatter.Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.accept(int)": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.net.URI.hash(int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.checkCacheLoad()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.extract(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putIntVolatile(Object, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.popCC(CountedCompleter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.enqueueKeyEvents(long, Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.net.InetAddress.isAnyLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getSentenceInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.arrayForEach(Object, int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.acquire()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.print(File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.LocalDateTime.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.getDefaultFlavorMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.PasswordProtection.getPassword()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.getFiles()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.entrySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getISO3Code(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Value.getBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJDouble.Sorter.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.getLoopbackMode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getResourceBundleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getMaximumDayOfYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.contains(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.dateYearDay(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.handleKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.unwrap()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.MemberName.isMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.getListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.drainTo(Collection)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.isPositionIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.NodeChangeEvent.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.ints(int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.isConstructor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.clear()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.NonfairSync.nonfairTryAcquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.write(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.closeDeletion(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.parseClassNames(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getStackTraceElement(Throwable, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.SocketChannel.write(ByteBuffer[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.getResourceAsStream(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readObjectOverride()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.util.IdentityArrayList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.put(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.Service.getAlgorithm()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.gallopLeft(Object, Object[], int, int, int, Comparator)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineSetEntry(String, KeyStore.Entry, KeyStore.ProtectionParameter)": {
        "intra_proced": [
            "KeyStoreException", 
            "KeyStoreException", 
            "KeyStoreException", 
            "KeyStoreException", 
            "KeyStoreException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Currency.getObject(CurrencyNameProvider, Locale, String, Object[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Value.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.BreakIteratorCache.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.setListenerMethods(Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.checkRobotAllowed()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.io.InputStreamReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i4)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Graphics.fillPolygon(Polygon)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.systemNodeForPackage(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.GradientPaintContext.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createAndCheckIsDirectory(Path, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertPath.writeReplace()": {
        "intra_proced": [
            "NotSerializableException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Inet6Address.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.getVariants()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.clear()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeSet.subSet(Object, boolean, Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.lengthOfYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.grow(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.isSet(char, char)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.CollectionView.getMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.max(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.beginEntry(JarEntry, sun.security.util.ManifestEntryVerifier)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Map.merge(Object, Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setFont(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelPrefix(Object[], BinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.filterTags(List, Collection, Locale.FilteringMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.emptyIntSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.withYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachEntryTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getExecutableTypeAnnotationBytes(Executable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.getNano()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getNumObjFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.addImpl(Component, Object, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.ArraysParallelSortHelpers.FJObject.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.copyInto(Sink, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.hashCode(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.CreatedFontTracker.addBytes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.GetInstance.getInstance(String, Class, String, Object, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.MonthDay.withMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.isInfinite()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.forEach(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.findBundleInCache(ResourceBundle.CacheKey, ResourceBundle.Control)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.arrayLength(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.getThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.loadClass(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "ClassNotFoundException"
        ]
    }, 
    "java.util.Spliterators.spliterator(Object[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.ComponentSampleModel.getTransferType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.exitValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchKeysTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarSystem.getCalendarDate(long, sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.add(Object)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.DoubleStream.concat(DoubleStream, DoubleStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.leave(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.getEngineName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.getSelectedObjects()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.getDigestLength()": {
        "intra_proced": [], 
        "inter_proced": [
            "CloneNotSupportedException", 
            "CloneNotSupportedException", 
            "CloneNotSupportedException"
        ]
    }, 
    "java.nio.charset.CoderResult.get(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Font.canDisplay(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.resetLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.arrayElementSetter(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.util.logging.PlatformLogger.fine(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.setTabAt(Node[], int, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.Consumer.andThen(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.range(BitClass)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.composeOneStep(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.MethodTypeForm.lookupswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getDecimalFormatSymbols()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.Class.getEnclosingClass()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.add(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.removeStaleEntries(ClassValue.Entry[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.hasLightweightDescendants()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.GetInstance.getInstance(String, Class, String, Object, Provider)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getNormalizedComponents(Object, float[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.accessibility.AccessibleContext.getAccessibleChildrenCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.ZoneTextPrinterParser.getDisplayName(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getPixel(int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileTreeWalker.Event.file()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.permuteArguments(MethodHandle, MethodType, int[])": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodType", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.datatransfer.DataFlavor.isFlavorRemoteObjectType()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.access$000(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.isEqual(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectField(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.flavorToNativeLookup(DataFlavor, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.putPropertyStrings(Service)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.dateNow(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Date.getYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.fullBytes(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createRaster(SampleModel, DataBuffer, Point)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.stream.FindOps.FindTask.foundResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.contentEquals(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.FieldReflector.getObjFieldValues(Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getQueue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.isRunningOrShutdown(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getChar(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.invoker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.isWhitespace(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachValueTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.getCallersClassLoader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getYOnScreen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.prestartAllCoreThreads()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "ReentrantLock", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.time.temporal.WeekFields.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.lang.invoke.MemberName.getFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.of(JapaneseEra, int, int, int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Choice.getItemCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.getCandidateLocales(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.canRunInCurrentRunState(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.isClosed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.tryAdvance(DoubleConsumer)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getDateFormatProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.indexOfSupplementary(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.bind(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.QNode.casNext(QNode, QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.isRightToLeft()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectMethod(byte, Class, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.put(String, String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.getChars(int, int, char[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.CallSite.makeSite(MethodHandle, String, MethodType, Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.Predicate.and(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.math.MutableBigInteger.compareShifted(MutableBigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.nameRefersTo(Name, Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.compare(File, File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.nextDown(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.readObject(ObjectInputStream)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.set(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.chunkSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.clearMarkers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.subLower(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getEventLog()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.compute()": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureRecognizer.getSourceActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.exprString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.replaceAll(UnaryOperator)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.setKeyChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.getAccessControlContext()": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Properties.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.setUseCaches(boolean)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.invokeAll(ForkJoinTask, ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": [
            "CancellationException", 
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "RuntimeException"
        ]
    }, 
    "java.time.LocalTime.getHour()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.rightShape(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.isRegistered()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.indexForFrameLocal(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.replace(Object, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getDataElements(int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.fixAfterDeletion(TreeMap.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.isBound()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.epochMonthToYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getInt(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Locale.getDefault(Locale.Category)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setBackground(Color)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "sun.nio.cs.StreamEncoder.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeClassDesc(ObjectStreamClass, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.lazilyLoadDesktopProperty(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divideAndRemainder(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.Event.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Calendar.getTimeInMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.remove(int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.scanIPv4Address(int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ParsePosition.setIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.access$400(InetSocketAddress.InetSocketAddressHolder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.expandCapacity(int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitLabel(jdk.internal.org.objectweb.asm.Label)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.setPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.unsignedEntryNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.putIfAbsent(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.removeHierarchyBoundsListener(HierarchyBoundsListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeDouble(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getFloat(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.inClosedRange(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.initializeGlobalHandlers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxGroup.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DecimalStyle.getDecimalSeparator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.expungeStaleEntry(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ApplicationShutdownHooks.runHooks()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "sun.awt.SunToolkit.isWindowTranslucencySupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.subLowest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Random.ints(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.newFileChannel(Path, Set, FileAttribute[])": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Date.toGMTString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.tryCompensate(ForkJoinPool.WorkQueue)": {
        "intra_proced": [
            "RejectedExecutionException"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledFutureTask.compareTo(Delayed)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferRS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleArrayNode.forEach(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.get(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.invoke(Lookup, String, MethodType, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.ensurePrestart()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.tableswitch(c0)": {
        "intra_proced": [
            "UnknownFormatFlagsException", 
            "IllegalFormatConversionException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "RuntimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.makePreparedFieldLambdaForm(byte, boolean, int)": {
        "intra_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.LongPipeline.evaluateToNode(PipelineHelper, Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.hasListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isFocusTraversableOverridden()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.of(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.applet.Applet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.show()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.forEach(BiConsumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.ChronoField.checkValidIntValue(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.setConnectionReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.packedBytes(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferRS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getIndexedWriteMethod()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapShortBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.PeekInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.getMap(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isGraph(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.contains(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getTranslucencyCapableGC()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.prefixOf(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.acquirePermits(long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setUseParentHandlers(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.makeGuardWithCatch(MethodHandle, Class, MethodHandle)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "WrongMethodTypeException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.next()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.implies(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Character.isISOControl(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.increaseCapacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getFixedDate(int, int, int, sun.util.calendar.BaseCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.allMatch(IntPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.ofWithPrefix(String, int, boolean)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "ZoneRulesException", 
            "ZoneRulesException", 
            "DateTimeException", 
            "DateTimeException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.OptionalLong.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.make64(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.setAttribute(Path, String, Object, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.split(HashMap, Node[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(char[], int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.stripLeadingZeroBytes(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.getClickCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URLConnection.getPermission()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.XmlSupport.importPreferences(InputStream)": {
        "intra_proced": [
            "InvalidPreferencesFormatException", 
            "InvalidPreferencesFormatException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.util.Map.replace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.codePointAt(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.LocaleNameProvider.getDisplayVariant(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.getYears()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getLastComponent(Container)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.WeakHashMap.EntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.getColor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.descendingIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.acquireInterruptibly(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedKeyTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.VerifyType.spreadArgElementType(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.setDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.loadConvert(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getMonthValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.leave(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.isCompatibleRaster(Raster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.RoundingMode.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateImpl.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.event.ComponentEvent.paramString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.awt.GraphicsConfiguration.createCompatibleImage(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.paint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceEntriesToLong(long, ToLongFunction, long, LongBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.binaryGCD(MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.wrap(double[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Font.deriveFont(int, AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.LocalDate.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.of(Kind, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.restoreFocus(Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLEncoder.encode(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "UnsupportedEncodingException", 
            "NullPointerException", 
            "Error", 
            "StringIndexOutOfBoundsException", 
            "UnsupportedCharsetException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.preAccept()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendInternal(DateTimeFormatterBuilder.DateTimePrinterParser)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getPropertyChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntStream.iterate(int, IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plusHours(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.image.RGBImageFilter.setColorModel(ColorModel)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permission.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getCtrlY2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeUTFBody(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.RectangularShape.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.resolveInstant(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Spliterators.iterator(Spliterator.OfDouble)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.KeyIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.grow(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.extendWith(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.lambda$lastDayOfYear$49(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.SystemLoggerContext.addLocalLogger(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.acceptFrom(SocketImpl, InetSocketAddress)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "AssertionError", 
            "SocketException", 
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketException", 
            "AssertionError", 
            "SocketException", 
            "SocketException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.net.util.IPAddressUtil.textToNumericFormatV6(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.subParseZoneString(String, int, CalendarBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "InternalError"
        ]
    }, 
    "java.awt.image.WritableRaster.createWritableChild(int, int, int, int, int, int, int[])": {
        "intra_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TimerThread.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.extendWith(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Font.getBaselineFor(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.release(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.lang.Shutdown.halt0(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putLong(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.getLevel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfInt.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.KeySet.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.constantPlaceholder(Object)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.FileChannel.write(ByteBuffer[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.prefixLength(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.Base64.byteArrayToAltBase64(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.net.URLClassLoader.getURLs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.resultCheck(Object[], Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.codePointAt(int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.ensureCapacity(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getAdvanceBetween(sun.font.TextLineComponent[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.guardWithTest(MethodHandle, MethodHandle, MethodHandle)": {
        "intra_proced": [
            "MethodHandles", 
            "MethodHandleStatics", 
            "MethodHandles"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType"
        ]
    }, 
    "java.util.ServiceLoader.load(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getWaitingThreads(ConditionObject)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.put(short[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "sun.misc.Unsafe.getAndSetObject(Object, long, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.ProviderList.remove(sun.security.jca.ProviderList, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDragEvent.isDataFlavorSupported(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getDisplayName(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.set(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.getZone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isOtherAlphabetic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Nodes.copyInto(int[], int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(Class, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError"
        ]
    }, 
    "java.io.ObjectStreamClass.getSuperDesc()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.rebind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.getDateInstance(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.dnd.DnDEventMulticaster.add(DragSourceListener, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FlowLayout.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Vector.hugeCapacity(int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.uncacheEQItem(sun.awt.EventQueueItem)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.DirectIntBufferS.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.trim()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.Entry.getCondition()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getComponent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.setAddr(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getCopies()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(float[], int, int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PeerPrintCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.opEvaluateParallel(PipelineHelper, Spliterator, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.DecimalFormatSymbols.getMinusSign()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.makeDouble(DoubleConsumer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isSameOrAncestorOf(Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.removeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.initializeSystemClass()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.util.Collections.swap(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.postProcessKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.tooHigh(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.complete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.setUndecorated(boolean)": {
        "intra_proced": [
            "IllegalComponentStateException", 
            "IllegalComponentStateException", 
            "IllegalComponentStateException", 
            "IllegalComponentStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.getQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.toDigit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getLocalAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.io.FileSystem.getLastModifiedTime(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.setTTL(byte)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Number.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Stream.of(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.Executable.verifyParameters(Parameter[])": {
        "intra_proced": [
            "MalformedParametersException", 
            "MalformedParametersException", 
            "MalformedParametersException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.calendar.CalendarUtils.mod(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.awt.geom.Path2D.contains(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getInputStream()": {
        "intra_proced": [
            "UnknownServiceException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToDoubleTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.DoubleIteratorSpliterator.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.focusNextComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.toBinaryString(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.RegularEnumSet.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getManifestDigests()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "JarException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Color.brighter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putOrderedInt(Object, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getDataElement(int[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.LinkedList.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getIntL(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringJoiner.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.JobAttributes.getDestination()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.getWeekBasedYear(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.CharacterDataLatin1.isOtherLowercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(char)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.geom.Path2D.lineTo(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PixelGrabber.abortGrabbing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.setFocusTraversalKeys(int, Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntFixedNodeBuilder.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addWindowStateListener(WindowStateListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.ArrayListSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.LongPredicate.or(LongPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.evaluateSequential(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Double.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PushbackInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.PeekInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getLinearRGB8TosRGB8LUT()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.evaluate(TerminalOp)": {
        "intra_proced": [
            "AssertionError", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.security.KeyStoreSpi.engineDeleteEntry(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.tryRemoveAndExec(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.nio.HeapCharBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.hashCode(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToLongTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getCursor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getCurrencyInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.tanh(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.compareToIgnoreCase(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setPixel(int, int, double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.cancelAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.applyComponentOrientation(ComponentOrientation)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.reduce(double, DoubleBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.StringJoiner.merge(StringJoiner)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Choice.processItemEvent(ItemEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getFlatnessSq(double, double, double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.checkMethodName(byte, String)": {
        "intra_proced": [
            "NoSuchMethodException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.getWriteMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getKeyCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.pageCount(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.outOfBoundsMsg(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.insert(int, char[])": {
        "intra_proced": [
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.beans.PropertyDescriptor.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.Currency.CurrencyNameGetter.getObject(CurrencyNameProvider, Locale, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.Finalizer.access$100(Finalizer, sun.misc.JavaLangAccess)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.time.chrono.IsoChronology.date(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerWeakRef.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentSampleModel.setPixels(int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ref.Reference.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.lang.ClassValue.addToCache(ClassValue, ClassValue.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.isValidProtocol(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandomSpi.engineNextBytes(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.rotate180()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandleStatics.newIllegalStateException(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.ValueSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MathContext.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.spliterator(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Class.getDeclaredClasses0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.ValueConversions.convertPrimitive(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getDayOfYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.setTimeInMillis(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.packedBytes(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.setEnabled(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getSample(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.isHeldExclusively()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.poll()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoEra.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.SimpleTimeZone.setID(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringReader.mark(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.countChars(CharSequence, int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getInterfaceAddresses()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.DataBufferFloat.getBankData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.setParsedField(TemporalField, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.get(String, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getTimeInMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.reverseBytes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isMaximumSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.text.bidi.BidiBase.countRuns()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.afterNodeAccess(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getFontName(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.dateNow(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.dateNow(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendZoneId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.restrictProtectedReceiver(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getInheritableMethod(Class, String, Class[], Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Hashtable.putIfAbsent(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PrimitiveIterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.SubList.addAll(int, Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.OptionalLong.of(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.bind(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.methodType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.floorMod(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJByte.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.subList(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getCharTransform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getCurrentDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.getPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.checkInvariants()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.destroy()": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.net.URI.needsNormalization(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(Comparable[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.geom.FlatteningPathIterator.currentSegment(double[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.nio.HeapByteBuffer.putChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProviders(Map)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PriorityQueue.siftUp(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GlyphVector.getVisualBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SentEvent.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentMap.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.skipBlockData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.UnicodeProp.forName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.security.MessageDigestSpi.engineUpdate(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.BiPredicate.or(BiPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfRef.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.commonSubmitterQueue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getCtor(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.localDateTime(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.checkPath(String, String, String)": {
        "intra_proced": [
            "URISyntaxException"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalQueries.localDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.lastUseIndex(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypeChar(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.casItem(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachValue(long, Function, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Security.insertProviderAt(Provider, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.externalAwaitDone()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Container.transferFocus(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.o()": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": []
    }, 
    "java.util.HashMap.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.doubleStream(Spliterator.OfDouble, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.access$1100(IdentityHashMap, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.setProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.internalWait(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.put(short[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.awt.geom.RectangularShape.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.addDragSourceListener(DragSourceListener)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "TooManyListenersException"
        ], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.setReadTimeout(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.PackedColorModel.ecomposeMask(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getPixels(int, int, int, int, int[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.Bits.putShort(byte[], int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ConcNode.OfPrimitive.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.WorkQueue, ForkJoinTask, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.lang.Class.EnclosingMethodInfo.getDescriptor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isField()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divide2n1n(MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.provider.TimeZoneNameUtility.getZoneStrings(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.setRoundingMode(RoundingMode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.println(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.checkIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.singletonList(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData00.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.tryPresize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachMappingTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.parameterArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.access$1300(ZipFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.accept(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.Timer.setInitialDelay(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.WeakHashMapSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.parseAuthority(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MalformedURLException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.load(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.MatchOps.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.andNot(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBufferSpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.put(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.colorOf(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.execLocalTasks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.format(Object, StringBuffer, FieldPosition)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getLong(long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.resolveDate(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.format(DateTimePrintContext, StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.setOption(SocketOption, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getLong(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.countHierarchyMembers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.selectBestTextFlavor(DataFlavor[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectionKey.isConnectable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Base64.main(String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachEntryTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.forEachOrdered(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.util.HashMap.replace(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getVKText(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.nio.file.spi.FileSystemProvider.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getWaitQueueLength(ConditionObject)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayWriter.toCharArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long5(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.getText(Chronology, TemporalField, long, TextStyle, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getContentHandler()": {
        "intra_proced": [
            "UnknownServiceException"
        ], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NoSuchElementException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Package.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.ptLineDistSq(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.add(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DropTargetContext.getTargetActions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getCompatibilityExtensions(String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.4ReducingSink.combine(4ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.plus(long, TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.loadCalendarData()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "PrivilegedActionException"
        ]
    }, 
    "java.util.regex.Pattern.printObjectTree(Pattern.Node)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.isValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitBoxing(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.copyInto(long[], int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Character.getType(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.readAttributes(Path, Class, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.setYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getShortB(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.bufferCreate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleMatcher.lookup(List, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.getInstance(String, String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "KeyStoreException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.beans.EventSetDescriptor.getListenerClassName(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.FastInputStream.readLine(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.getMask(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.descendingKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.canBeCached(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.security.BasicPermissionCollection.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedList.listIterator(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.SignatureFileVerifier.isSigningRelated(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getLogicalRangesForVisualSelection(TextHitInfo, TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceValuesTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.intBuilder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TransformAttribute.readResolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.x509.X509CertImpl.getSubjectAlternativeNames(X509Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToIntTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.ZipFileInflaterInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.replacementTreeNode(Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.setCheckboxGroup(CheckboxGroup)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Proxy.Type.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.getBooleanAttributes(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.getDisplayName(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.PrintStream.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.time.chrono.IsoEra.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.2.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.setElem(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.longValueExact()": {
        "intra_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getEstimate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.exactOutputSizeIfKnown(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.clear()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.Integer.getChars(int, int, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.checkMapped()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.applet.Applet.resize(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.checkTreeLock()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putFloat(long, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasWriteReplaceMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.access$700(InetSocketAddress.InetSocketAddressHolder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getToomSlice(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Vector.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.permutedTypesMatch(int[], LambdaForm.BasicType[], LambdaForm.Name[], int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.until(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.HijrahChronology.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.removeAll(Collection)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.setTransient(Transient)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.onMalformedInput(CodingErrorAction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.FlipBufferStrategy.revalidate(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.of(Transform.Kind, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getenv(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.PropertyPermission.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.mergePropertyDescriptor(IndexedPropertyDescriptor, IndexedPropertyDescriptor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.rehash()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.canConvertParameters(Class[], Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.EntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getFirstHWRequest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.isAlphaPremultiplied()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Point.translate(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAddressesFromNameService(String, InetAddress)": {
        "intra_proced": [
            "InetAddress"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.time.LocalDate.monthsUntil(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getSetStateFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Sink.accept(Double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.FilteredImageSource.removeConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.doExec()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.parse(String)": {
        "intra_proced": [
            "ParseException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.CharBuffer.compare(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getAuthority()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.resolveProlepticMonth(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferB.put(int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.text.BreakIterator.getCharacterInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextHitInfo.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.of(Month, int, DayOfWeek, LocalTime, boolean, TimeDefinition, ZoneOffset, ZoneOffset, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.lock(long, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneRegion.write(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.treeify(Node[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.list(FilenameFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.CRC32.update(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.access$200(StreamShape, Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.io.ObjectInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Point.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getAlphaRaster(WritableRaster)": {
        "intra_proced": [], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.util.Locale.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.digest(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.order(ByteOrder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToIntTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.pointRelativeToComponent(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.spi.XmlPropertiesProvider.load(Properties, InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.removeFirstOccurrence(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.inRange(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.startDrag(DragGestureEvent, Cursor, Image, Point, Transferable, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.nio.DirectShortBufferS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.absCeiling(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.ReadableByteChannelImpl.begin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.Name.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getLogger(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.SignStyle.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.bind(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.beans.IndexedPropertyDescriptor.getPropertyType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.initPartialTraversalState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divideBurnikelZiegler(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.IndexColorModel.getComponentSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.stream()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.spi.NumberFormatProvider.getNumberInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.leadingSign(StringBuilder, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.truncatedTo(TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.ByteBufferAsIntBufferL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.forEachRemaining(LongConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.padNext(int, char)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapDoubleBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.processDropActionChanged(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DefaultKeyboardFocusManager.getKeyEventPostProcessors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.rtype()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ExecutorCompletionService.submit(Runnable, Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.copy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.get(TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.EntryIterator.nextNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.auditSubclass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.addActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.parseLong(String, int)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapEntryIterator.removeDescending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(StringBuilder, double, Locale, Flags, char, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.put(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.checkSpecifyHandler(SecurityManager)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.stream.Nodes.forEach(IntConsumer)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.getAbsoluteFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.getSourceMethodName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.access$700(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.util.Calendar.getMinimalDaysInFirstWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.doubles(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "sun.net.util.IPAddressUtil.textToNumericFormatV4(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Number.longValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.StringEncoder.requestedCharsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.setShortWeekdays(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.EngineDescription.getConstructorParameterClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.hasListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ofWeekBasedYearField(WeekFields)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Image.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.minus(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.remove(MouseMotionListener, MouseMotionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getInstance(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.iterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.forEach(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getColorComponents(ColorSpace, float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.tryAdvance(DoubleConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(short[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.awt.image.IntegerComponentRaster.getDataOffset(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.tryAdvance(LongConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Math.cbrt(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.getImageableWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.isEqual(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.computeComponentOrder(sun.font.TextLineComponent[], int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.insertNoInvalidate(String, int)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.FontMetrics.getStringBounds(CharacterIterator, int, int, Graphics)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.UNIXProcess.get()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.scan(int, int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.MatchOps.makeLong(LongPredicate, MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDragSourceContextPeer.setDragDropInProgress(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuShortcut.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.SunGraphics2D.constrain(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagConstraints.isVerticallyResizable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.autoDelay()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.2.getFrom(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getAccessControlContext()": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.util.HashMap.KeySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.longValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimePrintContext.startOptional()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.setEra(sun.util.calendar.Era)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.insertExpression(int, Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeEvent.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Currency.run()": {
        "intra_proced": [
            "InternalError", 
            "InternalError", 
            "InternalError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.awt.image.Raster.createChild(int, int, int, int, int, int, int[])": {
        "intra_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.canonicalize(Class, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.advanceHead(TransferQueue.QNode, TransferQueue.QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.holdsLock(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.allMatch(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.isRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getNumberInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getFileNameMap()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getFrames()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.getCacheCarefully(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Line2D.getY1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.isNaN(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.signum(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.entries2(JarFile, Enumeration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeBytes(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.StringCharacterIterator.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.readObjectNoData(ObjectInputStream)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.DoubleArraySpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isPublic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.pollAndExecCC(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.isLocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.WorkQueue, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.addTable(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.dateNow()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.net.URLConnection.getExpiration()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.spliterator(Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.font.NumericShaper.shapeNonContextually(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.abs(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.getSystemCustomCursor(String)": {
        "intra_proced": [
            "AWTException", 
            "AWTException", 
            "AWTException", 
            "AWTException"
        ], 
        "inter_proced": [
            "HeadlessException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.time.Period.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.setFont(Font)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.setURL(URL, String, String, int, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SecurityException"
        ]
    }, 
    "java.nio.DirectFloatBufferS.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readInts(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.getLong(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.net.Socket.setConnected()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.swap(Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.setFamily(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getMaximumFractionDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.toUnsignedString(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.add(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.WeakHashMap.nextEntry()": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.BitSet.and(BitSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.pageDialog(PageFormat)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.withZoneSameLocal(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.ArrayList.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.access$100(char[], int, Charset, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketImpl.getInetAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.4.x(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SystemTray.getTrayIcons()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.socketSetOption(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.get(sun.util.locale.provider.LocaleProviderAdapter, int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.removeConsumer(ImageConsumer)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.IsoEra.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getProperty(String, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.checkInvariants(ConcurrentHashMap.TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.put(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.getOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getWidths()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.getStreamFlags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.getZero(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.removeNotify(TrayIcon)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.boxSupplier(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long7(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.doubleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BandedSampleModel.orderBands(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.DoubleArraySpliterator.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(long, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.createImage(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.tryAcquire()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.gotFocus(Event, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimSort.minRunLength(int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.readLOC()": {
        "intra_proced": [
            "ZipException", 
            "ZipException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.trimToSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.zeroValueOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toChars(int, char[], int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.flip(BufferCapabilities.FlipContents)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistEra.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.isBefore(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.compareTo(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getStringBounds(String, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.YearMonth.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.run()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Tripwire.trip(Class, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getDataElements(int[], int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.net.URL.sameFile(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getPreferredSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.linkMethodTracing(Class, int, Class, String, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "LinkageError", 
            "LinkageError", 
            "MethodHandleStatics", 
            "IOException"
        ]
    }, 
    "java.time.Instant.plus(long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(int)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "InterruptedException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.internalNextInt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implComputeIfPresent(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.defaulted(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableCollection(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Button.getActionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.IsoFields.getFrom(TemporalAccessor)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException", 
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.setImageableArea(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.SecretKeyEntry.getSecretKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkField(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStore.destroy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.trySplit()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Thread.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.runWorker(Worker)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapEntryIterator.removeAscending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.runFinalization0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.put(IntBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "BufferOverflowException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "BufferOverflowException", 
            "Error", 
            "BufferOverflowException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.setMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.ReflectAccess.setConstructorAccessor(Constructor, sun.reflect.ConstructorAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.resolveOrNull(byte, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.getPoolIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractSet.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.lookupswitch(b1)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.security.Policy.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.FileTypeDetectors.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.DoubleStreamBuilderImpl.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.jar.JarVerifier.1.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.mapToObj(LongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.reduceValuesToInt(long, ToIntFunction, int, IntBinaryOperator)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.Bits.makeChar(byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "sun.misc.Unsafe.getBoolean(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.lightweightPaint(Graphics)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.lengthOfMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.datatransfer.SystemFlavorMap.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchKeysTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.reflect.Method.isDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.TreeBin.rotateLeft(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.lowerEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.tieBreakOrder(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.setFrameFromDiagonal(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkSpecialCaller(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isLetterOrDigit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.setLocalPort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Collator.compare(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.finishEntry(ClassValue, Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.putInt(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getYearFromFixedDate(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.subSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.needRoom(boolean, int)": {
        "intra_proced": [
            "IllegalPathStateException", 
            "IllegalPathStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.set(int, Object)": {
        "intra_proced": [
            "ReentrantLock", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "ReentrantLock"
        ]
    }, 
    "java.net.URL.getProtocol()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.getMinimumAccessibleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DeleteOnExitHook.runHooks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.appendTo(StringBuilder, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.IOUtils.readFully(InputStream, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetNext(AbstractQueuedSynchronizer.Node, AbstractQueuedSynchronizer.Node, AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "CancellationException", 
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.LinkedHashMap.internalWriteEntries(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.chunkFor(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkRead(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.security.KeyStore.setCertificateEntry(String, Certificate)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineContainsAlias(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.createTransferableProxy(Transferable, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.registerShutdownHook(int, boolean, Runnable)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getCurrentWaitingRequest(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.DistinctSpliterator.mapNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.AscendingSubMap.absHighFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.copyOf(float[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.MatchOp.evaluateSequential(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.match1(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summarizingLong$176(ToLongFunction, LongSummaryStatistics, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.pollFirst()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.setClass0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.OfDouble.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.HandleList.add(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(short[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.put(int, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.implFlush(CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.deleteEntry(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.lookup2(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalCharsetNameException", 
            "IllegalCharsetNameException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.ZonedDateTime.ofInstant(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.math.BigDecimal.divide(BigDecimal, int, RoundingMode)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.WeakHashMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.print(StringBuilder, BigDecimal, Locale, Formatter.Flags, char, int, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.getShort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.subParseNumericZone(String, int, int, int, boolean, CalendarBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.remove(Object)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.growSpine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.implOnMalformedInput(CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.initialize(String, String, ClassLoader)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.Parser.scanHexSeq(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.reinitialize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.setFrame(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setParent(Logger)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.net.Socket.connect(SocketAddress)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "SocketException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.remove(ActionListener, ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.absHighest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.List.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.SimpleTimeZone.setEndRule(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.format.Parsed.resolveDateFields()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Tripwire.lambda$static$231()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Component.oTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedNavigableMap.subMap(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.resolveDate(Map, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Random.nextInt(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentMap.computeIfAbsent(Object, Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.1.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.add(Object)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEnvironment.toString(Value)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.access$000(Provider.Service)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.readObject(ObjectInputStream)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.nio.channels.spi.SelectorProvider.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.makeDumpableClassName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.KeyIterator.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.initPeer()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.im.InputMethodHighlight.getStyle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.getFileStore(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SimpleMethodHandle.copyWithExtendL(MethodType, LambdaForm, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.ComponentEvent.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectLongBufferS.put(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.copyWithExtendI(MethodType, LambdaForm, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.MatchOps.MatchTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.nextService()": {
        "intra_proced": [
            "NoSuchElementException", 
            "Error"
        ], 
        "inter_proced": [
            "ClassCastException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.ArrayPrefixHelpers.IntCumulateTask.getCompleter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.transform.Transformer.transform(Source, Result)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.forEach(BiConsumer)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.setWeekDate(int, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.getActualMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.channels.SelectionKey.isWritable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getAccessibleSelectionCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.createTempFile(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "SecurityException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ExecutorCompletionService.poll(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.getProbe()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.nio.HeapShortBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.forEachWithCancel(Spliterator, Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.checkNumeric()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.get(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.ComponentOrientation.isLeftToRight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.AccessibleAWTList.getAccessibleChild(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.offer(Object)": {
        "intra_proced": [
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.compareTo(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.Component.requestFocusHelper(boolean, boolean, sun.awt.CausedFocusEvent.Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringReader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divaddLong(int, int, int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.getAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getReflector(ObjectStreamField[], ObjectStreamClass)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InvalidClassException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.PropertyDescriptor.isAssignable(Method, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.roll(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.File.setExecutable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.GetFieldImpl.readFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findGetter(Class, String, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.getArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseEra.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException"
        ]
    }, 
    "java.io.FilterInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.put(long, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.distance(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.union(CharProperty, CharProperty)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.getPermissions(ProtectionDomain)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.time.chrono.Era.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLayout.getNaturalBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.is16Hashtable(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getMethod(String, Class[])": {
        "intra_proced": [
            "NoSuchMethodException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuffer.append(StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendLocalizedOffset(TextStyle)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Long.toOctalString(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractPlainSocketImpl"
        ]
    }, 
    "java.nio.ByteBuffer.hasRemaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.getParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.toList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.JarFileEntry.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.fullyLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.deriveFont(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.readResolve()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.drain()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.renderable.RenderContext.setTransform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Permissions.getUnresolvedPermissions(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NoSuchMethodException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.iterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.annotation.ElementType.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.deregisterWorker(ForkJoinWorkerThread, Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.nio.Bits.int0(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.toArray(IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.ArrayPrefixHelpers.CumulateTask.compareAndSetPendingCount(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.11.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.SimpleBeanInfo.loadImage(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "UnknownServiceException", 
            "UnknownServiceException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.returnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.BreakIteratorProvider.getLineInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getResource(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setCurrentKeyboardFocusManager(KeyboardFocusManager)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.font.TextLayout.getCaretShapes(int, Rectangle2D, CaretPolicy)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBufferR.asDoubleBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRL.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.addPropertyChangeListener(PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ResourceManager.beforeUdpCreate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.highMask(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.codePointAt(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayDeque.removeLastOccurrence(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Arrays.spliterator(double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.ZoneRegion.ofId(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "ZoneRulesException", 
            "ZoneRulesException"
        ]
    }, 
    "java.util.ArrayList.SubList.addAll(int, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getWordInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.logging.Logger.getLogger(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError"
        ]
    }, 
    "java.util.regex.Pattern.CharProperty.complement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.findForm(MethodType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.isValidOffset(LocalDateTime, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getAnnotatedInterfaces()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.lastIndexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.tryRelease(int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Random.doubles(long, double, double)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.isCompatibleWith(String)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferRB.subSequence(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Scrollbar.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringJoiner.add(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.ResourceBundle.getBundle(String, Control)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.isTokenChar(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.HashMapSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.write(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.IntBuffer.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getMillisOf(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.reset(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.clear()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "sun.nio.ch.DefaultSelectorProvider.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.BulkTask.recoverState(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.filter(Predicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.LightweightDispatcher.retargetMouseEvent(Component, int, MouseEvent)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.time.chrono.MinguoChronology.dateEpochDay(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.stream.IntPipeline.map(IntUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.growEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.caretToHit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.createFile(Path, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.security.cert.CertificateException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getMaximumMonthLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.TimeUnit.timedWait(Object, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AbstractMethodError"
        ]
    }, 
    "java.awt.Dialog.modalHide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Base64.base64toInt(char, byte[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessEnvironment.arrayEquals(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.create(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.toArray()": {
        "intra_proced": [
            "OutOfMemoryError", 
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.element()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.min(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.isEnabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException", 
            "SocketException", 
            "NullPointerException", 
            "SocketException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.time.temporal.IsoFields.Field.3.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.reflectUnchecked()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "NoSuchFieldException", 
            "NoSuchFieldException", 
            "NoSuchMethodException", 
            "NoSuchMethodException", 
            "NoSuchMethodException", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterator.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.access$100(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Map.comparingByKey(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.atTime(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.util.AbstractCollection.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.checkedNavigableMap(NavigableMap, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.setIntValVolatile(BigDecimal, BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.findFirstDupOrDrop(int[], int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.time.format.DateTimeFormatter.ofLocalizedDateTime(FormatStyle, FormatStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.access$000(DateTimeFormatter, CharSequence, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeParseException", 
            "DateTimeParseException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.TimeUnit.sleep(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "AbstractMethodError"
        ]
    }, 
    "java.io.ObjectOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.EnumMap.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRound128(long, long, long, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.DelegatingMethodHandle.rebind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.DataFormatException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.connect(SocketAddress, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "UnknownHostException"
        ], 
        "inter_proced": [
            "AbstractPlainSocketImpl", 
            "UnknownHostException", 
            "NullPointerException", 
            "InetAddress", 
            "SocketException", 
            "AbstractPlainSocketImpl", 
            "AbstractPlainSocketImpl"
        ]
    }, 
    "java.awt.Robot.init(GraphicsDevice)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "HeadlessException", 
            "IllegalArgumentException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.ArrayList.forEachRemaining(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.appendCodePoint(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.time.Period.withMonths(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute(JarFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.sendUrgentData(int)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.unlinkCancelledWaiters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.setCurrency(Currency)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.setConnectTimeout(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getEnclosingMethod0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.get(TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassLoader.retrieveDirectives()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillNewTypedArray(Object[], Integer, Object[])": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.openDatagramChannel(ProtocolFamily)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.PrintWriter.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.lang.reflect.Executable.getAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.Font.createFont(int, File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IOException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.net.InetAddress.cacheInitIfNeeded()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Unit.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.unquote(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.retargetFocusLost(FocusEvent)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.text.Collator.getInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedValueTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.classDepth(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.remove(Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.or(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.objectFieldOffset(sun.misc.Unsafe, String, Class)": {
        "intra_proced": [
            "NoSuchFieldError"
        ], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.lang.Integer.toString(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.random()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getDefaultPort()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.deliverEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getDisplayMode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.subMap(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.reflect.Executable.getRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.LazyIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.toArray(Object[])": {
        "intra_proced": [
            "OutOfMemoryError", 
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.toLocalDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPaneAdjustable.setValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.retainAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.roundedTenPower(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.withFixedWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.impliesCreateAccessControlContext()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException"
        ]
    }, 
    "java.nio.FloatBuffer.compareTo(FloatBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipCoder.toString(byte[], int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.spi.SelectorProvider.loadProviderAsService()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.nio.charset.Charset.access$000()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.of(int, int, int, int, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.nio.HeapCharBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.getInheritedAccessControlContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Paths.get(URI)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "FileSystemNotFoundException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Error"
        ]
    }, 
    "java.util.Hashtable.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getOutline(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.awaitFulfill(TransferQueue.QNode, Object, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.inClass(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.math.BigDecimal.divideSmallFastPath(long, int, long, int, long, MathContext)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.iteratorBinarySearch(List, Object, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.isAfter(Instant)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.checkNotDispatchThread()": {
        "intra_proced": [
            "IllegalThreadStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.setGlobalPermanentFocusOwner(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.putValue(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.access$100(MemberName)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.logging.Logger.findSystemResourceBundle(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getManEntry()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.file.FileTreeWalker.Event.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.mulsub(long, long, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.getParameterAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.addAttributeImpl(AttributedCharacterIterator.Attribute, Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.initializeAutoscrolling(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.nio.DirectFloatBufferRS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.updateTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withMonth(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.copyInto(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.ConcatSpliterator.OfPrimitive.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.failExpecting(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.Launcher.getLauncher()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.open0(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getShort(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.Package.getPackage(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.signal()": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.add(Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Streams.accept(long)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.LineIterator.currentSegment(double[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.getExtensions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.isDisplayable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getCalendarDate(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.updateLookupTable(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.setPixel(int, int, int[], DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.BindCaller.2.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.getDirectionality(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.RoundingMode.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.DataInputStream.readLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.setVarargs(MemberName)": {
        "intra_proced": [
            "MemberName"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "WrongMethodTypeException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Component.setForeground(Color)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.minusMillis(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.io.ObjectStreamField.setOffset(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.isValidDayOfWeek(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.processWindowEvent(WindowEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.preferProportionalFonts()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.growArray()": {
        "intra_proced": [
            "RejectedExecutionException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.subtractAndApplyShapeBelowMe()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.Parsed.resolve(ResolverStyle, Set)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Spliterators.IntIteratorSpliterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Paths.get(String, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.next(DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Insets.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.ZipFile.getTotal(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJDouble.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.filterArguments(MethodHandle, int, MethodHandle[])": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsMethod(byte)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.OffsetDateTime.plusDays(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.BindCaller.1.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.wrap()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.net.SocksSocketImpl.authenticate(byte, InputStream, BufferedOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "SocketTimeoutException", 
            "SocketException", 
            "SocketTimeoutException", 
            "SocketException", 
            "ArrayIndexOutOfBoundsException", 
            "SocketException", 
            "SocketException"
        ]
    }, 
    "java.text.MessageFormat.append(StringBuffer, CharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readFields()": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": [
            "NotActiveException"
        ]
    }, 
    "java.net.URL.readObject(ObjectInputStream)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NoSuchElementException", 
            "NullPointerException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.Bits.get(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.failConversion(char, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.ofInstant(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.Formatter.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Comparator.comparingLong(ToLongFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.isWindowShapingSupported()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.setDictionary(long, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.GenericDeclaration.isAnnotationPresent(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodHandle, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.sharedGetParameterAnnotations(Class[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.requestFocus(boolean, sun.awt.CausedFocusEvent$Cause)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.removeLast()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.Parsed.updateCheckConflict(LocalTime, Period)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.reportInterruptAfterWait(int)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.unlockRunState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliteratorUnknownSize(PrimitiveIterator.OfDouble, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.createBreakInstance()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.MappedByteBuffer.isLoaded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.processActionEvent(ActionEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProviders(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.font.TextLayout.getPixelBounds(FontRenderContext, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.getRunLevel(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.hasSameRules(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.remove(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectLongBufferS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.tryReleaseShared(int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJInt.Sorter.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.Temporal.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.RBClassLoader.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToLongTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendInstant()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.AbstractWrappingSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.doRound(BigDecimal, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.io.BufferedReader.readLine()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.checkValidMonth(int)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.BufferedOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.SimpleTimeZone.unpackRules(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.image.Raster.createPackedRaster(DataBuffer, int, int, int, int[], Point)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getSampleSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.tableswitch($i1)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SliceOps.unorderedSkipLimitSpliterator(Spliterator.OfDouble, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.nextHashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.initializeData(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.lang.StringBuffer.trimToSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.getFormats(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedKeyTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.mixOnReshaping()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.beans.Introspector.internalFindMethod(Class, String, int, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.replacementTreeNode(HashMap.Node, HashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.getPercent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isOtherLowercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.put(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.allMatch(LongPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putIntB(ByteBuffer, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.compare(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(double, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.family(boolean, boolean)": {
        "intra_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "Pattern", 
            "NoSuchElementException", 
            "NullPointerException", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.isOpaque()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.HandleTable.insert(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.reverse()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.1Splitr.newSpliterator(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.merge(Object, Object, BiFunction)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.access$200(ThreadLocal.ThreadLocalMap, ThreadLocal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.SignStyle.parse(boolean, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.read(CharBuffer)": {
        "intra_proced": [
            "CharBuffer"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ]
    }, 
    "java.awt.font.TextLine.caretAtOffsetIsValid(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getPixels(int, int, int, int, double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.IntPipeline.Head.sourceStageSpliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.Name.isDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.compareTo(Duration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Ser.readExternal(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.getTrafficClass()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.util.Locale.getUnicodeLocaleKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getMinimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.addHandler(Handler)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ReentrantLock", 
            "AssertionError"
        ]
    }, 
    "java.awt.KeyboardFocusManager.getNativeFocusedWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.update(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.groupingByConcurrent(Function, Collector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeBytes(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Method.setMethodAccessor(sun.reflect.MethodAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.DropTargetAutoScroller.updateLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.HandleList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.ZoneName.toZid(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putChar(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.moveRootToFront(Node[], TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.getFields(Class, boolean, String, Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DefaultDatagramSocketImplFactory.createDatagramSocketImpl(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.setExclusiveOwnerThread(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.access$000(TextLayout, TextHitInfo, TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.stream.Streams.composeWithExceptions(Runnable, Runnable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.toInstant()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.zip.ZipFile.access$1200(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.receive(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": [
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "SocketException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.put(Object)": {
        "intra_proced": [
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.util.TreeMap.lookupswitch(b0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getConstructor0(Class[], int)": {
        "intra_proced": [
            "NoSuchMethodException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.DelegatingSpliterator.OfPrimitive.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mouseExit(Event, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getBlue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet4Address.isMCOrgLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.validate(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.ConcurrentWeakInternSet.get(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.isOutputShutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.getAvailableChronologies()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.getDigitBase()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.tableswitch(i9)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.casCleanMe(QNode, QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.scalb(float, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.getProlepticMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.truncate(Buffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.tryAcquire(int, long, TimeUnit)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.net.URI.checkChars(int, int, long, long, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Month.firstMonthOfQuarter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermissionCollection.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NullPointerException", 
            "NotActiveException"
        ]
    }, 
    "java.nio.LongBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.FocusEvent.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.beans.PropertyDescriptor.isConstrained()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.getMask(String)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.PipelineHelper.wrapSpliterator(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.Chronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.TextField.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.getTreeNode(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.readFully(byte[], int, int)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.spi.FileSystemProvider.deleteIfExists(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.parseIPv4Address(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.UnresolvedPermissionCollection.getUnresolvedPermissions(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getLinearGray16ToOtherGray16LUT(ICC_ColorSpace)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.objectFieldOffset(Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getJulianCalendar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayVariantArray(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.Files.setAttribute(Path, String, Object, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.coalesceOtherEvent(AWTEvent, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBufferSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getDateTimeAfter()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.LocalDate.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitAloadInsn(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.distance(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.pop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.4.unorderedSkipLimitSpliterator(OfDouble, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.Ser.readOffset(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Constructor.getFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getGlobalCurrentFocusCycleRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(int[], int, int, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.minus(Duration)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.spi.CurrencyNameProvider.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.headMap(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.access$400(ResourceBundle.CacheKey)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.nextToken(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigDecimal.movePointLeft(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.util.regex.Pattern.charPropertyNodeFor(String)": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.FieldPosition.formatted(int, Format.Field, Object, int, int, StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.initFromPriorityQueue(PriorityQueue)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.StringCoding.scale(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.stream(Supplier, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.getInt(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.hide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.RandomIntsSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Era.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.Entry.value()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.security.Provider.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SelectableChannel.blockingLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.withMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.makeBlockInlningWrapper(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.specificToStringHeader(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.security.jca.Providers.getSunProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.checkPermission2(Permission)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AccessControlException", 
            "InternalError", 
            "InternalError", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.time.Instant.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.decode(String)": {
        "intra_proced": [
            "NumberFormatException", 
            "NumberFormatException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MemberName.isMethodHandleInvoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.equals(LambdaFormEditor.Transform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.reverse(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.read(ByteBuffer)": {
        "intra_proced": [
            "ReadableByteChannelImpl"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "BufferOverflowException"
        ]
    }, 
    "java.awt.Window.setShape(Window, Shape)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.ServiceLoader.access$100(Class, String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "ServiceConfigurationError"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Variable.getBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.multiply(long, BigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Button.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.contains(Formatter.Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.fail(Class, String, Throwable)": {
        "intra_proced": [
            "ServiceConfigurationError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.AWTEvent.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.putBoolean(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.CheckboxMenuItem.doMenuEvent(long, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToIntTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.startDrag(DragGestureEvent, Cursor, Image, Point, Transferable, DragSourceListener, FlavorMap)": {
        "intra_proced": [
            "InvalidDnDOperationException", 
            "SunDragSourceContextPeer"
        ], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.logging.Logger.getGlobal()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.awt.font.TextLine.getFontAtCurrentPos(AttributedCharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectionKey.cancel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.remove()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.mergeCollapse()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeBlockHeader(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.getComponentZOrder(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.isValidIntValue(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.expressionCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getResource(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.isSet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.lastIndexOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.generateFile(String, String, File)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Number.doubleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.remove(String)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.mixOnHiding(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.getContextClassLoader()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.util.logging.Handler.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getRunDirection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getHeaderFields()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.isRightToLeft()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.push(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectCharBufferS.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getRawParameterAnnotations()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.parseYMD(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.ArrayAccessor.type(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.nextComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.SubList.outOfBoundsMsg(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.defaultWriteFields(Object, ObjectStreamClass)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InternalError", 
            "NullPointerException", 
            "ExceptionInfo"
        ]
    }, 
    "java.util.concurrent.ForkJoinTask.join()": {
        "intra_proced": [], 
        "inter_proced": [
            "CancellationException", 
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "RuntimeException"
        ]
    }, 
    "java.security.CodeSource.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Parameter.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.defaultLineMetrics(FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getGenericExceptionTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.replace(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.UNIXProcess.DeferredCloseInputStream.lower()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.lookupswitch(b0)": {
        "intra_proced": [
            "StreamCorruptedException", 
            "StreamCorruptedException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InternalError", 
            "InternalError", 
            "IllegalAccessError", 
            "ClassNotFoundException", 
            "InternalError", 
            "StreamCorruptedException", 
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InternalError", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException", 
            "FormatterClosedException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.debugString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectOutputStream.writeFatalException(IOException)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InternalError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.IntPipeline.mapToDouble(IntToDoubleFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.createAnnotationData(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.helpComplete(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.removeIf(Predicate)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.font.AttributeValues.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.getAccessibleChildIndex(MenuComponent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.add(Map.Entry)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "sun.net.www.MessageHeader.set(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.forEach(Consumer)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.getImageableHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.bind(InetAddress, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MathContext.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.tryAcquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractMap.containsKey(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.add(RenderingHints)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.reflectAs(Class, MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.ClassLoader.defineClass2(String, ByteBuffer, int, int, ProtectionDomain, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.bindArgumentL(int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.geom.Point2D.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getFilterProperty(String, Filter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "ClassNotFoundException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.dragMouseMoved(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Proxy.equals(WeakReference[], WeakReference[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.of(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getLeastMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.putBeanInfo(Class, BeanInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.2.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.resolvePreviousValid(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult(LambdaForm.Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(boolean[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.AffineTransform.stateError()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.loadBundle(CacheKey, List, Control, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.newInstance(Object)": {
        "intra_proced": [
            "NoSuchAlgorithmException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "NoSuchAlgorithmException", 
            "NoSuchAlgorithmException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.getSpeciesData(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.SynchronizedNavigableSet.subSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getCalendarSystem(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.modalShow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.invoke.MemberName.isSetter()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.io.FilePermission.init(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.IntArraySpliterator.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.setSize(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.Range.indexToRange(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.getClass(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.MessageFormat.parse(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.Duration.create(BigDecimal)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.DescendingSubMap.absHighest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.Entry.val()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.fromString(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ClassCastException"
        ]
    }, 
    "java.net.AbstractPlainSocketImpl.getOption(SocketOption)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getGenericType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.newCondition()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.minusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.CallSite.checkTargetChange(MethodHandle, MethodHandle)": {
        "intra_proced": [
            "CallSite"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.inverseTransform(double[], int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Button.addActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.Enumerator.nextElement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putLong(long, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ComparableTimSort.lookupswitch(i12)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.isFieldSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.firstElement()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Double.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.isMinimumSizeSet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.LaunchMechanism.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getLowerEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getDisplayName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.access$100(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamShape.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getLogicalHighlightShape(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.misc.Unsafe.getFloat(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.Inet6AddressHolder.isMulticastAddress()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.findBundle(ResourceBundle.CacheKey, List, List, int, ResourceBundle.Control, ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.Class.isArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.preProcessKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.removeInternal(EventListener, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToIntTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.setConstrained(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.calculateFields(AccessControlContext, AccessControlContext, Permission[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.of(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.AbstractTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.add(Point2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CopiesList.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.set(int, Object)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.transferAfterCancelledWait(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(MouseWheelListener, MouseWheelListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceContext.getDragSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.LoggerBundle.isSystemBundle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.allocateInstance(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getIterator(AttributedCharacterIterator.Attribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putCharL(long, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.getPropertiesEx(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$averagingLong$143(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.singletonSpliterator(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocksSocketImpl.getInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.computeFields(int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.AbstractExecutorService.invokeAny(Collection, long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "TimeoutException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.file.FileSystems.getFileSystem(URI)": {
        "intra_proced": [
            "ProviderNotFoundException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Error"
        ]
    }, 
    "java.nio.ByteBuffer.put(byte[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.getTransform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getVKValue(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NoSuchFieldException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Arrays.deepHashCode(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.lock(long, long, boolean, Object, CompletionHandler)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getRGBComponent(int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.readEnd(ZipEntry)": {
        "intra_proced": [
            "ZipException", 
            "ZipException", 
            "ZipException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "IOException", 
            "AssertionError", 
            "NullPointerException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Vector.VectorSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.getMessage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.notifyAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.compareAndSetForkJoinTaskTag(short, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.write(OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.MappedByteBuffer.get(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideToIntegralValue(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "java.awt.RenderingHints.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.execute(Runnable)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.util.WeakHashMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getReadMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.jar.JarInputStream.closeEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.sort(Comparator)": {
        "intra_proced": [
            "ConcurrentModificationException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.BandedSampleModel.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.AsynchronousFileChannel.open(Path, Set, ExecutorService, FileAttribute[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchValuesTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.replace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Vector.addAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.time.chrono.HijrahDate.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getTransparency()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.dumpThreads(Thread[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.valueOf(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.EventDispatchThread.acceptEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.haveValidKeys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.valueOf(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.dnd.DragSource.createDragSourceContext(DragSourceContextPeer, DragGestureEvent, Cursor, Image, Point, Transferable, DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.isEven()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble.acceptConsumed(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.build()": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.util.ComparableTimSort.countRunAndMakeAscending(Object[], int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.TimSort.sort(Object[], int, int, Comparator, Object[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.io.FilterInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.length()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.skip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.getOrigin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getHeavyweight(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.position(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.isAbstract(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetContext.getComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.absLowest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.move(Path, Path, CopyOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "FileAlreadyExistsException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "UnsupportedOperationException", 
            "AtomicMoveNotSupportedException"
        ]
    }, 
    "java.io.ObjectStreamClass.computeFieldOffsets()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectInputStream.HandleTable.markDependency(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.drainInputStream(InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.UnicodeProp.is(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(Iterator, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long4(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.access$300(Pattern, String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException"
        ]
    }, 
    "java.util.regex.Pattern.namedGroups()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.addConditionWaiter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getDisplayName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LocaleUtils.toLowerString(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.getInstance(String, Provider)": {
        "intra_proced": [
            "CertificateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.MinguoChronology.writeReplace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.print(StringBuilder, Calendar, char, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.isVarArgs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.primitiveReturnCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.put(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.longs(long, long, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getPixel(int, int, float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.list(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.Name.useCount(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.removeItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.toPrinterParser(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getLastJulianDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.makeZero(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.xor(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ChangeListenerMap.newArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.put(Object)": {
        "intra_proced": [
            "NullPointerException", 
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.System.setJavaLangAccess()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.release()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.decode(String, byte[], int, int)": {
        "intra_proced": [
            "UnsupportedEncodingException"
        ], 
        "inter_proced": [
            "Error", 
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.SimpleTimeZone.setStartRule(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.MappedByteBuffer.force0(FileDescriptor, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchMappingsTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntSpinedNodeBuilder.copyInto(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Clock.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.setReadMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.time.Ser.read(ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getResourceAsStream(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownServiceException"
        ]
    }, 
    "java.time.OffsetTime.getSecond()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.addDragSourceListener(DragSourceListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "NullPointerException"
        ]
    }, 
    "java.text.DecimalFormat.setMinimumFractionDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.KeySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.toEpochDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setRect(Raster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessImpl.toCString(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.Nodes.forEachRemaining(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.stringPropertyNames()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapLongBuffer.put(long[], int, int)": {
        "intra_proced": [
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectIterator.currentSegment(float[])": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.repository.MethodRepository.getReturnType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.hashCode(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.NonfairSync.setExclusiveOwnerThread(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.getCodeSource(URL, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "RuntimeException", 
            "JarException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.image.IndexColorModel.createCompatibleWritableRaster(int, int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.IndexColorModel.setRGBs(int, byte[], byte[], byte[], byte[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.Parsed.resolveTimeFields()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Graphics.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.valueOf(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfInt.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.compact()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.unsignedLongCompare(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalAccessException", 
            "SecurityException", 
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.keys()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.isAfter(OffsetDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.contendedLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractSet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.Container.getBufferStrategy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.put(int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.addYear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.insertElementAt(Object, int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.Locale.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.RoundRectangle2D.contains(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.tableswitch(b0)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.readResolve()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.end()": {
        "intra_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "IllegalStateException", 
            "AssertionError", 
            "IllegalStateException", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.AbstractWrappingSpliterator.wrap(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubList.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Ser.writeInternal(byte, Object, ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.balanceInsertion(HashMap.TreeNode, HashMap.TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.appendParameterTypes(List)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchEntriesTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getJustificationInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.8ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.evaluateSequential(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.atMonthDay(MonthDay)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.Paper.getImageableX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.LineMetrics.getNumChars()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.requireNonNull(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.intersectsLine(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.Factory.makeNominalGetters(String, NamedFunction[], MethodHandle[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData02.isOtherUppercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.tryRelease(int)": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.inDaylightTime(Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeChar(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.ofEpochSecond(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.getPermits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.NumericShaper.shapeContextually(char[], int, int, NumericShaper.Range)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getToolkit()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.Class.getEnumConstants()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.lang.Package.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.ofInstant(Instant, ZoneId)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Dimension.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.lastKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.unreflectForMH(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.beans.EventSetDescriptor.setGetListenerMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ClassCastException"
        ]
    }, 
    "java.lang.Runtime.addShutdownHook(Thread)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.nio.DirectIntBufferU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.awt.geom.Path2D.moveTo(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.filter(List, Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.processException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getCalendarDate(long, TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getUnicodeLocaleType(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.file.LinkOption.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.getAfterIndex(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "Error", 
            "Error", 
            "Error", 
            "NullPointerException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.Calendar.roll(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.ofOffset(String, ZoneOffset)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.setOwnedWindowsAlwaysOnTop(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail(AbstractQueuedSynchronizer.Node, AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.findStore(TemporalField, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "MissingResourceException"
        ]
    }, 
    "java.awt.Toolkit.createMenuBar(MenuBar)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getCollatorProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.nextAfter(float, double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "sun.font.AttributeValues.toSerializableHashtable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.DesktopBrowse.browse(URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.isSatisfiedBy(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.nextTaskFor(WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getBitMasks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.put(Iterator, Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(char[], char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.peek(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.Locale.getISOLanguages()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.connect(InetAddress, int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "SocketException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException", 
            "SocketException", 
            "SocketException", 
            "SocketException", 
            "IllegalArgumentException", 
            "SocketException"
        ]
    }, 
    "java.beans.PropertyDescriptor.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.util.stream.AbstractSpinedBuffer.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.AbstractWrappingSpliterator.fillBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.getDataType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getMaxX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "ClassCastException", 
            "NullPointerException"
        ]
    }, 
    "java.net.URI.Parser.parseIPv4Address(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.get(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.batchFor(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.TextComponent.AccessibleAWTTextComponent.findWordLimit(int, BreakIterator, boolean, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.hasWaiters()": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.lambda$lastDayOfMonth$46(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.getDecimalStyle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.setStartRule(int, int, int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.security.Provider.replaceAll(BiFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.security.KeyStore.getCertificateChain(String)": {
        "intra_proced": [
            "KeyStoreException"
        ], 
        "inter_proced": []
    }, 
    "java.io.Bits.putInt(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.translatePattern(String, String, String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.DoubleWrappingSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoPeriodImpl.multipliedBy(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.newCalendarDate(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragGestureEvent.getDragSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.ThreadLocalCoders.decoderFor(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.atan(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getMaximum(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.getPixel(int, int, double[], DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.plusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.Toolkit.getFontPeer(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.getYearLength(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.halt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.put(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.LongConsumer.andThen(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.doRound128(long, long, int, int, MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.awt.color.ICC_Profile.getColorSpaceType(Profile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.needIncrement(long, int, int, MutableBigInteger, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(Name)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAllByName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException"
        ]
    }, 
    "java.awt.GradientPaintContext.getRaster(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.Spliterators.spliterator(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.expungeStaleExceptions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.uncheckedThrow(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.parseBest(CharSequence, TemporalQuery[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "DateTimeException", 
            "DateTimeFormatter"
        ], 
        "inter_proced": [
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.lang.invoke.MemberName.getSignature()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.Choice.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelectableChannel.validOps()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setModalExclusionType(Dialog.ModalExclusionType)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.FileDialog.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.PipelineHelper.wrapSink(Sink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.emptyListIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.isSupported(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "ClassCastException"
        ]
    }, 
    "java.security.SecureClassLoader.defineClass(String, ByteBuffer, CodeSource)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.awt.TextComponent.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDateTime.parse(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "java.nio.ByteBuffer.putLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.min(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.LoggerBundle.get(String, ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.ZoneInfo.getTimeZone(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.removeLessSpecifics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.FormattedFloatingDecimal.valueOf(double, int, sun.misc.FormattedFloatingDecimal.Form)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.ArrayBuffer.OfInt.forEach(IntConsumer, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.Executors.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Choice.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.String.indexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.ulp(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.toBundleName(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.datatransfer.DataTransferer.doesSubtypeSupportCharset(DataFlavor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setLayersOpaque(Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.invalidate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.max(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.WeakCache.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.noneMatch(DoublePredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.of(int, int, int)": {
        "intra_proced": [
            "DateTimeException", 
            "DateTimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.AttributedString.ensureRunBreak(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.getExclusiveOwnerThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.getPropertyType()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.net.NetworkInterface.getByInetAddress(InetAddress)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.randomBits(int, Random)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectMethodNoRestrict(byte, Class, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.access$500(EnumMap, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.awaitDone(boolean, long)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.reflect.InvocationTargetException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramPacket.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.parse(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putObjectVolatile(Object, long, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.firePropertyChange(String, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.add(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.composeList(MessageFormat, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.getHeaderField(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.put(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readChar()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.setGuiAvailable(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.StrictMath.abs(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.round(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.toSecondOfDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.staticFieldOffset(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putChar(long, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.invokeAll(ForkJoinTask[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "RuntimeException"
        ]
    }, 
    "java.util.logging.Logger.doLog(LogRecord, ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.TimeZoneNameUtility.retrieveGenericDisplayName(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.max(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.mappingCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.release(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.xml.parsers.DocumentBuilder.setEntityResolver(org.xml.sax.EntityResolver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.compare(short, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.DateFormatProvider.getDateTimeInstance(int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.put(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.access$300(ObjectInputStream, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.of(Transform.Kind, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.shutdown()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.Ser.readInternal(byte, ObjectInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getSharedQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.concurrent.ThreadLocalRandom.tryAdvance(IntConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setRect(int, int, Raster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.makeCommonPool()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "ClassNotFoundException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.LinkedHashMap.linkNodeLast(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.getNumBands()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DataBuffer.toIntArray(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.offer(Object)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.HandleTable.HandleList.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getPackages()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.hashCode(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.isInfinite(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.headMap(Object, boolean)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.isSupported(TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.COWSubListIterator.nextIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.hugeCapacity(int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.spliterator(long[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.containsValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divide(long, MutableBigInteger)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.init(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.ContainerOrderFocusTraversalPolicy.getTopmostProvider(Container, Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.LocaleStore.getTextIterator(TextStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.3.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.pow(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.LocalTime.atOffset(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getBaseStyle(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.ThreadGroupContext.1.create(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CalendarBuilder.clear(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implReplace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.checkSlotCount(int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.successor(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.dateEpochDay(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.IndexColorModel.getBlues(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.addDot(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.list(Path)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.move(Path, Path, CopyOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getY1()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.now()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.arity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.appendValue(StringBuilder, String, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetDateTime.isBefore(OffsetDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.reflect.Field.setFloat(Object, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.cmm.CMSManager.getModule()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.jar.JarInputStream.getNextJarEntry()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ZipException", 
            "ZipException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.Collection.stream()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.file.FileSystems.getDefaultProvider()": {
        "intra_proced": [
            "Error", 
            "Error"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "NoSuchMethodException"
        ]
    }, 
    "java.util.logging.Logger.isSystemBundle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getPropertyChangeListeners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectIterator.isDone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.ThreadLocalMap.cleanSomeSlots(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteOrder.nativeOrder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getAllQualifyingCandidates(String, String, Provider[])": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "InvalidParameterException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.Nodes.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.conc(StreamShape, Node, Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.access$1500(LogManager)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isUnicodeIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.run()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.concurrent.ExecutorCompletionService.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.getVetoableChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.FeatureDescriptor.setValue(String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.findNonEmptyStealQueue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.localizedWeekOfWeekBasedYear(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.toString(BigInteger, StringBuilder, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.zone.ZoneOffsetTransitionRule.of(Month, int, DayOfWeek, LocalTime, boolean, ZoneOffsetTransitionRule.TimeDefinition, ZoneOffset, ZoneOffset, ZoneOffset)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.beans.VetoableChangeSupport.addVetoableChangeListener(String, VetoableChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LongSummaryStatistics.getMin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.FieldReflectorKey.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.time.YearMonth.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "DateTimeException"
        ]
    }, 
    "java.net.ServerSocket.checkOldImpl()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.getLong(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.BufferedImage.getWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.clazz(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.constantZero(BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.getAvailableChronologies()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.put(short[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.net.URLClassLoader.nextElement()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.walkFileTree(Path, FileVisitor)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "ClassCastException"
        ]
    }, 
    "java.net.InetSocketAddress.hashCode()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReduceOps.11ReducingSink.accept(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.getRules(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "ZoneRulesException", 
            "ZoneRulesException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.intersectsLine(Line2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.FloatBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getUnicodeLocaleAttributes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahEra.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.SocketPermission.access$000(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Stack.removeElementAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.lang.Integer.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.connect(SocketAddress, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "SocketException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.PrintWriter.println(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.lang.StringBuilder.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.checkBadFlags(Flags[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.add(Object)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.TreeMap.EntryIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.identity(Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.TerminalOp.evaluateParallel(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.fieldCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.inferCaller()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.CopyMoveHelper.parse(CopyOption[])": {
        "intra_proced": [
            "NullPointerException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.subHighest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.containsFocus()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.tryAdvance(Consumer)": {
        "intra_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "NullPointerException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.newTaskFor(Runnable, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.resizeStamp(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.complete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextComponent.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.reflect.Proxy.Key2.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ProxySelector.getDefault()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "javax.xml.transform.Transformer.setOutputProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.normalize(URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "InternalError"
        ]
    }, 
    "java.awt.datatransfer.StringSelection.getTransferDataFlavors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapCharBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.afIndex(byte, boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.Date.isNormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.getTreeNode(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceValuesTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.addClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BorderLayout.getLayoutComponent(Object)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.removeNode()": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.util.stream.Nodes.DoubleSpinedNodeBuilder.forEach(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.toGenericString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.replace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.PreferenceChangeEvent.getSource()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.removeRange(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createMenuItem(MenuItem)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setPreferredSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.isMCSiteLocal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.makeDouble(DoublePredicate, MatchOps.MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractQueue.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.LanguageTag.canonicalizeExtension(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicTypesOrd(BasicType[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.makeInt(IntPredicate, MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.getId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.storeToXML(OutputStream, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.compareTo(OffsetTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.Category.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getListenerType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.valueMatches(LambdaForm.BasicType, Class, Object)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.channels.spi.AbstractSelector.deregister(AbstractSelectionKey)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoChronology.eras()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.charset.CharsetEncoder.canEncode(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "CharsetEncoder", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.SliceOps.2.unorderedSkipLimitSpliterator(OfInt, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilePermissionCollection.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.peek()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.zonedDateTime(Instant, ZoneId)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getFirstDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferS.put(float[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "BufferOverflowException", 
            "Error"
        ]
    }, 
    "java.awt.geom.FlatteningPathIterator.tableswitch($i3)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.matchInit(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfDouble.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.viewAsTypeChecks(MethodType, boolean)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.copyInto(Object[], int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.inClosedRange(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLClassLoader.4.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.setPlatformResources(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.isPartiallyNormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl.updateCheck(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.stream()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.channels.FileChannel.lock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.propertyNames()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isFocusable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.compute()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Collections.shuffle(List)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Collections.CheckedMap.CheckedEntrySet.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.peek(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divideAndRound(long, long, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "AssertionError"
        ]
    }, 
    "sun.util.calendar.JulianCalendar.getFixedDate(int, int, int, sun.util.calendar.BaseCalendar.Date)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectConstructorCommon(Class, MemberName, boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.lang.ProcessEnvironment.put(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.getRawClassTypeAnnotations(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferU.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.finder.BeanInfoFinder.find(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getPreferredSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarFile.hasMoreElements()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineLoad(LoadStoreParameter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSource.getCertificates()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isInvalid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.getMemberVMInfo(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.isLoggable(Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.formatList(String[], String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.ObjectStreamClass.EntryFuture.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.setForkJoinTaskTag(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MouseInfo.getNumberOfButtons()": {
        "intra_proced": [
            "HeadlessException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.io.File.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.time.LocalTime.ofSecondOfDay(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.checkDisplayNameParams(int, int, int, int, Locale, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.valueOf(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeUTFBody(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextArea.replaceRange(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.function.Predicate.lambda$isEqual$13(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.print.PrinterJob.print()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.hexDouble(double, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "AssertionError"
        ]
    }, 
    "java.awt.Window.removeFromWindowList(sun.awt.AppContext, WeakReference)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToIntTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.defineSystemPackage(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.getNode(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.isRemoved()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.sharedToString(int, boolean, Class[], Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.ofHours(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.getPropertyChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.clearFocusOwner()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.zip.ZipUtils.get64(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.InvalidPathException.getReason()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.renderable.RenderContext.getTransform()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.getValue(DateTimePrintContext, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferU.get(long[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferUnderflowException"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "Error"
        ]
    }, 
    "java.lang.Throwable.getOurStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.EventSetDescriptor.getAddListenerMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTargetDragEvent.getTransferable()": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidDnDOperationException"
        ]
    }, 
    "java.lang.StringBuilder.replace(int, int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferL.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.RangeLongSpliterator.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getZoneStringsWrapper()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BitSieve.unitIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.encode(char[], int, int)": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "UnsupportedEncodingException", 
            "Error", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "BufferOverflowException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsupportedCharsetException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.Format.createAttributedCharacterIterator(AttributedCharacterIterator, AttributedCharacterIterator.Attribute, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.parseLine(Class, URL, BufferedReader, int, List)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException", 
            "ServiceConfigurationError"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferB.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.IntArrayNode.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.AppContext.isDisposed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.getCalendarDate(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getLogicalHighlightShape(int, int, Rectangle2D)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.IntStream.rangeClosed(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong.acceptConsumed(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.print.PrintServiceLookup.lookupPrintServices(DocFlavor, AttributeSet)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.throwException(MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodType", 
            "MethodHandleStatics", 
            "MethodType", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.chrono.HijrahDate.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.MinguoDate.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.PageAttributes.tableswitch(i0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.CollectionView.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Sink.accept(Integer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.RenderingEngine.createStrokedShape(Shape, float, int, int, float, float[], float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.warning(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getDateTimeBefore()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.unmaskNull(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.applyResourceBundle(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.math.MutableBigInteger.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.getComponentCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.put(int[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.get(int)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.SystemTray.getTrayIconSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isAlpha(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.ServerSocket.setCreated()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i2)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.dropArguments(MethodHandle, int, Class[])": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "MethodType"
        ]
    }, 
    "java.time.chrono.Chronology.ofLocale(Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.util.locale.LocaleExtensions.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.toString(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoEra.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.delItem(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.tryAdvance(Consumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getAllByName(String, InetAddress)": {
        "intra_proced": [
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException", 
            "UnknownHostException"
        ], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "AssertionError", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.SimpleDateFormat.lookupswitch(c1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.nanosUntil(Instant)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.Collections.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.awt.Window.setWarningString()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.jar.JarFile.hasClassPathAttribute()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.time.LocalDate.withYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.intersects(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.OffsetIdPrinterParser.checkPattern(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.file.FileTreeWalker.wouldLoop(Path, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.access$000()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownServiceException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.ClassLoaderHelper.mapAlternativeName(File)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Collections.SynchronizedNavigableMap.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.SNode.casNext(SNode, SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.hitToCaret(TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.getNextEvent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.add(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetWaitStatus(AbstractQueuedSynchronizer.Node, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.getBlockDataMode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Era.getSince(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.setRawResult(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.internalCallerClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBufferR.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.removeNodeSpi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToDoubleTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.access$800(String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.padNext(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Dimension.setSize(Dimension)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.destroyProcess(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.ReferenceQueue.reallyPoll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.Field.1.resolve(Map, TemporalAccessor, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.isApparentlyUnblocked()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.createAttributedCharacterIterator(AttributedCharacterIterator[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(BigDecimal, StringBuffer, FieldDelegate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.SearchMappingsTask.quietlyCompleteRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.exp(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.minBy(Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.color.ICC_ColorSpace.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch0(short[], int, int, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toUpperCase()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Dialog.setOpacity(float)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.net.Inet6Address.readObject(ObjectInputStream)": {
        "intra_proced": [
            "SecurityException", 
            "InvalidObjectException", 
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotActiveException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnknownHostException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTime.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.calcSize(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.runStateAtLeast(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.arraySpliterator(Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Resource.getByteBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.nextToken()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MenuItem.getShortcutMenuItem(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.pageSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.lambda$forEachRemaining$230(Consumer, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.math.BigInteger.subN(int[], int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getEnclosingMethodInfo()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.splitAsStream(CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.IdentityHashMap.setValue(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.lang.Throwable.println(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.math.BigInteger.remainder(BigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferRL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.cache(String, Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Hashtable.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.addCount(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSetAll(Object[], IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.casNext(TransferQueue.QNode, TransferQueue.QNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getFallbackLocale(String, Locale)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "sun.reflect.Reflection.filterMethods(Class, Method[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToIntTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.removeHierarchyListener(HierarchyListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collector.of(Supplier, BiConsumer, BinaryOperator, Collector.Characteristics[])": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.time.temporal.WeekFields.dayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.getAssignedCombiner()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getEnd(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar$Date, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.absLowest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedThreads()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.ExceptionInfo.newInvalidClassException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.write(ByteBuffer)": {
        "intra_proced": [
            "WritableByteChannelImpl"
        ], 
        "inter_proced": [
            "BufferUnderflowException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.zip.Inflater.inflate(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.util.Timer.schedule(TimerTask, Date, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.color.ICC_Profile.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.isTraySupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.mergePropertyWithIndexedProperty(PropertyDescriptor, IndexedPropertyDescriptor)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.awt.DefaultKeyboardFocusManager.processKeyEvent(Component, KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.charset.CharsetDecoder.replaceWith(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.time.Duration.plus(long, TemporalUnit)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.setValue(DateTimeParseContext, long, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.time.chrono.ChronoPeriodImpl.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(short[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.toUnsignedString(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.alignOnBaseline(GridBagConstraints, Rectangle, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.LongWrappingSpliterator.tryAdvance(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.isValid(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.RenderingHints.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ConditionalSpecialCasing.Entry.getLanguage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractSpinedBuffer.chunkSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.combine(ProtectionDomain[], ProtectionDomain[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.Transform.of(Kind, int, int, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.dnd.DropTarget.updateLocation(Point)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.isShowing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.util.stream.ReduceOps.8.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.lambda$replaceAll$101(UnaryOperator, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.ConcurrentWeakInternSet.add(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.setEndRule(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Font.getTransform()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.remainderUnsigned(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfRef.initStack()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.tableswitch($i7)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectByteBuffer.asDoubleBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.checkRange()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.nextBytes(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.findBundle(CacheKey, List, List, int, Control, ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.getDeclaredAnnotationsByType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.DirectColorModel.getsRGBComponentFromsRGB(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.lookupswitch(i4)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.List.setEnabled(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureClassLoader.defineClass(String, byte[], int, int, CodeSource)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTime.toEpochSecond(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.balanceDeletion(TreeNode, TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.BitSet.ensureCapacity(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getFocusListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectShortBufferU.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getLocalSocketAddress()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "SocketException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.equals(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.SocketImpl.getFileDescriptor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getGenericSignature0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.12.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.registerAsParallelCapable()": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.concurrent.SynchronousQueue.transfer(Object, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.getReturnType(Class, Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.previous()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "HeadlessException"
        ]
    }, 
    "java.util.BitSet.set(int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.Locale.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.print(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToDoubleTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.io.OutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.setLocationByPlatform(boolean)": {
        "intra_proced": [
            "IllegalComponentStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchFieldException"
        ]
    }, 
    "java.lang.Long.lowestOneBit(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.getRadixConversionCache(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.text.DecimalFormat.setMaximumIntegerDigits(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.setLenient(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.pollFirstEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.setNextRunTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalTime.plusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.fixRoots(double[], double[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.Semaphore.FairSync.getState()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.set(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "sun.misc.Unsafe.copyMemory(long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.long1(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.Field.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.findResourceBundle(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.awt.image.BufferedImage.getProperty(String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl.isAncestor(ClassLoader, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.SerialCallbackContext.setUsed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.createDataBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getDataElement(float[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Menu.getShortcutMenuItem(MenuShortcut)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.logrb(Level, String, String, ResourceBundle, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormBuffer.resultIndex()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.setPolicy(Policy)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException", 
            "SecurityException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.accept(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.unicodeScriptPropertyFor(String)": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Scrollbar.paramString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendOffsetId()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getDeclaringClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads()": {
        "intra_proced": [
            "IllegalMonitorStateException"
        ], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.geom.Rectangle2D.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.toMillis()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.lang.CharacterDataLatin1.isUnicodeIdentifierPart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.list(PrintWriter)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.remove(Object, Object[], int)": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeFields()": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.function.LongUnaryOperator.andThen(LongUnaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoChronology.dateYearDay(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.OffsetDateTime.getOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.createUnresolved(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.logging.LogManager.checkSubclassPermissions()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.regex.Matcher.appendReplacement(StringBuffer, String)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextHitInfo.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.helpQuiescePool(ForkJoinPool.WorkQueue)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.lang.invoke.MethodHandleStatics.uncaughtException(Throwable)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.isStrict()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferL.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.combineOpFlags(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.removeLoggerRef(String, LoggerWeakRef)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.CountingWrapper.countDown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.ended()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.getTileGridXOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.inForkJoinPool()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.ZipFileInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FontMetrics.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.toArray(Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.getQuery()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.put(int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.of(Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.security.UnresolvedPermission.resolve(Permission, Certificate[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NoSuchMethodException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.LogManager.LoggerContext.getLoggerNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceOp.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TimeZone.getDisplayName()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ProcessEnvironment.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferRB.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.encode(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "Error", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.color.ICC_Profile.isChildOf(File, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.math.MutableBigInteger.divideAndRemainderBurnikelZiegler(MutableBigInteger, MutableBigInteger)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Calendar.setWeekDate(int, int, int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.fastFormat(double)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.MethodHandle.asCollectorChecks(Class, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "sun.font.FontResolver.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.onTermination(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.java2d.pipe.Region.getDifference(Region)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.disable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.invoke.MemberName.makeAccessException(String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Thread.init(ThreadGroup, Runnable, String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalThreadStateException", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.AWTEventMulticaster.populateListenerArray(EventListener[], EventListener, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.environment()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.net.ServerSocket.getReuseAddress()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.text.Collator.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.Temporal.get(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PlainSocketImpl.getOption(SocketOption)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getParameterTypes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.4.computeValue(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.lines()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.security.KeyStoreSpi.engineGetKey(String, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.reconstitutionPut(Entry[], Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.prepareImage(Image, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.validate(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.www.MessageHeader.findValue(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getSystemResourceAsStream(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.lang.Long.toUnsignedString(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.nextElement()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.doubleValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.AbstractExecutorService.newTaskFor(Callable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.checkSerialize()": {
        "intra_proced": [
            "ExceptionInfo"
        ], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.primitiveLeftShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpConnectSocketImpl.doTunneling(HttpURLConnection)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.nio.file.FileVisitOption.ordinal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.getLong(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.invoke.LambdaForm.BasicType.basicType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValue(NumberPrinterParser)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getAnnotationBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.push(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.lengthOfMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.ZonedDateTime.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getMinutes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.EnsureInitialized.get(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.ensureProtectedAccess(Object)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Font.getFontName(Locale)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.addConditionWaiter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.submit(Callable)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AbstractMethodError"
        ]
    }, 
    "java.lang.ThreadGroup.isDestroyed()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.divadd(int[], int[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.node(long[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.shiftLeft(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.Factory.resolveOrNull(byte, MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSigner.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.of(Transform.Kind, int, int, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.getSourceShape()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.loadInsnOpcode(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.checkWindowClosingException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.setLocation(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.Head.isParallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.matchScale(BigDecimal[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.util.TaskQueue.heapify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.toUpperCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.OfDouble.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getsRGB8ToLinearRGB16LUT()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.checkInterruptWhileWaiting(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Format.parseObject(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putChar(long, char, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.removeNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Component.relocateComponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.PropertyChangeListenerMap.set(String, EventListener[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.dispatchEventImpl(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.MessageFormat.format(String, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.c()": {
        "intra_proced": [
            "Pattern"
        ], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.legacyMergeSort(Object[], Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.logging.PlatformLogger.warning(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.remove(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDateTime.ofEpochSecond(long, int, ZoneOffset)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.externalSubmit(ForkJoinTask)": {
        "intra_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool"
        ], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.put(LongBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "sun.util.locale.BaseLocale.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.getLowestSetBit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.FairSync.compareAndSetState(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.Entry.setVal(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDate.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.CharSequence.1CharIterator.forEachRemaining(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.navigableKeySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.setBit(int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicLong.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readClass(boolean)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.isVisible(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodTypeForm.setCachedLambdaForm(int, LambdaForm)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferL.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.spi.DateFormatSymbolsProvider.getInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.misc.ReflectUtil.isNonPublicProxyClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "AssertionError"
        ]
    }, 
    "java.util.PriorityQueue.remove()": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.util.Formatter.add(Formatter.Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.reflect.generics.factory.CoreReflectionFactory.make(GenericDeclaration, sun.reflect.generics.scope.Scope)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.ProcessPipeOutputStream.processExited()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.jca.ProviderList.providers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.MulticastSocket.joinGroup(InetAddress)": {
        "intra_proced": [
            "SocketException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.Instant.isBefore(Instant)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.ProtectionDomain.getPermissions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.bufferCreate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ConditionalSpecialCasing.toLowerCaseEx(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.datatransfer.StringSelection.getTransferData(DataFlavor)": {
        "intra_proced": [
            "UnsupportedFlavorException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.intersects(Rectangle2D)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.getCharacterInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.remove(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putLongB(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.removeNotify(ComponentPeer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.setConnectionResetPending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "sun.awt.image.SurfaceManager.setAccelerationPriority(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Point.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.refineRootWithHint(double[], double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.HierarchyEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.getCapturingClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.compute(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.util.GregorianCalendar.getCutoverCalendarSystem()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.lookupswitch(c4)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.List.addItemListener(ItemListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.epochMonthLength(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.postWindowEvent(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.awt.RenderingHints.keySet()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.computeWeek(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.until(ChronoLocalDate)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToIntTask.getRawResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.IntWrappingSpliterator.init()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.lambda$sum$183(double[], double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitAnnotation(String, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.lookupswitch($b3)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.date(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.fastRemove(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.min()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.time.Instant.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.testAllFlags(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.file.Files.newBufferedReader(Path)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.EmptyTask.setRawResult(Void)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.log10(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.set(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.receive(DatagramPacket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.computeDefaultSUID(Class)": {
        "intra_proced": [
            "InternalError", 
            "SecurityException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "NoSuchAlgorithmException", 
            "AssertionError", 
            "UTFDataFormatException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Random.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Resource.getManifest()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.lookupswitch(c1)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Vector.remove(int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.text.Format.format(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.net.DatagramSocketImpl.create()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.freeFrameLocal(int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.CharPropertyNames.CloneableProperty.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getFixedDateJan1(sun.util.calendar.BaseCalendar$Date, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetHead(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.EmptySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.requiresBidi(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.GroupCurly.match0(Matcher, int, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Currency.getSymbol(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Authenticator.setDefault(Authenticator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.stream.Nodes.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferU.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.resolveFractional()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.makeNodeBuilder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef.acquirePermits(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToDoubleTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormat.parse(String, ParsePosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.BaseSpliterator.arraySpliterator(Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.RuntimeException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.dateEpochDay(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.lookupswitch(b0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.IsoEra.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineGetEntry(String, ProtectionParameter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.isRepresentationClassReader()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.defCategory(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.Beans.newPropertyChangeEvent(Object, String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.getMaxPriority()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.Arrays.sort(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.setName(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.isDirectory(Path, LinkOption[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putFloat(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.signum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.SecureRandom.getInstance(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.deleteIfExists(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.JulianCalendar.getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.stream.DoublePipeline.lazySpliterator(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleInfo.toString(int, Class, String, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "FormatterClosedException"
        ]
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.dnd.SunDropTargetEvent.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.putAll(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalQueries.precision()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.LocalGregorianCalendar.getYearLength(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Package.getSystemPackages0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.tryAdvance(DoubleConsumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.time.temporal.ValueRange.getMinimum()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.peekExpired()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.InternalLocaleBuilder.setExtensions(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.DesktopBrowse.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Permissions.implies(Permission)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getFloat(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.hasGenericInformation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.checkNumeric()": {
        "intra_proced": [
            "IllegalFormatWidthException", 
            "IllegalFormatPrecisionException", 
            "MissingFormatWidthException", 
            "IllegalFormatFlagsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SimpleMethodHandle.copyWithExtendF(MethodType, LambdaForm, float)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.text.DecimalFormat.toPattern()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.OffsetDateTime.minusMinutes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.nextPutIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.longValue()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.TimeZone.getRawOffset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.internArguments()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocketImpl.getOption(SocketOption)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.getPoolSize()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getDataElements(int, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.tableswitch($i4)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.IdentityHashMap.estimateSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendValue(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.parseName(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.delete(Path)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.withOffsetSameInstant(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.tryTerminate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.ZoneName.toZid(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.readLine()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.NumberPrinterParser.withFixedWidth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.invokePropertyChange(Object, Object)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.processDragOver(DragSourceDragEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.matround(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.withMinute(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.time.Month.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.getChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.max()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ColorModel.getNormalizedComponents(Object, float[], int)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Formatter.FormatSpecifier.print(short, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.expungeStaleEntry(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.3.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapEntryIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeClassDescriptor(ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.OffsetTime.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.SecurityManager.checkSecurityAccess(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Image.setAccelerationPriority(float)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.processMouseEvent(MouseEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.withOffsetSameInstant(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.dateYearDay(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.regex.Pattern.printObjectTree(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.1MatcherIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.computeIfPresent(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.applyFunctionAtIndex(int, TextLine.Function)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.QuadCurve2D.getX2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PrintAllCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipCoder.getBytes(String)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "BufferOverflowException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.provider.LocaleResources.getNumberPatterns()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.availablePermits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.rejectedExecution(Runnable, ThreadPoolExecutor)": {
        "intra_proced": [
            "RejectedExecutionException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ReentrantLock"
        ]
    }, 
    "java.awt.image.SampleModel.setDataElements(int, int, int, int, Object, DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Vector.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.util.JumboEnumSet.EnumSetIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.tableswitch($i11)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.function.LongPredicate.and(LongPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.asLongBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.getCursorType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.internalMemberName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.XmlSupport.resolveEntity(String, String)": {
        "intra_proced": [
            "SAXException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.BufferedOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Level.add(Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.plusSeconds(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.toMethodDescriptorString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.BasicPermissionCollection.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.makeLocalTemp(LambdaForm.BasicType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$summarizingInt$174(ToIntFunction, IntSummaryStatistics, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.signInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.maybeCompileToBytecode(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.lang.invoke.LambdaForm.Name.type()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.removeStaleEntries(Entry[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.iterator(OfDouble)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.setParsed(Chronology)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.DualPivotQuicksort.doSort(double[], int, int, double[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.getProlepticYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.AttributedStringIterator.internalSetIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.DescendingKeyIterator.prevEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfLong.makeChild(Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.split(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.plus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.awt.image.ImageFilter.setProperties(Hashtable)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Dialog.conditionalShow(Component, AtomicLong)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.lang.StrictMath.nextDown(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.activeCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.checkPermission(Permission)": {
        "intra_proced": [
            "NullPointerException", 
            "AccessControlException"
        ], 
        "inter_proced": [
            "IllegalAccessException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.getExclusiveOwnerThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.getSunAwtDisableMixing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(LocalDate, LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SampleModel.tableswitch(i4)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.HashIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.provideRefresh()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.min(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.getStreamAndOpFlags()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getByte(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.equalPDs(ProtectionDomain[], ProtectionDomain[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.readLong()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.LinkedBlockingQueue.offer(Object, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "AbstractMethodError"
        ]
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.fieldSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.fromURIPath(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.parsePastLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.SubMapKeyIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.removeEldestEntry(Map.Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.clone()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.awt.geom.AffineTransform.calculateType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuComponent.paramString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadLocal.setInitialValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.isPresent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.getModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.min(float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.spi.FileSystemProvider.installedProviders()": {
        "intra_proced": [
            "Error"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.create(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.EntryIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.plusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.getFontRenderContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.PutField.put(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.IndexedPropertyDescriptor.setIndexedPropertyType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PermissionsHash.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NotActiveException", 
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.time.temporal.ChronoUnit.compareTo(Enum)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.IntStreamBuilderImpl.tryAdvance(IntConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.cancelAcquire(AbstractQueuedSynchronizer.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.toBinaryString(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandle.invokeBasic(MethodType, LambdaForm, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.SpeciesData.lookupCache(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.peekByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TaskQueue.removeMin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapLongBuffer.discardMark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "jdk.internal.org.objectweb.asm.MethodVisitor.visitFieldInsn(int, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.parallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferS.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.Itr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.SocksProxy.protocolVersion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.typeToPackageName(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ForEachOps.doCompute(ForEachOps.ForEachOrderedTask)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.Shutdown.sequence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getDoubleB(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.getCaretShapes(int, Rectangle2D, TextLayout.CaretPolicy)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.OffsetDateTime.getDayOfYear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.getCeilingEntry(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.add(String, Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.Date.getMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkAccess(ThreadGroup)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.io.ObjectOutputStream.PutField.put(String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.random()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneOffsetTransition.getOffsetAfter()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.UnixFileSystem.resolve(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.placeInCache(ClassValue.Entry[], int, ClassValue.Entry, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getMonthValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "NullPointerException"
        ]
    }, 
    "java.awt.geom.GeneralPath.transform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.isBefore(ChronoLocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyToArray(long, Object, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.array(Object, Object, Object, Object, Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.text.ChoiceFormat.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(String[], String[], File)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.awt.MediaTracker.checkAll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SerializedLambda.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "FormatterClosedException"
        ]
    }, 
    "sun.util.locale.provider.CalendarDataUtility.retrieveJavaTimeFieldValueNames(String, int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.ZoneIdPrinterParser.parseOffsetBased(DateTimeParseContext, CharSequence, int, int, OffsetIdPrinterParser)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.LocalizedPrinterParser.formatter(Locale, Chronology)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.transfer(Entry[], Entry[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MenuItem.processEvent(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics2D.transform(AffineTransform)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToLongTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.addAll(Collection)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormatSymbols.toOneBasedArray(String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.checkAWTPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferRB.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ServiceLoader.LazyIterator.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.getInstance(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.io.DataInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Container.getAlignmentY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.InternalLocaleBuilder.getLocaleExtensions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.ByteBuffer.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.ulp(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.security.SecureClassLoader.getProtectionDomain(CodeSource)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SecurityException"
        ]
    }, 
    "java.nio.ByteBufferAsShortBufferRL.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Byte.compareTo(Byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(int)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.packedBytes(int, int, int)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.of(int, int, int, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.math.BigDecimal.UnsafeHolder.setIntValVolatile(BigDecimal, BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getInputStream(ZipEntry)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.getCache()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.spliterator()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.updateGraphicsData(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "java.net.SocketImpl.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.Socket.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "SocketException"
        ]
    }, 
    "java.util.StringTokenizer.nextElement()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistDate.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getHeaderFieldDate(String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.dateYearDay(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.text.SimpleDateFormat.applyPattern(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.invoke.SerializedLambda.getCapturedArg(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.toLowerCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Path2D.Double.curveTo(double, double, double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.PeekInputStream.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferRB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.setMethod(Method)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineGetCreationDate(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getReceiveBufferSize()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.security.cert.X509Certificate.getSubjectAlternativeNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextFloat()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJChar.Merger.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.ReduceTask.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.addExact(int, int)": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.isFocusTraversable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.maxBy(Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.GregorianCalendar.getFixedDateMonth1(sun.util.calendar.BaseCalendar.Date, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfInt.makeChild(Spliterator, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.compareTo(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError"
        ]
    }, 
    "java.math.MutableBigInteger.safeRightShift(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.createSystemTray(SystemTray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getObjFieldValues(Object, Object[])": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Class.forName(String, boolean, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.text.AttributedCharacterIterator.Attribute.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.moveRootToFront(HashMap.Node[], HashMap.TreeNode)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InfoFromMemberName.run()": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.focusNextComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.SerializationTester.test(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.util.SubList.removeRange(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.make()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.FileDialog.isMultipleMode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.util.regex.Pattern.subFlag()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.parse(CharSequence, DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeFormatter", 
            "DateTimeParseException", 
            "DateTimeParseException"
        ]
    }, 
    "sun.util.calendar.BaseCalendar.getDayOfYear(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Era.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.SelectorProvider.access$000()": {
        "intra_proced": [], 
        "inter_proced": [
            "ServiceConfigurationError", 
            "ServiceConfigurationError", 
            "ServiceConfigurationError", 
            "ServiceConfigurationError", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.security.AccessController.doPrivilegedWithCombiner(PrivilegedExceptionAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collection.spliterator()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfInt.forEach(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.flip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.standardCreateTextLine(FontRenderContext, AttributedCharacterIterator, char[], float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.CI.isEqual(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getBufferStrategy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ThreadGroup.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Character.isDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitInvoke(LambdaForm.Name)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "InternalError", 
            "AssertionError"
        ]
    }, 
    "java.lang.reflect.Proxy.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.SequencedEvent.getFirstWithContext()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.read(InputStream)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.getBounds()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntryCrc(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.evaluateToNode(PipelineHelper, Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Robot.checkKeycodeArgument(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.atom()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.remove()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.addPreferenceChangeListener(PreferenceChangeListener)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalThreadStateException", 
            "IllegalThreadStateException", 
            "IllegalThreadStateException"
        ]
    }, 
    "java.nio.HeapDoubleBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.lookupswitch($c4)": {
        "intra_proced": [
            "ClassCastException", 
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ReduceOps.13.makeSink()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.getMedia()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.runTask(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.util.stream.ReduceOps.combine(ReduceOps.2ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.push(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "AssertionError", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.JobAttributes.setMultipleDocumentHandling(MultipleDocumentHandlingType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.getDirectConstructorCommon(Class, MemberName, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isFocusTraversalPolicyProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.LanguageTag.getLanguage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.getRGB()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.selfInterrupt()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.HttpURLConnection.getInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MultiPixelPackedSampleModel.createSubsetSampleModel(int[])": {
        "intra_proced": [
            "RasterFormatException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Font.getLineMetrics(String, FontRenderContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.unlink(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.IsoFields.access$600(LocalDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.queueSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Bits.putChar(byte[], int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.range(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedTemporalTypeException", 
            "NullPointerException"
        ]
    }, 
    "java.time.format.DateTimeFormatter.toFormat(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getFontMetrics(Font, AffineTransform, Object, Object, float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferL.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Point.setLocation(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.lambda$static$43(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.setSize(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.systemRoot()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.beans.PropertyDescriptor.setPropertyEditorClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.exponent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.getDirectFieldCommon(byte, Class, MemberName, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "InternalError", 
            "MethodType"
        ]
    }, 
    "java.util.spi.LocaleServiceProvider.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSupport.intStream(OfInt, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.write(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.nio.DirectByteBuffer.asCharBuffer()": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.getContainingWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.isEqual(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferS.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.get2DigitYearStart()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.exiting(String, String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.parametersAreViewableAs(MethodType, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.setLevelsOnExistingLoggers()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "sun.reflect.ReflectionFactory.newFieldAccessor(Field, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.currentBlockRemaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.getOrDefault(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.drainTo(Collection, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.focusGained(FocusEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.mergeSort(Object[], Object[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.checkInvariants(HashMap.TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getImpl(String, String, String, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.net.MulticastSocket.leaveGroup(SocketAddress, NetworkInterface)": {
        "intra_proced": [
            "SocketException", 
            "IllegalArgumentException", 
            "UnsupportedOperationException", 
            "SocketException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.regex.Pattern.Node.match(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.ValueIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isSameOrAncestorOf(Component, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileSystem.setLastModifiedTime(File, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Frame.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "ArrayIndexOutOfBoundsException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.channels.FileChannel.lock(long, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.print(TemporalAccessor, char, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.awaitNanos(long)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.Entry.setValue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.InternalLocaleBuilder.setLanguageTag(sun.util.locale.LanguageTag)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.initializeInvokers()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "StringIndexOutOfBoundsException", 
            "AssertionError", 
            "InternalError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.math.BigDecimal.abs(MathContext)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.lang.ThreadGroup.threadStartFailed(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.intersects(double, double, double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.readNonProxy(ObjectInputStream)": {
        "intra_proced": [
            "InvalidClassException", 
            "InvalidClassException", 
            "InvalidClassException"
        ], 
        "inter_proced": [
            "EOFException", 
            "EOFException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "EOFException"
        ]
    }, 
    "java.awt.TrayIcon.displayMessage(String, String, TrayIcon.MessageType)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.doLayout()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.Raster.createPackedRaster(DataBuffer, int, int, int, Point)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "RasterFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.net.URI.isOpaque()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.flattenDouble(Node.OfDouble)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.System.getEnumConstantsShared(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.awt.image.WritableRaster.createWritableTranslatedChild(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException", 
            "RasterFormatException"
        ]
    }, 
    "java.text.ParseException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.PreferenceChangeEvent.getNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newOutputStream(AsynchronousByteChannel)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.List.getListeners(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.addAndGet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SubList.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.createCompatibleWritableRaster(int, int)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Math.scalb(double, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate(Runnable, long, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.lang.UNIXProcess.destroy(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.nextElement()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.ArrayPrefixHelpers.DoubleCumulateTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.nextLong()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.net.ExtendedOptionsImpl.getFlowOption(FileDescriptor, jdk.net.SocketFlow)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.fixup(MutableBigInteger, MutableBigInteger, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Long.remainderUnsigned(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.distinct()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.compareAndSwapLong(Object, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.hasReadObjectNoDataMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getAnnotatedReturnType0(Type)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.hasWaiters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.setScrollPosition(Point)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.ObjectStreamClass.hasReadResolveMethod()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.connect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Attributes.writeMain(DataOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "UnsupportedEncodingException", 
            "Error", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.dnd.DragSource.createDragGestureRecognizer(Class, Component, int, DragGestureListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.security.KeyStore.getDefaultType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyChangeSupport.getPropertyChangeListeners(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.equalParamTypes(Class[], Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Semaphore.Sync.getQueueLength()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.DefaultFileSystemHolder.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.write(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.PriorityQueue.next()": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.onShutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.isParallel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.setResourceBundle(ResourceBundle)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError"
        ]
    }, 
    "sun.invoke.util.Wrapper.isSubwordOrInt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ComponentColorModel.getDataElements(int[], int, Object)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getBreakIteratorProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.filterReturnForm(BasicType, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendChronologyText(TextStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.desiredAssertionStatus(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Executable.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongArrayNode.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DnDEventMulticaster.removeInternal(EventListener, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferQueue.QNode.isOffList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.tableswitch($s0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.put(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Rectangle.add(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledFutureTask.getDelay(TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsDevice.getFullScreenWindow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getX2()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.forEachRemaining(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "FormatterClosedException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistEra.of(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.parseNumber(CharSequence, String, int, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.geom.Path2D.Float.setWindingRule(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.getSamples(int, int, int, int, int, int[], DataBuffer)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Label.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.toOffsetTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.squareToLen(int[], int, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.translatePoint(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.getPreferredSize(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachKeyTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.replaceNode(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsShortBufferB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.ValidationList.doCallbacks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.BiFunction.andThen(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.log(LogRecord)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.isReadOnly()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.normalizer.NormalizerBase.normalize(String, Form)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.copyFromIntArray(Object, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.divide(BigDecimal, RoundingMode)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.dnd.DragGestureRecognizer.setComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongStream.generate(LongSupplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferRB.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.getHoldCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.minusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.Timer.schedule(TimerTask, long, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.awt.datatransfer.MimeTypeParameterList.getNames()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.walkAndSetParent(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.addPropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.getSignature()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoubleStream.of(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferB.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRU.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.now(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.Component.removePropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOp.evaluateSequential(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.parseUnsignedInt(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.GregorianCalendar.internalGetEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.removeActionListener(ActionListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SizedCollectorTask.OfRef.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.setDesktopProperty(String, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.text.DigitList.fitsIntoLong(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferU.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.type(Class, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractSelector.cancel(SelectionKey)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.typesMatch(LambdaForm.BasicType, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.WeakCache.expungeStaleEntries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsCallback.PaintAllCallback.getInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.lambda$typeCheck$102(BiFunction, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "com.sun.beans.finder.ClassFinder.findClass(String, ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTime.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.util.stream.MatchOps.MatchTask.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.appendTo(StringBuilder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.access$200(TextLine, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "sun.misc.Cleaner.clean()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigDecimal.shortValueExact()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "sun.util.calendar.ZoneInfo.getAvailableIDs(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferRL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.write(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.security.ProtectionDomain.1.doIntersectionPrivilege(PrivilegedAction, AccessControlContext, AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.makeIntrinsic(MethodHandle, Intrinsic)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StackTraceElement.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.malformedInputAction()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.addAll(int, Collection)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.util.stream.DoublePipeline.average()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.FileOutputStream.finalize()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "java.time.temporal.TemporalQueries.zone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Checkbox.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError"
        ]
    }, 
    "java.nio.HeapByteBuffer.asShortBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(int[], int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.ScrollPane.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "HeadlessException"
        ]
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.findNextLeafNode(Deque)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.getTime(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.setExclusiveOwnerThread(Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.headSet(Object, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBuffer.put(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getParameterDescriptors()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.collectDouble(PipelineHelper, Spliterator, boolean)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getFileName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.ArrayList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.printHashCode(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.forBasicType(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferL.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getISO2Table(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Level.KnownLevel.add(Level)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.clearRect(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.lang.invoke.MethodHandles.foldArgumentChecks(int, MethodType, MethodType)": {
        "intra_proced": [
            "MethodHandles"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.getModalBlocker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.convertToFraction(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "DateTimeException"
        ]
    }, 
    "java.text.ParsePosition.setErrorIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.LinkOption.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Long.toString(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.getTimeToLive(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.minusDays(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.PosixFilePermissions.toString(Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.MutableBigInteger.unsignedLongCompare(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.attribute.FileTime.compareTo(FileTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError", 
            "AbstractMethodError"
        ]
    }, 
    "sun.util.calendar.CalendarDate.getEra()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$groupingBy$159(Function, Supplier, BiConsumer, Map, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.VerifierCodeSource.getPrivateSigners()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.prefixLength(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.awaitTermination(long, TimeUnit)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "AbstractMethodError", 
            "RuntimeException"
        ]
    }, 
    "java.util.Spliterators.IntIteratorSpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.prolepticYear(Era, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.transferLinks(Entry, Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.fillNewArray(Integer, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.SunToolkit.targetToAppContext(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.parseField(char, int, TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.remove()": {
        "intra_proced": [
            "IllegalStateException", 
            "ConcurrentModificationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.characterCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.createEpochMonths(int, int, int, Map)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.tableswitch(i0)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "InternalError", 
            "InternalError", 
            "AssertionError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.text.MessageFormat.Field.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Month.query(TemporalQuery)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Dialog.getBackground()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ColorSpace.getMinValue(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.font.TextLayout.getVisualHighlightShape(TextHitInfo, TextHitInfo)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.listIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.root()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.nio.channels.SelectionKey.isAcceptable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalTime.tableswitch($i3)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.io.File.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.parse(String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.invoke.util.VerifyAccess.classLoaderIsAncestor(Class, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.toArray(Object[])": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.createWorker()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.awt.Container.postProcessKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.getFloat(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.requiresDefaultLoggers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayDeque.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.viewAsTypeChecks(MethodType, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.lookupswitch(c3)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.logging.Logger.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.BoundMethodHandle.editor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.Node.find(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.isResolved()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.spi.AbstractInterruptibleChannel.implCloseChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.generateLambdaFormInterpreterEntryPoint(String)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "InternalError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "InternalError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "MethodHandleStatics", 
            "NullPointerException"
        ]
    }, 
    "java.util.prefs.Preferences.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.AbstractCollection.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.WeakIdentityMap.Entry.isMatched(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.DualPivotQuicksort.sort(float[], int, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.LongSpinedNodeBuilder.forEach(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsDoubleBufferL.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.cannotCastMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormatSymbols.setZoneStrings(String[][])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "ClassCastException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.util.concurrent.ThreadPoolExecutor.Worker.acquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.LongPipeline.reduce(long, LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.BindCaller.prepareForInvoker(MethodHandle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextHitInfo.getOtherHit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.move(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "Component", 
            "AssertionError"
        ]
    }, 
    "java.awt.GridBagLayoutInfo.hasConstantDescent(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.BitSet.toByteArray()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectLongBufferU.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.time.Duration.negated()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.SliceOps.calcSliceFence(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(long[], int, int, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Spliterators.spliterator(PrimitiveIterator.OfLong, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.mixOnHiding(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.ArrayList.SubList.1.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.getResourceAsStream(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownServiceException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkMethod(byte, Class, MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.CodeSigner.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.removeWindowListener(WindowListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.reportOverflow()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.ValueSpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.forEachRemaining(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.checkAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.DataInputStream.skipBytes(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.lang.StringBuilder.indexOf(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(float[], float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.MappedByteBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.setVisibleAmount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.OptionalLong.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.repaint(long, int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.LockSupport.getBlocker(Thread)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.makeLong(LongPredicate, MatchOps.MatchKind)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.isCCLOverridden(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.forEachRemaining(LongConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.read(char[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Component.addInputMethodListener(InputMethodListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.postEvent(Event)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DropTarget.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "IOException"
        ]
    }, 
    "java.util.jar.JarVerifier.processEntry(sun.security.util.ManifestEntryVerifier)": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.copy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "sun.net.www.MessageHeader.add(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.run()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchMethodException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.getNamedCon(int, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxGroup.getSelectedCheckbox()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.get(TemporalField)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsupportedTemporalTypeException", 
            "NullPointerException", 
            "DateTimeException"
        ]
    }, 
    "java.awt.AWTEvent.getID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.MimeType.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.RuntimeException.printStackTrace()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.fixMethodType(Class, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics"
        ]
    }, 
    "java.nio.DoubleBuffer.put(double[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferOverflowException"
        ]
    }, 
    "java.lang.invoke.MethodHandleNatives.canBeCalledVirtual(MemberName, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextLong(long, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.inflateSpine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ShortBuffer.array()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "ReadOnlyBufferException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.awaitQuiescence(long, TimeUnit)": {
        "intra_proced": [], 
        "inter_proced": [
            "AbstractMethodError", 
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.io.UnixFileSystem.rename0(File, File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.EntryFuture.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.putDoubleL(ByteBuffer, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PropertyPermission.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getZoneIndex(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.shortCircuit(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.AttributedString.getAttribute(Attribute, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArraysParallelSortHelpers.FJObject.Merger.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getMTU0(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBuffer.order()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.RegularEnumSet.addAll(Collection)": {
        "intra_proced": [
            "ClassCastException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "sun.net.www.ParseUtil.fileToEncodedURL(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Constructor.hasGenericInformation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.KeySpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.parseBoolean(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getCursor(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.ListItr.previous()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getMaximumFractionDigits()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.isInterrupted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Robot.initLegalButtonMask()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "HeadlessException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "InterruptedException"
        ]
    }, 
    "java.awt.AWTKeyStroke.getAWTKeyStrokeClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.complete(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getTimeInMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataOutputStream.writeByte(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Optional.flatMap(Function)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.getMaxValue(int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "javax.xml.transform.TransformerFactory.newInstance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.getNameString(MethodHandle, MethodType)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.ConditionalSpecialCasing.isBeforeDot(String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.reflect.Proxy.access$300(ClassLoader, String, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntrySize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.getSecurityContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.FloatBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamField.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.removePropertyChangeListener(String, PropertyChangeListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.decode(String)": {
        "intra_proced": [
            "NumberFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Window.setShape(Shape)": {
        "intra_proced": [
            "IllegalComponentStateException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.MediaEntry.setStatus(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.LinkedKeyIterator.nextNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JumboEnumSet.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getInflater()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.BufferedImage.setRGB(int, int, int, int, int[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Field.getByte(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.arityCheck(int, MethodHandle, Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.SystemFlavorMap.setNativesForFlavor(DataFlavor, String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive.emptyConsumer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.find(int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.parallelSort(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.ForEachOps.ForEachTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getSubType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferL.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.util.Comparator.lookupswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getPCSType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.modalityPushed()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.zip.ZipFile.access$900(ZipFile, String, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.atomic.AtomicInteger.getAndAccumulate(int, IntBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsLongBufferRB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.security.Timestamp.getSignerCertPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.applet.Applet.getLocale()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.PasswordAuthentication.getPassword()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.locale.provider.LocaleProviderAdapter.getDecimalFormatSymbolsProvider()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InvocationEvent.getWhen()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapShortBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.CheckboxMenuItem.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.GradientPaintContext.putCachedRaster(ColorModel, Raster)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.RectangularShape.getMinX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getCharL(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.getInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.range(Pattern.BitClass)": {
        "intra_proced": [
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SliceOps.3.unorderedSkipLimitSpliterator(OfLong, long, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.until(Temporal, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneOffset.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.BaseSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.MinguoDate.plusWeeks(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException"
        ]
    }, 
    "java.awt.Desktop.checkActionSupport(Action)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.ChoiceFormat.format(long, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.getOffset(sun.util.calendar.BaseCalendar, sun.util.calendar.BaseCalendar$Date, int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.tableswitch($i3)": {
        "intra_proced": [
            "UnsupportedTemporalTypeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "ArithmeticException", 
            "DateTimeException", 
            "NullPointerException", 
            "ArithmeticException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.ASCII.isLower(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Parameter.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.KeyEvent.isShiftDown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.function.IntPredicate.and(IntPredicate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.Flags.contains(Flags)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.in(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Desktop.checkExec()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceEntriesTask.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterDataLatin1.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.ch.FileChannelImpl.open(FileDescriptor, String, boolean, boolean, boolean, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.engineUpdate(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.subtract(long, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseWheelEvent.getWheelRotation()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.isPartiallyNormalized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.getOffset(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.3.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfPrimitive.initTryAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.addAll(Class.MethodArray)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.copyInto(Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentF(BoundMethodHandle, int, float)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.TimeZone.getSystemGMTOffsetID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.ValueIterator.nextEntry()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.nextLocalTask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.getType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.createComponent(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DoubleBuffer.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsFloatBufferB.ix(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.largePrime(int, int, Random)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArithmeticException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfLong.asPrimitiveArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.PipelineHelper.evaluate(Spliterator, boolean, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.setBounds(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": [
            "Component", 
            "Component", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.stream.IntPipeline.count()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ColorModel.getGreen(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.rotateRight(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferRU.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GridBagLayout.lookupswitch(i12)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.ReduceEntriesTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.appendHMS(StringBuilder, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadPoolExecutor.shutdownNow()": {
        "intra_proced": [
            "ReentrantLock"
        ], 
        "inter_proced": [
            "ReentrantLock", 
            "Worker", 
            "ReentrantLock", 
            "ReentrantLock", 
            "ReentrantLock", 
            "NullPointerException", 
            "NullPointerException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException"
        ]
    }, 
    "java.nio.HeapCharBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.WritableRaster.setSample(int, int, int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.newInputStream(AsynchronousByteChannel)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.reflect.AccessibleObject.getDeclaredAnnotation(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getAlgorithmProperty(String, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.tryAdvance(DoubleConsumer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumSet.of(Enum, Enum, Enum, Enum)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException"
        ]
    }, 
    "java.lang.ClassValue.findReplacement(ClassValue.Entry[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipCoder.toString(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.KeyboardFocusManager.removeKeyEventPostProcessor(KeyEventPostProcessor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.SimpleTimeZone.setStartRule(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.StringBuffer.delete(int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.SpinedBuffer.OfPrimitive.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectCharBufferS.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.EmptyNode.OfLong.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileVisitResult.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Streams.accept(Object)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.owns(ConditionObject)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Array.newInstance(Class, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessBuilder.redirectInput(File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Stream.generate(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.indexOf(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStreamWriter.write(String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.MouseEvent.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.Duration.parse(CharSequence)": {
        "intra_proced": [
            "DateTimeParseException"
        ], 
        "inter_proced": [
            "ArithmeticException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "ArithmeticException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.SampleModel.setPixel(int, int, double[], DataBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.newCalendarDate(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Spliterators.IntArraySpliterator.hasCharacteristics(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.sort(Comparator)": {
        "intra_proced": [
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "ReentrantLock", 
            "ReentrantLock"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.AbstractCollection.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.emitX2I(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.Parsed.isSupported(TemporalField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.FieldPosition.matchesField(Format.Field)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.getMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Font.getFont(String, Font)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "NumberFormatException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.MessageFormat.readObject(ObjectInputStream)": {
        "intra_proced": [
            "InvalidObjectException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "OptionalDataException", 
            "OptionalDataException"
        ]
    }, 
    "java.beans.Introspector.processPropertyDescriptors()": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "sun.reflect.generics.repository.ConstructorRepository.getTypeParameters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.getDayOfWeek()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.concurrent.Executors.call()": {
        "intra_proced": [
            "PrivilegedActionException", 
            "PrivilegedActionException"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.clearCache()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Toolkit.getNativeContainer(Component)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.Files.write(Path, Iterable, Charset, OpenOption[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Byte.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.8ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.submit(Runnable, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "RejectedExecutionException", 
            "ForkJoinPool", 
            "RejectedExecutionException", 
            "ForkJoinPool"
        ]
    }, 
    "java.io.PushbackInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.eventEnabled(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.binarySearch(Object[], int, int, Object, Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.color.ICC_ColorSpace.fromCIEXYZ(float[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Arrays.binarySearch0(Object[], int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.KeySetView.iterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Year.isValidMonthDay(MonthDay)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineAliases()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.add(ComponentListener, ComponentListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapFloatBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.casAnnotationType(sun.reflect.annotation.AnnotationType, sun.reflect.annotation.AnnotationType)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.shuffle(List, Random)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.util.HashMap.TreeNode.putTreeVal(HashMap, Node[], int, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.BlockDataOutputStream.writeBytes(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getMinutes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayReader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.toFieldDescriptorString(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.Gregorian.getFixedDate(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.invokerType()": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodType", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "IllegalArgumentException"
        ]
    }, 
    "java.math.BigInteger.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.containsNullValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.enqueueNodeRemovedEvent(Preferences)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getDefaultRepresentationClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.Invokers.checkExactType(Object, Object)": {
        "intra_proced": [
            "Invokers"
        ], 
        "inter_proced": []
    }, 
    "java.util.Vector.ListItr.checkForComodification()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.ManifestEntryVerifier.setEntry(String, JarEntry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.FileSystems.newFileSystem(Path, ClassLoader)": {
        "intra_proced": [
            "NullPointerException", 
            "ProviderNotFoundException"
        ], 
        "inter_proced": [
            "Error"
        ]
    }, 
    "java.util.Spliterators.spliterator(PrimitiveIterator.OfInt, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.toFormatter()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "java.nio.HeapIntBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.drainTo(Collection, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ReentrantLock"
        ], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.writeObject(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "ExceptionInfo", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "IOException", 
            "InternalError"
        ]
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.hasPrevious()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.sorted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.optimize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.insert(int, char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.bitsOrSingle(BitClass, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.AbstractCollection.finishToArray(Object[], Iterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.parameterList()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Normalizer.normalize(CharSequence, Form)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.Certificate.getPublicKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.VM.saveAndRemoveProperties(Properties)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.Introspector.mergePropertyDescriptor(IndexedPropertyDescriptor, PropertyDescriptor)": {
        "intra_proced": [], 
        "inter_proced": [
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException", 
            "IntrospectionException"
        ]
    }, 
    "java.io.SerialCallbackContext.checkAndSetUsed()": {
        "intra_proced": [
            "NotActiveException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Toolkit.getDesktopProperty(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "sun.util.locale.provider.CalendarDataUtility.retrieveFieldValueName(String, int, int, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Ser.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Rectangle2D.getX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.EventDispatchThread.isInterrupted()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.sliceSpliterator(StreamShape, Spliterator, long, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Long.divideUnsigned(long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.nio.ByteBufferAsCharBufferB.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getSerialFields(Class)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException", 
            "NoSuchFieldException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException"
        ]
    }, 
    "java.awt.Window.setIconImages(List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getComment()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.ValueSpliterator.getEstimate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.setMediaToDefault()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.makePositive(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.file.InvalidPathException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.Bits.unaligned()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.Control.CandidateListCache.getDefaultList(String, String, String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractPipeline.makeNodeBuilder(long, IntFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.getChronology()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.getMinute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.SocketChannel.read(ByteBuffer[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isNonOpaqueForMixing()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.union(Rectangle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.CalendarDate.addHours(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.DirectMethodHandle.shouldBeInitialized(MemberName)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.atEndOfMonth()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.logging.Logger.logrb(Level, String, String, String, String, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.im.InputContext.dispose()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.MatchTask.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.insert(int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Locale.getDisplayVariant()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NoSuchElementException"
        ]
    }, 
    "java.util.IdentityHashMap.EntrySpliterator.getFence()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.stackSlots()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.ForEachTransformedMappingTask.addToPendingCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getBufferStrategy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceValuesToLongTask.firstComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.ints(long, int, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.Bits.getBoolean(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogRecord.readObject(ObjectInputStream)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "NullPointerException", 
            "NullPointerException", 
            "NullPointerException", 
            "IllegalStateException", 
            "Error", 
            "EOFException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "EOFException", 
            "OptionalDataException", 
            "OptionalDataException", 
            "StreamCorruptedException"
        ]
    }, 
    "java.nio.IntBuffer.wrap(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.getDecimalStyle()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.format(DateTimeFormatter)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.stream.Nodes.CollectorTask.OfRef.invoke()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getY()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.writeExternal(DataOutput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.PriorityQueue.removeAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.loadLibrary0(Class, String)": {
        "intra_proced": [
            "UnsatisfiedLinkError"
        ], 
        "inter_proced": [
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "UnsatisfiedLinkError", 
            "UnsatisfiedLinkError", 
            "IOException", 
            "ArrayIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashMap.afterNodeInsertion(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseDate.readExternal(DataInput)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.maxBytesPerChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.spi.LocaleNameProvider.getDisplayLanguage(String, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ProfileRGB.tableswitch(i0)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "ProfileDataException"
        ]
    }, 
    "java.util.TreeMap.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_Profile.getProfileFile(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandles.Lookup.hasPrivateAccess()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ForEachOps.ForEachOrderedTask.getPendingCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.checkPermission()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.image.BufferedImage.createGraphics()": {
        "intra_proced": [], 
        "inter_proced": [
            "Error", 
            "Error", 
            "Error", 
            "IllegalAccessException"
        ]
    }, 
    "java.awt.Container.findTraversalRoot()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.format(long, StringBuffer, FieldPosition)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapIntBufferR.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.ints()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.runFinalizersOnExit(boolean)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.Math.tanh(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.addAll(Collection)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.Component.BaselineResizeBehavior.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.DisplayMode.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.stripExtensions()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.compareAndSet(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.VolatileImage.getGraphics()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentMap.merge(Object, Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TextField.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEvent.dispatched()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferRU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.text.bidi.BidiBase.setLine(Bidi, sun.text.bidi.BidiBase, Bidi, sun.text.bidi.BidiBase, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DecimalStyle.getZeroDigit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapLongBuffer.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.getFirst()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.stream.FindOps.FindTask.getLocalResult()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.DescendingSubMapKeyIterator.removeDescending()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Locale.getDisplayLanguage()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.beans.EventSetDescriptor.setClass0(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.guardWithCatch(MethodHandle, Class, MethodHandle, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "MethodHandleStatics", 
            "MethodType", 
            "WrongMethodTypeException", 
            "AssertionError"
        ]
    }, 
    "java.time.chrono.AbstractChronology.resolveYAD(Map, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive.acquirePermits(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.forEachKey(long, Consumer)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.toTitleCase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedList.set(Object)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.newSetFromMap(Map)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.CubicCurve2D.getFlatness(double[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Color.toRGB(float, float, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getParent()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.stream.ForEachOps.onCompletion(CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.Math.max(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.CollationKey.compareTo(CollationKey)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceMappingsToDoubleTask.fork()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.replace(Object, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.getFixedDate(sun.util.calendar.BaseCalendar, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.nio.cs.StreamDecoder.forInputStreamReader(InputStream, Object, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.entries()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamSpliterators.IntWrappingSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.lookupswitch(i0)": {
        "intra_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "NullPointerException", 
            "Pattern", 
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.RegularEnumSet.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.completeExceptionally(Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.lang.ProcessImpl.start(String[], Map, String, Redirect[], boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "IllegalStateException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError"
        ]
    }, 
    "java.util.Collections.CheckedMap.badValueMsg(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.overwrittenEntry(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.MatchOps.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractTask.doLeaf()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.getFieldOffset(String, Class)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.fine(Supplier)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.verifyConstants()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "NoSuchFieldException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IOException"
        ]
    }, 
    "java.util.stream.AbstractShortCircuitTask.compute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayReader.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putInt(Object, long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.AbstractChronology.resolveYMAA(Map, ResolverStyle)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.awt.image.DataBuffer.getOffsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "javax.swing.Timer.start()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.lookupswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "java.util.stream.ReferencePipeline.sorted(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getFloatL(ByteBuffer, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Security.getProperty(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.invoke.MemberName.initResolved(boolean)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Container.applyComponentOrientation(ComponentOrientation)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.ColorModel.isLinearGRAYspace(ColorSpace)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistChronology.range(ChronoField)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.DelayQueue.put(Delayed)": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock", 
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.MethodHandle.spreadArrayChecks(Class, int)": {
        "intra_proced": [
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ], 
        "inter_proced": []
    }, 
    "java.awt.Window.constructComponentName()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.exportEntry(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.setAccessible(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "SecurityException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.stream.MatchOps.makeChild(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.hasBaseCharacter(Matcher, int, CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.getClassLoadingLock(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.TreeMap.NavigableSubMap.inRange(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.pollTask()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.2.compare(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLStreamHandler.setURL(URL, String, String, int, String, String, String, String, String)": {
        "intra_proced": [
            "SecurityException"
        ], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainDatagramSocketImpl.nativeConnectDisabled()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.access$1000(EnumMap, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.GregorianCalendar.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError"
        ]
    }, 
    "java.lang.invoke.MethodHandleImpl.maybeStopCounting(Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "InternalError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.awt.image.ColorModel.getBlue(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.NavigableSubMap.descendingKeyIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.Parser.parseHierarchical(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.Inflater.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.IntBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleImpl.buildArrayProducer(Class)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "ClassCastException"
        ]
    }, 
    "java.lang.invoke.MethodType.hasWrappers()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "sun.util.locale.LanguageTag.canonicalizeScript(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaEntry.getStatus(boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getChars(int, int, char[], int)": {
        "intra_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.security.Provider.implClear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.intValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeParseContext.toUnresolved()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.applet.Applet.play(URL, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.Bidi.reorderVisually(byte[], int, Object[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.TrayIcon.getMouseMotionListeners()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "javax.swing.JComponent.isOpaque()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableNavigableMap(NavigableMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.ofBest(ChronoLocalDateTimeImpl, ZoneId, ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.text.AttributedString.addAttribute(Attribute, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ProfileGray.getGamma()": {
        "intra_proced": [], 
        "inter_proced": [
            "ProfileDataException"
        ]
    }, 
    "java.util.HashMap.KeyIterator.nextNode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.hashCode(float[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException", 
            "IOException"
        ]
    }, 
    "java.text.Collator.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.CaretPolicy.getStrongCaret(TextHitInfo, TextHitInfo, TextLayout)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.onExceptionalCompletion(Throwable, CountedCompleter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRulesProvider.refresh()": {
        "intra_proced": [], 
        "inter_proced": [
            "ReentrantLock"
        ]
    }, 
    "java.lang.reflect.Method.getFactory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Array.multiNewArray(Class, int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.tableswitch($i1)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.2ReducingSink.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Hashtable.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.group0()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException"
        ]
    }, 
    "java.lang.ReflectiveOperationException.initCause(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.invoke.util.Wrapper.primitiveSimpleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.helpTransfer(ConcurrentHashMap.Node[], ConcurrentHashMap.Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.FutureTask.setException(Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.plusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.ProcessBuilder.redirectInput(ProcessBuilder.Redirect)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Toolkit.prepareImage(Image, int, int, ImageObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.GraphicAttribute.getAdvance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.isAuthorized()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ThaiBuddhistDate.toEpochDay()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.ToArrayTask.propagateCompletion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.WeakHashMap.Entry.getKey()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toString(short[])": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.ChoiceFormat.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReferencePipeline.min(Comparator)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceKeysToLongTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedNavigableMap.tailMap(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetTime.ofInstant(Instant, ZoneId)": {
        "intra_proced": [
            "DateTimeException"
        ], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.KeyboardFocusManager.retargetFocusGained(FocusEvent)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "NoSuchElementException", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Toolkit.getPrintJob(Frame, String, JobAttributes, PageAttributes)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.awt.Container.clearCurrentFocusCycleRootOnHide()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.MapReduceEntriesToDoubleTask.advance()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.advanceToFirstFont(AttributedCharacterIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CopyOnWriteArrayList.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.GeneralPath.append(Shape, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.HorizWS.complement()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.util.ManifestEntryVerifier.update(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.CharArrayReader.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Formatter.FormatSpecifier.printDateTime(Object, Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.putFloat(long, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeTextProvider.lookupswitch(b0)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Inet6Address.access$000(byte[], NetworkInterface)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException"
        ]
    }, 
    "java.time.chrono.ThaiBuddhistChronology.date(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.DefaultInterface.chooseDefaultInterface()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getResource(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.awt.color.ICC_Profile.intToBigEndian(int, byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.toLocaleString()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.GregorianCalendar.getWeekYear()": {
        "intra_proced": [], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.StringBuffer.codePointBefore(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.EventQueue.createSecondaryLoop(Conditional, EventFilter, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.PrivilegedThreadFactory.1.1.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.AccessControlContext.getNextPC(AccessControlContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.BufferCapabilities.getBackBufferCapabilities()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.getScientificInstance(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.charCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getHostName(boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "NullPointerException"
        ]
    }, 
    "javax.xml.parsers.DocumentBuilder.setErrorHandler(org.xml.sax.ErrorHandler)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.previous(DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.image.ColorModel.hasAlpha()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.AttributeValues.merge(sun.font.AttributeValues)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.ScheduledFutureTask.cancel(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Shutdown.runHooks()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLayout.boundingShape(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.OffsetDateTime.minusMonths(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.reshape(int, int, int, int)": {
        "intra_proced": [
            "Component"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "AssertionError"
        ]
    }, 
    "java.nio.ByteBufferAsDoubleBufferB.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.minus(TemporalAmount)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.lookupContentHandlerClassFor(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "ClassNotFoundException", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "NoSuchElementException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferB.checkIndex(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CheckedNavigableSet.headSet(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.getValue(DateTimePrintContext, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.DataInputStream.readDouble()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "EOFException", 
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.syncSpi()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.CopiesList.stream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Properties.loadConvert(char[], int, int, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Principal.implies(Subject)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.1.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Menu.getItemCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.toArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DoubleBuffer.put(DoubleBuffer)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "ReadOnlyBufferException", 
            "BufferOverflowException"
        ], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatter.withLocale(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isAscii(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SliceOps.opEvaluateParallelLazy(PipelineHelper, Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectOutputStream.doublesToBytes(double[], int, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.SimpleDateFormat.toLocalizedPattern()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DirectDoubleBufferU.put(double[], int, int)": {
        "intra_proced": [
            "AssertionError", 
            "BufferOverflowException"
        ], 
        "inter_proced": [
            "Error", 
            "BufferOverflowException"
        ]
    }, 
    "java.net.MulticastSocket.setReuseAddress(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.LogManager.LoggerContext.ensureAllDefaultLoggers(Logger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinTask.cancelIgnoringExceptions(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.InvokerBytecodeGenerator.arrayTypeCode(sun.invoke.util.Wrapper)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Component.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.minusNanos(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.asArray(IntFunction)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalArgumentException", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetHead(Node)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineLoad(KeyStore.LoadStoreParameter)": {
        "intra_proced": [
            "NoSuchAlgorithmException", 
            "NoSuchAlgorithmException", 
            "NoSuchAlgorithmException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.binarySearch(List, Object, Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.WaitDispatchSupport.enter()": {
        "intra_proced": [], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException", 
            "AssertionError", 
            "NoSuchElementException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.logging.Level.getLocalizedLevelName()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "MissingResourceException"
        ]
    }, 
    "java.nio.Bits.putChar(ByteBuffer, int, char, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.GraphicsEnvironment.checkHeadless()": {
        "intra_proced": [
            "HeadlessException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.JobAttributes.getMaxPage()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharBounds(int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "java.awt.image.SinglePixelPackedSampleModel.createSubsetSampleModel(int[])": {
        "intra_proced": [
            "RasterFormatException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.io.BufferedReader.reset()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Short.toString(short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.assertMemberIsConsistent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isOpaque()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.font.TextLine.getCharType(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.StringEnvironment.toEnvironmentBlock(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.net.SocketPermissionCollection.readObject(ObjectInputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException"
        ]
    }, 
    "java.awt.dnd.DragSource.createDefaultDragGestureRecognizer(Component, int, DragGestureListener)": {
        "intra_proced": [], 
        "inter_proced": [
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException"
        ]
    }, 
    "java.lang.Class.Atomic.casAnnotationData(Class, AnnotationData, AnnotationData)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSource.load(String)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "InternalError", 
            "InternalError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "AWTError", 
            "IllegalAccessException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.TreeMap.key(Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.getModalBlocker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData.isOtherUppercase(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.toPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.isIdentifierIgnorable(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.BreakIterator.preceding(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeSet.subSet(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.findTreeNode(int, Object, Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.security.x509.X509CertImpl.getIssuerX500Principal(X509Certificate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MemberName.referenceKindIsConsistent()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.jar.Attributes.getValue(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.SimpleMethodHandle.copyWithExtendI(MethodType, LambdaForm, int)": {
        "intra_proced": [
            "MethodHandleStatics"
        ], 
        "inter_proced": [
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.helpStealer(WorkQueue, ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZonedDateTime.resolveLocal(LocalDateTime)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.addToCache(ClassValue, Entry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.DatagramSocket.setBroadcast(boolean)": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.awt.font.NumericShaper.getHighBit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.isRemoveNotifyNeeded(Component, Container, Container)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.CountedCompleter.tryComplete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.Loop.study(TreeInfo)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.toString()": {
        "intra_proced": [
            "LinkedBlockingQueue"
        ], 
        "inter_proced": []
    }, 
    "java.awt.dnd.DragSourceEvent.getDragSourceContext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTKeyStroke.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.String.compareTo(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.ZoneId.toTemporal()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ThreadLocalRandom.nextDouble(double)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.geom.AffineTransform.transform(Point2D[], int, Point2D[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalAdjusters.dayOfWeekInMonth(int, DayOfWeek)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DigitList.set(boolean, String, boolean, boolean, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Locale.getISO3Language()": {
        "intra_proced": [
            "MissingResourceException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.AbstractStringBuilder.ensureCapacityInternal(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "OutOfMemoryError"
        ]
    }, 
    "java.io.ObjectStreamField.getClassSignature(Class)": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.math.BigInteger.toString(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.time.chrono.JapaneseChronology.dateEpochDay(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.ByteBufferAsLongBufferRL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getByAddress(String, byte[])": {
        "intra_proced": [
            "UnknownHostException"
        ], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.withDayOfMonth(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.io.ExpiringCache.1.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Container.remove(Component)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.HeapFloatBuffer.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.verifySubclass()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.awt.Robot.checkValidRect(Rectangle)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.util.AbstractSequentialList.listIterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.replaceWith(byte[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IndexOutOfBoundsException", 
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError", 
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.convertFromFraction(BigDecimal)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException", 
            "ArithmeticException", 
            "IllegalArgumentException", 
            "ArithmeticException", 
            "ArithmeticException", 
            "AssertionError", 
            "ArithmeticException"
        ]
    }, 
    "java.util.concurrent.ForkJoinPool.WorkQueue.poll()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.atZone(ZoneId)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.JapaneseImperialCalendar.getYearOffsetInMillis(sun.util.calendar.CalendarDate)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Policy.getInstance(String, Policy.Parameters, Provider)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.image.Raster.getMinX()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.misc.Unsafe.getDouble(Object, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.chars()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.invalidateIfValid()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.min(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.BlockDataInputStream.readByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Label.tableswitch($i0)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.logging.Logger.exiting(String, String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.tryExternalUnpush(ForkJoinTask)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectFloatBufferU.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.MemoryImageSource.newPixels(byte[], ColorModel, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logging.getLoggerNames()": {
        "intra_proced": [], 
        "inter_proced": [
            "ConcurrentModificationException", 
            "ConcurrentModificationException", 
            "IndexOutOfBoundsException", 
            "IndexOutOfBoundsException", 
            "UnsupportedOperationException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.bindArgumentJ(BoundMethodHandle, int, long)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "MethodHandleStatics", 
            "MethodHandleStatics", 
            "AssertionError"
        ]
    }, 
    "java.util.Date.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.event.InvocationEvent.dispatch()": {
        "intra_proced": [
            "InvocationEvent"
        ], 
        "inter_proced": []
    }, 
    "java.beans.PropertyDescriptor.getWeakReference(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.TemporalQueries.lambda$static$94(TemporalAccessor)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException", 
            "DateTimeException", 
            "NullPointerException"
        ]
    }, 
    "java.nio.HeapLongBufferR.slice()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDateTime.getMinute()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.DoublePipeline.lambda$sum$184(double[], double[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getByInetAddress0(InetAddress)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.SpinedNodeBuilder.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.AbstractPreferences.exportSubtree(OutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.util.Collections.set(int, Object)": {
        "intra_proced": [
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "java.text.NumberFormat.setGroupingUsed(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectIntBufferS.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandles.Lookup.checkSymbolicClass(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferS.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.getLong(ByteBuffer, int, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.getMinimumSize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahChronology.date(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.minusYears(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparators.thenComparing(Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.contains(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormatSymbols.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertPath.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.MessageDigest.engineReset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.Bits.reserveMemory(long, int)": {
        "intra_proced": [
            "OutOfMemoryError"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.setCursorImpl(Cursor)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.UNIXProcess.initStreams(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.PageAttributes.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.lang.Integer.rotateLeft(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.EnumMap.ValueIterator.hasNext()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectShortBufferRS.asReadOnlyBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.StreamOpFlag.build()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.IdentityHashMap.remove(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.lambda$setValue$41(DateTimeParseContext, long, int, int, Chronology)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ProcessEnvironment.Variable.compareTo(Variable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DateFormatSymbols.getAvailableLocales()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntry(long, byte[], boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.getTextPlainUnicodeFlavor()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.MediaTracker.addImageImpl(Image, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getField0(String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.Arrays.parallelPrefix(long[], int, int, LongBinaryOperator)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.defCtype(String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StrictMath.max(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsCharBufferB.put(int, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isWord(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectLongBufferRU.slice()": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getEntryCSize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Rectangle.setBounds(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData0E.isIdeographic(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Period.getDays()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.compute(Object, BiFunction)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.stream.StreamSpliterators.WrappingSpliterator.wrap(Spliterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.KeyStoreSpi.engineSetEntry(String, Entry, ProtectionParameter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.zone.ZoneRules.of(ZoneOffset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Graphics.create(int, int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.DecimalFormat.getNegativeSuffixFieldPositions()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.prefs.AbstractPreferences.putFloat(String, float)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.jar.JarFile.nextElement()": {
        "intra_proced": [
            "NoSuchElementException", 
            "NoSuchElementException", 
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.externalHelpComplete(CountedCompleter, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.ComputedDayOfField.resolve(Map, TemporalAccessor, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "AssertionError", 
            "AssertionError", 
            "NullPointerException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NoSuchElementException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.text.DateFormat.getTimeInstance(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.SimpleTimeZone.unpackTimes(int[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.PeekInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.createBufferStrategy(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.color.ICC_ColorSpace.getNumComponents()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.util.calendar.BaseCalendar.Date.getHours()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Objects.toString(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.StringCharBuffer.duplicate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.util.concurrent.ForkJoinWorkerThread.start()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Window.applyResourceBundle(ResourceBundle)": {
        "intra_proced": [], 
        "inter_proced": [
            "MissingResourceException"
        ]
    }, 
    "java.awt.font.TransformAttribute.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getFont()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.io.DataOutputStream.incCount(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.poll(long, TimeUnit)": {
        "intra_proced": [
            "InterruptedException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "java.nio.ByteBuffer.compare(byte, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapDoubleBufferR.limit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.font.Font2D.getFamilyName(Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.LocalDate.getProlepticMonth()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.basicTypesOrd(LambdaForm.BasicType[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.invoker()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.addNotify()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalStateException"
        ]
    }, 
    "java.util.IntSummaryStatistics.getMin()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ScrollPane.validate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.ValueSpliterator.trySplit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.datatransfer.DataFlavor.writeExternal(ObjectOutput)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.ArrayList.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringCoding.StringDecoder.decode(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.now(Clock)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.time.chrono.JapaneseDate.atTime(LocalTime)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Duration.create(long, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.getReuseAddress()": {
        "intra_proced": [
            "SocketException"
        ], 
        "inter_proced": [
            "SocketException"
        ]
    }, 
    "java.nio.file.Files.newDirectoryStream(Path, DirectoryStream.Filter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectByteBuffer.putInt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.lookupswitch(i28)": {
        "intra_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.print.Paper.getHeight()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Cursor.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.SecurityManager.checkSystemClipboardAccess()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.util.stream.DistinctOps.lambda$opEvaluateParallel$210(AtomicBoolean, ConcurrentHashMap, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.nio.DirectIntBufferS.capacity()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.beans.MethodDescriptor.getClass0()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.locks.ReentrantLock.Sync.nonfairTryAcquire(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertificateFactory.getCertPathEncodings()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.OfInt.chunkFor(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.parent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.JarVerifier.getCerts(JarFile, JarEntry)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException", 
            "NullPointerException", 
            "JarException"
        ]
    }, 
    "java.beans.VetoableChangeSupport.VetoableChangeListenerMap.remove(String, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.ASCII.isHexDigit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.HashMap.TreeNode.checkInvariants(TreeNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.InternalNodeSpliterator.OfRef.findNextLeafNode(Deque)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.Provider.implPutIfAbsent(Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.PrivilegedActionException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Scrollbar.getTreeLock()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ResourceBundle.CacheKey.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.prefs.Preferences.keys()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.lambda$groupingByConcurrent$163(Function, Supplier, BiConsumer, ConcurrentMap, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.AccessibleObject.checkAccess(Class, Class, Object, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.init(Class, Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.geom.Point2D.clone()": {
        "intra_proced": [
            "InternalError"
        ], 
        "inter_proced": []
    }, 
    "java.util.Arrays.fill(Object[], int, int, Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.io.File.TempDirectory.location()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.rint(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.assign(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.temporal.WeekFields.resolve(Map, TemporalAccessor, ResolverStyle)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.util.Arrays.fill(double[], double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.linkMethod(Class, int, Class, String, Object, Object[])": {
        "intra_proced": [], 
        "inter_proced": [
            "LinkageError", 
            "LinkageError", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.OffsetDateTime.toLocalDate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.YearMonth.withYear(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.CharacterDataLatin1.getNumericValue(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetAddress.getHostFromNameService(InetAddress, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnknownHostException", 
            "InetAddress", 
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "java.lang.ClassValue.bumpVersion()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Insets.equals(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(Runnable, long, long, TimeUnit)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "AbstractMethodError"
        ]
    }, 
    "sun.util.logging.PlatformLogger.fine(String, Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.setRequestMethod(String)": {
        "intra_proced": [
            "ProtocolException", 
            "ProtocolException"
        ], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "NullPointerException", 
            "AccessControlException"
        ]
    }, 
    "java.lang.ConditionalSpecialCasing.toUpperCaseEx(String, int, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.stream.DoublePipeline.sum()": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.util.Arrays.parallelSort(float[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "java.awt.Font.isItalic()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.UnknownFormatFlagsException.getMessage()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.chrono.ChronoZonedDateTimeImpl.toString()": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.nio.DoubleBuffer.checkBounds(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.LinkedBlockingQueue.next()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.CharacterData01.isJavaIdentifierStart(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ExpiringCache.cleanup()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.copyValueOf(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.HijrahDate.resolvePreviousValid(int, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.lang.ClassValue.ClassValueMap.changeEntry(ClassValue, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ForkJoinPool.execLocalTasks()": {
        "intra_proced": [], 
        "inter_proced": [
            "RuntimeException", 
            "ReentrantLock"
        ]
    }, 
    "java.util.OptionalDouble.empty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.List.getItemImpl(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ArrayIndexOutOfBoundsException"
        ]
    }, 
    "sun.font.LayoutPathImpl.SegmentPathBuilder.lineTo(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.AbstractStringBuilder.append(StringBuffer)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "OutOfMemoryError"
        ]
    }, 
    "java.awt.dnd.DragSourceContext.writeObject(ObjectOutputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "NotActiveException", 
            "NotActiveException", 
            "ClassCastException", 
            "ExceptionInfo", 
            "NullPointerException", 
            "NullPointerException", 
            "NotSerializableException", 
            "NotSerializableException", 
            "InternalError", 
            "InternalError", 
            "InternalError", 
            "UnsupportedOperationException", 
            "InternalError", 
            "IOException"
        ]
    }, 
    "java.time.chrono.MinguoChronology.dateYearDay(Era, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "ClassCastException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException", 
            "DateTimeException"
        ]
    }, 
    "java.lang.CharacterData02.isIdentifierIgnorable(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleStatics.newIllegalArgumentException(String, Object, Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.get(String, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.BitClass.add(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.Dialog.isResizable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.ConcurrentHashMap.containsAll(Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.shouldSpin(TransferStack.SNode)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.image.ColorModel.getRed(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.atomic.AtomicInteger.lazySet(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodHandleNatives.refKindIsField(byte)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": []
    }, 
    "java.net.AbstractPlainSocketImpl.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.ModalEventFilter.disable()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.Executors.DelegatedExecutorService.shutdown()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Short.compareTo(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassValue.ClassValueMap.removeEntry(ClassValue)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.MediaTracker.waitForID(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Channels.ReadableByteChannelImpl.end(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.ChronoLocalDateImpl.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.JapaneseImperialCalendar.setTimeZone(TimeZone)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.SpinedBuffer.newArrayArray(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)": {
        "intra_proced": [
            "CoderMalfunctionError", 
            "CoderMalfunctionError", 
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalStateException", 
            "BufferOverflowException"
        ]
    }, 
    "java.nio.charset.Charset.providers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.ReduceOps.7ReducingSink.combine(7ReducingSink)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.LinkedHashMap.next()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.security.cert.CertPath.getType()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.NetworkInterface.getInetAddresses()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.DirectDoubleBufferU.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Random.internalNextDouble(double, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.awt.AWTEventMulticaster.addInternal(EventListener, EventListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.isDirect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipEntry.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Calendar.createCalendar(TimeZone, Locale)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.awt.Window.validateUnconditionally()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.Instant.toEpochMilli()": {
        "intra_proced": [], 
        "inter_proced": [
            "ArithmeticException"
        ]
    }, 
    "java.awt.geom.CubicCurve2D.getFlatnessSq()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.logging.Logger.doLog(LogRecord, String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException", 
            "Error"
        ]
    }, 
    "java.time.chrono.ChronoLocalDateTimeImpl.plus(long, TemporalUnit)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ClassLoader.findBootstrapClassOrNull(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.time.LocalDate.adjustInto(Temporal)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.invoke.MethodType.asSpreaderType(Class, int)": {
        "intra_proced": [
            "AssertionError", 
            "AssertionError"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "ArrayIndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException", 
            "MethodHandleStatics"
        ]
    }, 
    "java.time.format.DateTimeFormatterBuilder.formatter(Locale, Chronology)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "NullPointerException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "StringIndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.regex.Pattern.tableswitch(i0)": {
        "intra_proced": [
            "Pattern", 
            "Pattern", 
            "Pattern"
        ], 
        "inter_proced": [
            "Pattern", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "Pattern", 
            "Pattern", 
            "Pattern", 
            "IllegalArgumentException", 
            "Pattern", 
            "Pattern", 
            "Pattern"
        ]
    }, 
    "java.util.concurrent.ScheduledThreadPoolExecutor.DelayedWorkQueue.finishPoll(RunnableScheduledFuture)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.PrintWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.invoke.LambdaFormEditor.collectArgumentsForm(int, MethodType)": {
        "intra_proced": [
            "AssertionError"
        ], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.DirectMethodHandle.ftypeKind(Class)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBufferAsIntBufferRL.markValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.concurrent.SynchronousQueue.TransferStack.awaitFulfill(SNode, boolean, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Collectors.groupingBy(Function, Collector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.DayOfWeek.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Vector.subList(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.IntPipeline.forEachWithCancel(Spliterator, Sink)": {
        "intra_proced": [], 
        "inter_proced": [
            "UnsupportedOperationException"
        ]
    }, 
    "java.awt.Component.processKeyEvent(KeyEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Comparators.valueOf(String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "InternalError", 
            "InternalError", 
            "IllegalArgumentException"
        ]
    }, 
    "java.util.Date.setMinutes(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "AssertionError", 
            "AssertionError"
        ]
    }, 
    "java.lang.invoke.LambdaForm.NamedFunction.member()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Modifier.constructorModifiers()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.Nodes.DoubleArrayNode.spliterator()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.chrono.JapaneseChronology.getCurrentEra()": {
        "intra_proced": [], 
        "inter_proced": [
            "DateTimeException"
        ]
    }, 
    "java.net.URLClassLoader.definePackage(String, String, String, String, String, String, String, URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "sun.awt.image.SurfaceManager.getCapabilities(GraphicsConfiguration)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.onUnmappableCharacter(CodingErrorAction)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.awt.EventQueue.postEventPrivate(AWTEvent)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.ResolverStyle.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.HeapByteBuffer.nextGetIndex()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.time.format.DateTimeFormatterBuilder.PrefixTree.newTree(Set, DateTimeParseContext)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.stream.AbstractShortCircuitTask.shortCircuit(Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.zip.ZipFile.getCommentBytes(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.InetSocketAddress.access$800(InetSocketAddress.InetSocketAddressHolder)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.LongBuffer.get(long[])": {
        "intra_proced": [], 
        "inter_proced": [
            "BufferUnderflowException"
        ]
    }, 
    "java.awt.GraphicsEnvironment.createGE()": {
        "intra_proced": [
            "Error", 
            "Error", 
            "Error"
        ], 
        "inter_proced": [
            "IllegalAccessException", 
            "NoSuchMethodException", 
            "IllegalArgumentException", 
            "IllegalStateException", 
            "Error", 
            "NullPointerException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException", 
            "StringIndexOutOfBoundsException"
        ]
    }, 
    "java.util.HashSet.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.jar.Manifest.FastInputStream.peek()": {
        "intra_proced": [], 
        "inter_proced": []
    }
}