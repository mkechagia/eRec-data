{
    "org.apache.commons.collections.comparators.ComparatorChain.setComparator(int, java.util.Comparator)": {
        "args": [
            "int", 
            "java.util.Comparator"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "org.apache.commons.collections.map.DefaultedMap.decorate(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.synchronizedSortedBag(SortedBag)": {
        "args": [
            "SortedBag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getLong(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.pop()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.list.LazyList.decorate(java.util.List, Factory)": {
        "args": [
            "java.util.List", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.retainAll(Bag)": {
        "args": [
            "Bag"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.UniquePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.getCount(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.interpolateHelper(java.lang.String, java.util.List)": {
        "args": [
            "java.lang.String", 
            "java.util.List"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.typedSortedBag(SortedBag, java.lang.Class)": {
        "args": [
            "SortedBag", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.setInclude(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.remove(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.invokerTransformer(java.lang.String, java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.String", 
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMap.lastKey()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.setPreviousNode(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OnePredicate.getInstance(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.DefaultedMap.decorate(java.util.Map, Factory)": {
        "args": [
            "java.util.Map", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedSortedBag.decorate(SortedBag)": {
        "args": [
            "SortedBag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.transformedSortedBag(SortedBag, Transformer)": {
        "args": [
            "SortedBag", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.ifClosure(Predicate, Closure, Closure)": {
        "args": [
            "Predicate", 
            "Closure", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addNodeBefore(Node, java.lang.Object)": {
        "args": [
            "Node", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.unmodifiableMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.onePredicate(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractSortedBagDecorator.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.typedMap(java.util.Map, java.lang.Class, java.lang.Class)": {
        "args": [
            "java.util.Map", 
            "java.lang.Class", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractSortedBidiMapDecorator.getSortedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.switchMapTransformer(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getType(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.percolateDownMaxHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.checkForComod()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.emptyOrderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.transformedSortedSet(java.util.SortedSet, Transformer)": {
        "args": [
            "java.util.SortedSet", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.processRemovedLRU(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LinkedMap.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SynchronizedPriorityQueue.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMap.orderedMapIterator()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.subSet(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.getList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntry.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.ExtendedProperties.testBoolean(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.unmodifiableSortedBag(SortedBag)": {
        "args": [
            "SortedBag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NOPTransformer.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SortedBag.first()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.getMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.unmodifiableList(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException", 
            "BufferOverflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformedPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getLongValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedSortedBag.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CaseInsensitiveMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.WhileClosure.getPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.inverseBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.createDelegateMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.logWarn(java.lang.Exception)": {
        "args": [
            "java.lang.Exception"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.setFast(boolean)": {
        "args": [
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.chainedIterator(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SynchronizedPriorityQueue.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getIntValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.asIterator(java.util.Enumeration, java.util.Collection)": {
        "args": [
            "java.util.Enumeration", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NonePredicate.getInstance(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.union(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ForClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.put(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FunctorException.printStackTrace()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.decorate(java.util.SortedMap, Transformer)": {
        "args": [
            "java.util.SortedMap", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstantiateTransformer.getInstance(java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException", 
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapIterator.setValue(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.getPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.getArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LinkedMap.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.inverseOrderedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException", 
            "BufferOverflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferOverflowException.getCause()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.collect(java.util.Iterator, Transformer, java.util.Collection)": {
        "args": [
            "java.util.Iterator", 
            "Transformer", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.getSortedMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.LazyList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getFloat(java.util.Map, java.lang.Object, java.lang.Float)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Float"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ConstantFactory.getInstance(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.asEnumeration(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.synchronizedMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.KeyValue.getValue()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)": {
        "args": [
            "java.io.ObjectOutputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.map.CompositeMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.nodeInserted(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.decorate(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.valueList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedSortedBag.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.selectRejected(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.unmodifiableListIterator(java.util.ListIterator)": {
        "args": [
            "java.util.ListIterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.getMapEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.unmodifiableSortedMap(java.util.SortedMap)": {
        "args": [
            "java.util.SortedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IdentityPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.removeEntry(HashEntry, int, HashEntry)": {
        "args": [
            "HashEntry", 
            "int", 
            "HashEntry"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.switchClosure(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.TransformedBuffer.getBuffer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.headSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstanceofPredicate.getType()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.createValuesIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractBidiMapDecorator.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.peek()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.Bag.add(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.putAll(java.lang.Object, java.util.Collection)": {
        "args": [
            "java.lang.Object", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.toReference(int, java.lang.Object, int)": {
        "args": [
            "int", 
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.toArray(java.util.Iterator, java.lang.Class)": {
        "args": [
            "java.util.Iterator", 
            "java.lang.Class"
        ], 
        "@throws": [
            "NullPointerException", 
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.SynchronizedBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.singletonListIterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyIterator.getIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.whileClosure(Predicate, Closure)": {
        "args": [
            "Predicate", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.createKeySetIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.instantiateTransformer(java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.exceptionPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.setValue(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getInclude()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.decorate(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.percolateUpMinHeap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.getEntry(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractBagDecorator.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.isEqualList(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.createEntry(HashEntry, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.TransformedCollection.decorate(java.util.Collection, Transformer)": {
        "args": [
            "java.util.Collection", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.setKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.grow()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.isEmpty(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InvokerTransformer.getInstance(java.lang.String, java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.String", 
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.doReadObject(java.io.ObjectInputStream)": {
        "args": [
            "java.io.ObjectInputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.isEqualKey(HashEntry, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.add(CompositeCollection, java.util.Collection[], java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeCollection", 
            "java.util.Collection[]", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.toList(java.util.Iterator, int)": {
        "args": [
            "java.util.Iterator", 
            "int"
        ], 
        "@throws": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.headSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.keyIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getMap(java.util.Map, java.lang.Object, java.util.Map)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstantiateFactory.create()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.DefaultKeyValue.toMapEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.forAllDo(java.util.Collection, Closure)": {
        "args": [
            "java.util.Collection", 
            "Closure"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.setMaximumCacheSize(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.decorate(java.util.SortedMap, Predicate, Predicate)": {
        "args": [
            "java.util.SortedMap", 
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.sequence()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.PrototypeFactory.getInstance(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.transformedSet(java.util.Set, Transformer)": {
        "args": [
            "java.util.Set", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.PredicatedCollection.decorate(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractKeyValue.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayListIterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.exists(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.chainedComparator(java.util.Comparator[])": {
        "args": [
            "java.util.Comparator[]"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.createSubListIterator(LinkedSubList)": {
        "args": [
            "LinkedSubList"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.decorate(java.util.SortedMap, Transformer, Transformer)": {
        "args": [
            "java.util.SortedMap", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.addEntry(HashEntry, int)": {
        "args": [
            "HashEntry", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.addAll(java.util.Collection, java.util.Enumeration)": {
        "args": [
            "java.util.Collection", 
            "java.util.Enumeration"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OnePredicate.getInstance(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TreeBag.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.decorate(java.util.SortedSet)": {
        "args": [
            "java.util.SortedSet"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.setMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IfClosure.getInstance(Predicate, Closure, Closure)": {
        "args": [
            "Predicate", 
            "Closure", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getShortValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractSortedBidiMapDecorator.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.PredicateTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.union(java.util.List, java.util.List)": {
        "args": [
            "java.util.List", 
            "java.util.List"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.empty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getWriteMethod(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getProperties(java.lang.String, java.util.Properties)": {
        "args": [
            "java.lang.String", 
            "java.util.Properties"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [
            "CloneNotSupportedException"
        ], 
        "throws": [
            "CloneNotSupportedException"
        ]
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.decorateUsing(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.interpolate(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.setListIterator(java.util.ListIterator)": {
        "args": [
            "java.util.ListIterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ReverseComparator.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.subtract(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.DefaultedMap.decorate(java.util.Map, Transformer)": {
        "args": [
            "java.util.Map", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.countMatches(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformerPredicate.getTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.decorate(java.util.Set, java.util.List)": {
        "args": [
            "java.util.Set", 
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getShort(java.lang.String, java.lang.Short)": {
        "args": [
            "java.lang.String", 
            "java.lang.Short"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractSortedBagDecorator.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.getCount(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.isLocked()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.TransformedCollection.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.isSetValueChecking()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.previousEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NOPClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstantiateFactory.getInstance(java.lang.Class, java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.Class", 
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getByte(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.nullHighComparator(java.util.Comparator)": {
        "args": [
            "java.util.Comparator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.init()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IdentityPredicate.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SynchronizedPriorityQueue.pop()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.removeFirst()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.predicatedBag(Bag, Predicate)": {
        "args": [
            "Bag", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparableComparator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.removeMapping(HashEntry, int, HashEntry)": {
        "args": [
            "HashEntry", 
            "int", 
            "HashEntry"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.setIterator(int, java.util.Iterator)": {
        "args": [
            "int", 
            "java.util.Iterator"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.transformedComparator(java.util.Comparator, Transformer)": {
        "args": [
            "java.util.Comparator", 
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.compare(java.lang.Boolean, java.lang.Boolean)": {
        "args": [
            "java.lang.Boolean", 
            "java.lang.Boolean"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getShort(java.lang.String, short)": {
        "args": [
            "java.lang.String", 
            "short"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.chainedComparator(java.util.Comparator, java.util.Comparator)": {
        "args": [
            "java.util.Comparator", 
            "java.util.Comparator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnboundedFifoBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.decorateTransform(java.util.Map, Transformer, Transformer)": {
        "args": [
            "java.util.Map", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.put(java.lang.Object, java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.exceptionClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.init()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SortedBag.last()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.getList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.switchTransformer(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.switchTransformer(Predicate[], Transformer[], Transformer)": {
        "args": [
            "Predicate[]", 
            "Transformer[]", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.clear()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedTransformer.getTransformers()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedSortedBag.getSortedBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IfClosure.getFalseClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.broadcastListableChanged(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.createValuesIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EnumerationIterator.setEnumeration(java.util.Enumeration)": {
        "args": [
            "java.util.Enumeration"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.percolateDownMaxHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AllPredicate.getInstance(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsFalsePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.predicatedSortedMap(java.util.SortedMap, Predicate, Predicate)": {
        "args": [
            "java.util.SortedMap", 
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.GrowthList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformerClosure.getTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.addProperty(java.lang.String, java.lang.Object)": {
        "args": [
            "java.lang.String", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ReferenceIdentityMap.isEqualKey(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.peek(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "EmptyStackException"
        ], 
        "throws": [
            "EmptyStackException"
        ]
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.listableInserted(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.addMapping(int, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "int", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.remove(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.invalidate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.addAsEqual(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchClosure.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedMap.maxSize()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getBoolean(java.lang.String, java.lang.Boolean)": {
        "args": [
            "java.lang.String", 
            "java.lang.Boolean"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.registerCursor(Cursor)": {
        "args": [
            "Cursor"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparableComparator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getLongValue(java.util.Map, java.lang.Object, long)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "long"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.transformedCollection(java.util.Collection, Transformer)": {
        "args": [
            "java.util.Collection", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FactoryUtils.constantFactory(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.StringValueTransformer.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapIterator.hasNext()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.init()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.removeListable(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.decorate(BoundedCollection)": {
        "args": [
            "BoundedCollection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TypedSet.decorate(java.util.Set, java.lang.Class)": {
        "args": [
            "java.util.Set", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.decorate(AbstractHashedMap)": {
        "args": [
            "AbstractHashedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.WhileClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [
            "ArrayStoreException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.removeLRU(LinkEntry)": {
        "args": [
            "LinkEntry"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TruePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.removeAll(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.isEqualKey(HashEntry, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.convertProperties(java.util.Properties)": {
        "args": [
            "java.util.Properties"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.switchTransformer(Predicate[], Transformer[])": {
        "args": [
            "Predicate[]", 
            "Transformer[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.notPredicate(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getLast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.decorate(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsExceptionPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.tailSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.cursor(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.reverseArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.setPredicate(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.entryKey(HashEntry)": {
        "args": [
            "HashEntry"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.ensureCapacity(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.resolveCollision(CompositeMap, java.util.Map, java.util.Map, java.util.Collection)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeMap", 
            "java.util.Map", 
            "java.util.Map", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.addNode(Node, Node)": {
        "args": [
            "Node", 
            "Node"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayListIterator(java.lang.Object[], int)": {
        "args": [
            "java.lang.Object[]", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.eitherPredicate(Predicate, Predicate)": {
        "args": [
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getByteValue(java.util.Map, java.lang.Object, byte)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "byte"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": [
            "UnsupportedOperationException"
        ]
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.removeNode(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.fixedSizeMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeWrite()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.inverseOrderedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.init()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.select(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.TiedMapEntry.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionTransformer.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.iterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.GrowthList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LinkedMap.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ReverseComparator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.orderedSet(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.BinaryHeap.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.DefaultKeyValue.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.verbosePrint(java.io.PrintStream, java.lang.Object, java.util.Map)": {
        "args": [
            "java.io.PrintStream", 
            "java.lang.Object", 
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.typedBuffer(Buffer, java.lang.Class)": {
        "args": [
            "Buffer", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedBag.decorate(Bag, Transformer)": {
        "args": [
            "Bag", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.multiValueMap(java.util.Map, Factory)": {
        "args": [
            "java.util.Map", 
            "Factory"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.addIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.getIterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.checkModCount()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.rangeCheck(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.instanceofPredicate(java.lang.Class)": {
        "args": [
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionPredicate.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformedPredicate.getTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.decorate(Buffer)": {
        "args": [
            "Buffer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.IdentityMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedBag.getBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.emptyIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PriorityQueue.isEmpty()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.addLast(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.TypedBuffer.decorate(Buffer, java.lang.Class)": {
        "args": [
            "Buffer", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.add(java.lang.Object, int)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.setIterator(int, java.util.Iterator)": {
        "args": [
            "int", 
            "java.util.Iterator"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "throws": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "org.apache.commons.collections.functors.ClosureTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.cursor()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.getEndIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.decorate(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.convertKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractBagDecorator.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.constantTransformer(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)": {
        "args": [
            "java.io.ObjectInputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.StaticBucketMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectGraphIterator.findNext(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnboundedFifoBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.nonePredicate(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.transform(java.util.Collection, Transformer)": {
        "args": [
            "java.util.Collection", 
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.writeExternal(java.io.ObjectOutput)": {
        "args": [
            "java.io.ObjectOutput"
        ], 
        "@throws": [], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.getCollections()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": [
            "IllegalArgumentException", 
            "ClassCastException"
        ]
    }, 
    "org.apache.commons.collections.list.FixedSizeList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.containsValue(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.createBidiMap(java.util.Map, java.util.Map, BidiMap)": {
        "args": [
            "java.util.Map", 
            "java.util.Map", 
            "BidiMap"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.transformedMap(java.util.Map, Transformer, Transformer)": {
        "args": [
            "java.util.Map", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.PredicatedCollection.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": [
            "ClassCastException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.decorate(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedMap.isFull()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getDouble(java.lang.String, java.lang.Double)": {
        "args": [
            "java.lang.String", 
            "java.lang.Double"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.DefaultedMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayListIterator(java.lang.Object, int, int)": {
        "args": [
            "java.lang.Object", 
            "int", 
            "int"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.addComposited(java.util.Collection[])": {
        "args": [
            "java.util.Collection[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.nullLowComparator(java.util.Comparator)": {
        "args": [
            "java.util.Comparator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.atomic(java.lang.Runnable)": {
        "args": [
            "java.lang.Runnable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.isNotEmpty(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.TransformedBuffer.decorate(Buffer, Transformer)": {
        "args": [
            "Buffer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getIntValue(java.util.Map, java.lang.Object, int)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.createHeaderNode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.UnboundedFifoBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException", 
            "BufferOverflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OrPredicate.getInstance(Predicate, Predicate)": {
        "args": [
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.disjunction(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.MultiKey.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.createEntry(HashEntry, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.uniqueSet()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsExceptionPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchTransformer.getTransformers()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.nonePredicate(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedMap.checkSetValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.toListIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.PredicateTransformer.getInstance(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.Buffer.get()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getInteger(java.lang.String, int)": {
        "args": [
            "java.lang.String", 
            "int"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.put(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TypedBag.decorate(Bag, java.lang.Class)": {
        "args": [
            "Bag", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.pop()": {
        "args": [
            ""
        ], 
        "@throws": [
            "EmptyStackException"
        ], 
        "throws": [
            "EmptyStackException"
        ]
    }, 
    "org.apache.commons.collections.ExtendedProperties.getBoolean(java.lang.String, boolean)": {
        "args": [
            "java.lang.String", 
            "boolean"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IdentityPredicate.getInstance(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.getBooleanComparator(boolean)": {
        "args": [
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FunctorException.printStackTrace(java.io.PrintWriter)": {
        "args": [
            "java.io.PrintWriter"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ClosureTransformer.getInstance(Closure)": {
        "args": [
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractSortedBagDecorator.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.NullComparator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.broadcastNodeInserted(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getDouble(java.lang.String, double)": {
        "args": [
            "java.lang.String", 
            "double"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.addAll(java.util.Collection, java.lang.Object[])": {
        "args": [
            "java.util.Collection", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.resolveCollision(CompositeSet, java.util.Set, java.util.Set, java.util.Collection)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeSet", 
            "java.util.Set", 
            "java.util.Set", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.decorate(java.util.Map, java.lang.Class)": {
        "args": [
            "java.util.Map", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ResettableIterator.reset()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.checkBound(int, java.lang.String)": {
        "args": [
            "int", 
            "java.lang.String"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PriorityQueue.peek()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.addComposited(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.collections.list.TreeList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedMap.decorate(java.util.Map, Predicate, Predicate)": {
        "args": [
            "java.util.Map", 
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AndPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.createEntrySetIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.getSortedSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FunctorException.getCause()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.setArray(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullPredicate.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.boundedBuffer(Buffer, int)": {
        "args": [
            "Buffer", 
            "int"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.display()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TreeBag.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.identityPredicate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.getCollection()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.getSortedMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.entrySetByValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.setNextNode(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.trimToSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.reinitialise()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedMap.isSetValueChecking()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedTransformer.getInstance(Transformer, Transformer)": {
        "args": [
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedBidiMap.inverseBidiMap()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getNumber(java.util.Map, java.lang.Object, java.lang.Number)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Number"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.isEqualSet(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LinkedMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.anyPredicate(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.toProperties(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getTypeTransformer(java.lang.Class)": {
        "args": [
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.isLocked()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.getMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedSortedBag.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ForClosure.getInstance(int, Closure)": {
        "args": [
            "int", 
            "Closure"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException", 
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.asIterator(java.util.Enumeration)": {
        "args": [
            "java.util.Enumeration"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.collect(java.util.Iterator, Transformer)": {
        "args": [
            "java.util.Iterator", 
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Transformer.transform(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException", 
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getList(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.TransformedBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.setForwardSort(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSet.decorate(java.util.Set, Transformer)": {
        "args": [
            "java.util.Set", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.retainAll(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.CloneTransformer.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BidiMap.getKey(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.MapTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.listableChanged(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayIterator(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.transformKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "the"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.switchClosure(Predicate[], Closure[])": {
        "args": [
            "Predicate[]", 
            "Closure[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.safeAddToMap(java.util.Map, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getFloat(java.lang.String, java.lang.Float)": {
        "args": [
            "java.lang.String", 
            "java.lang.Float"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.addEntry(HashEntry, int)": {
        "args": [
            "HashEntry", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.predicatedCollection(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.updateEntry(HashEntry, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.equalPredicate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.setBean(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.createCollection(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.WhileClosure.getClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.cloneTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMap.previousKey(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.invalidateCursors()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.removeAllNodes()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.switchMapClosure(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.TiedMapEntry.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.getCount(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedCollection.isFull()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.tailSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getString(java.lang.String, java.lang.String)": {
        "args": [
            "java.lang.String", 
            "java.lang.String"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.checkLocked()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ReferenceIdentityMap.hash(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.invokerPredicate(java.lang.String, java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.String", 
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getLong(java.lang.String, long)": {
        "args": [
            "java.lang.String", 
            "long"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.convertType(java.lang.Class, java.lang.Object)": {
        "args": [
            "java.lang.Class", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NumberFormatException", 
            "InstantiationException", 
            "InvocationTargetException", 
            "IllegalAccessException", 
            "IllegalArgumentException"
        ], 
        "throws": [
            "InstantiationException", 
            "IllegalAccessException", 
            "IllegalArgumentException", 
            "InvocationTargetException"
        ]
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.decorate(Buffer, long)": {
        "args": [
            "Buffer", 
            "long"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.UnboundedFifoBuffer.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OnePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.AbstractBufferDecorator.getBuffer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getFirstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.getSortedMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getVector(java.lang.String, java.util.Vector)": {
        "args": [
            "java.lang.String", 
            "java.util.Vector"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.addIgnoreNull(java.util.Collection, java.lang.Object)": {
        "args": [
            "java.util.Collection", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.peek()": {
        "args": [
            ""
        ], 
        "@throws": [
            "EmptyStackException"
        ], 
        "throws": [
            "EmptyStackException"
        ]
    }, 
    "org.apache.commons.collections.SequencedHashMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.MultiKey.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.setIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.percolateDownMinHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.getSortedMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.transformMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "the"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnboundedFifoBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.getLast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.decorate(SortedBag)": {
        "args": [
            "SortedBag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.synchronizedBag(Bag)": {
        "args": [
            "Bag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.TiedMapEntry.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.sortsTrueFirst()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.nextEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.decorate(BidiMap)": {
        "args": [
            "BidiMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.search(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformerClosure.getInstance(Transformer)": {
        "args": [
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.isEqualValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.inverseOrderedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IterableMap.mapIterator()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.isEqualKey(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSet.getSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.calculateThreshold(int, float)": {
        "args": [
            "int", 
            "float"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getReadMethod(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.UnboundedFifoBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.getMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.chainedClosure(Closure[])": {
        "args": [
            "Closure[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.typedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class)": {
        "args": [
            "java.util.SortedMap", 
            "java.lang.Class", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedSortedBag.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.percolateUpMaxHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSet.getSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.getList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.moveToMRU(LinkEntry)": {
        "args": [
            "LinkEntry"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.setFast(boolean)": {
        "args": [
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.isEqualValue(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.createEntrySetIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.decorateTransform(java.util.SortedMap, Transformer, Transformer)": {
        "args": [
            "java.util.SortedMap", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getInt(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.checkKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.tailSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.reversedComparator(java.util.Comparator)": {
        "args": [
            "java.util.Comparator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.decorate(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NOPClosure.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.doReadObject(java.io.ObjectInputStream)": {
        "args": [
            "java.io.ObjectInputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.DefaultMapBag.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.push(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.doWhileClosure(Closure, Predicate)": {
        "args": [
            "Closure", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NotPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectGraphIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.close()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsTruePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.createValuesIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EnumerationIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FactoryUtils.exceptionFactory()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.previous()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.iterators.SingletonIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.orPredicate(Predicate, Predicate)": {
        "args": [
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapIterator.getKey()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.intersection(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getString(java.util.Map, java.lang.Object, java.lang.String)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TreeBag.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.readExternal(java.io.ObjectInput)": {
        "args": [
            "java.io.ObjectInput"
        ], 
        "@throws": [
            "IOException", 
            "ClassNotFoundException"
        ], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedBag.getCount(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedClosure.getClosures()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getMap(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.TransformedBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.containsValue(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.decorate(java.util.ListIterator)": {
        "args": [
            "java.util.ListIterator"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.singletonIterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.addIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PriorityQueue.pop()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.getCollection(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstanceofPredicate.getInstance(java.lang.Class)": {
        "args": [
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.MultiKey.getKeys()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.retainAll(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.ifClosure(Predicate, Closure)": {
        "args": [
            "Predicate", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.checkSetValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntry.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.atomic(java.lang.Runnable)": {
        "args": [
            "java.lang.Runnable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.getFast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.getStartIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FactoryUtils.instantiateFactory(java.lang.Class, java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.Class", 
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayListIterator(java.lang.Object[], int, int)": {
        "args": [
            "java.lang.Object[]", 
            "int", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.IdentityMap.isEqualKey(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.isEqualKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.createCollection(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.headSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OnePredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.currentEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.getSortedSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.keyList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.unmodifiableSortedSet(java.util.SortedSet)": {
        "args": [
            "java.util.SortedSet"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.DefaultKeyValue.setKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getLong(java.lang.String, java.lang.Long)": {
        "args": [
            "java.lang.String", 
            "java.lang.Long"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.size(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.destroyEntry(HashEntry)": {
        "args": [
            "HashEntry"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NotPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalStateException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.save(java.io.OutputStream, java.lang.String)": {
        "args": [
            "java.io.OutputStream", 
            "java.lang.String"
        ], 
        "@throws": [
            "IOException"
        ], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.map.SingletonMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.getEntry(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.isSubCollection(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.FactoryTransformer.getFactory()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.calcTotalSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ForClosure.getClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.getListIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.addNodeToCache(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.calculateNewCapacity(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.predicatedSet(java.util.Set, Predicate)": {
        "args": [
            "java.util.Set", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.WhileClosure.isDoLoop()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getByte(java.lang.String, java.lang.Byte)": {
        "args": [
            "java.lang.String", 
            "java.lang.Byte"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.LazyList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.checkModCount()": {
        "args": [
            ""
        ], 
        "@throws": [
            "ConcurrentModificationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.intersection(java.util.List, java.util.List)": {
        "args": [
            "java.util.List", 
            "java.util.List"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.getSortedMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.getListIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.MapTransformer.getInstance(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.decorate(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.getSortedSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.decorate(java.util.SortedSet)": {
        "args": [
            "java.util.SortedSet"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.getArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorEnumeration.nextElement()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NotNullPredicate.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.PredicateDecorator.getPredicates()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.getFirst()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OrPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)": {
        "args": [
            "java.io.ObjectOutputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.IteratorUtils.filteredIterator(java.util.Iterator, Predicate)": {
        "args": [
            "java.util.Iterator", 
            "Predicate"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.collatedIterator(java.util.Comparator, java.util.Iterator, java.util.Iterator)": {
        "args": [
            "java.util.Comparator", 
            "java.util.Iterator", 
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayIterator(java.lang.Object, int, int)": {
        "args": [
            "java.lang.Object", 
            "int", 
            "int"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.GrowthList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ConstantTransformer.getInstance(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.SynchronizedBuffer.getBuffer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.decorate(OrderedBidiMap)": {
        "args": [
            "OrderedBidiMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getProperties(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.setMutator(CollectionMutator)": {
        "args": [
            "CollectionMutator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getNextNode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.setProperty(java.lang.String, java.lang.Object)": {
        "args": [
            "java.lang.String", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.decorate(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.TiedMapEntry.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.broadcastNodeRemoved(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.EnumerationUtils.toList(java.util.Enumeration)": {
        "args": [
            "java.util.Enumeration"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedClosure.getInstance(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.fixedSizeSortedMap(java.util.SortedMap)": {
        "args": [
            "java.util.SortedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.setMaximumSize(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getFloat(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.setArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [
            "IllegalStateException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayIterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InvokerTransformer.getInstance(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.IdentityMap.isEqualValue(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.MultiKey.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.load(java.io.InputStream, java.lang.String)": {
        "args": [
            "java.io.InputStream", 
            "java.lang.String"
        ], 
        "@throws": [
            "IOException"
        ], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.sizeIsEmpty(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstanceofPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.getFast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsTruePredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMap.firstKey()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.asTransformer(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.removeNode(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.nopTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.chainedTransformer(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.transformedSortedMap(java.util.SortedMap, Transformer, Transformer)": {
        "args": [
            "java.util.SortedMap", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.removeAll(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.chainedTransformer(Transformer[])": {
        "args": [
            "Transformer[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorEnumeration.getIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.retainAll(java.util.Collection)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionFactory.create()": {
        "args": [
            ""
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.WhileClosure.getInstance(Predicate, Closure, boolean)": {
        "args": [
            "Predicate", 
            "Closure", 
            "boolean"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PredicatedBuffer.getBuffer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.getKeyForValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": [
            "ClassCastException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": [
            "ClassCastException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.IdentityMap.createEntry(HashEntry, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getFloatValue(java.util.Map, java.lang.Object, float)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "float"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.logInfo(java.lang.Exception)": {
        "args": [
            "java.lang.Exception"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.grow()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapIterator.next()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.TransformedCollection.transform(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.unregisterCursor(Cursor)": {
        "args": [
            "Cursor"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.TypedCollection.decorate(java.util.Collection, java.lang.Class)": {
        "args": [
            "java.util.Collection", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.decorate(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.listableRemoved(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.decorate(java.util.SortedMap, Factory)": {
        "args": [
            "java.util.SortedMap", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NOPTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getPreviousNode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractBidiMapDecorator.getKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.anyPredicate(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.entryAfter(LinkEntry)": {
        "args": [
            "LinkEntry"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SortedBidiMap.inverseBidiMap()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.booleanComparator(boolean)": {
        "args": [
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.getIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedIterator.previous()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LinkedMap.asList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.addComparator(java.util.Comparator, boolean)": {
        "args": [
            "java.util.Comparator", 
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getLastValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.getFast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NonePredicate.getInstance(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.purge()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [
            "ArrayStoreException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedBag.getCount(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getFirst()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getLastNodeReturned()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": [
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CaseInsensitiveMap.convertKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.typedSet(java.util.Set, java.lang.Class)": {
        "args": [
            "java.util.Set", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.debugPrint(java.io.PrintStream, java.lang.Object, java.util.Map)": {
        "args": [
            "java.io.PrintStream", 
            "java.lang.Object", 
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.predicatedSortedSet(java.util.SortedSet, Predicate)": {
        "args": [
            "java.util.SortedSet", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectGraphIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.getKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.FalsePredicate.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.collect(java.util.Collection, Transformer, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "Transformer", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FunctorException.printStackTrace(java.io.PrintStream)": {
        "args": [
            "java.io.PrintStream"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.containsAll(Bag)": {
        "args": [
            "Bag"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.synchronizedSortedMap(java.util.SortedMap)": {
        "args": [
            "java.util.SortedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.createValuesIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.invokerTransformer(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ConstantTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ReferenceIdentityMap.hashEntry(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.asSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getObject(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.typedBag(Bag, java.lang.Class)": {
        "args": [
            "Bag", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.remove(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedBag.decorate(Bag, Predicate)": {
        "args": [
            "Bag", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.getNodeFromCache()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getBean()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnboundedFifoBuffer.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.entryBefore(LinkEntry)": {
        "args": [
            "LinkEntry"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.put(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractBidiMapDecorator.getBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSet.decorate(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.insertListable(Listable, Listable, java.lang.Object)": {
        "args": [
            "Listable", 
            "Listable", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.invokerClosure(java.lang.String, java.lang.Class[], java.lang.Object[])": {
        "args": [
            "java.lang.String", 
            "java.lang.Class[]", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.unmodifiableSet(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.blockingBuffer(Buffer, long)": {
        "args": [
            "Buffer", 
            "long"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AllPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Closure.execute(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException", 
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ConstantFactory.getConstant()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.unregisterCursor(Cursor)": {
        "args": [
            "Cursor"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.lazyMap(java.util.Map, Factory)": {
        "args": [
            "java.util.Map", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException", 
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AndPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.predicatedMap(java.util.Map, Predicate, Predicate)": {
        "args": [
            "java.util.Map", 
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.createNode(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.percolateUpMinHeap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getBoolean(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.hashCodeForSet(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.inverseBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.predicatedList(java.util.List, Predicate)": {
        "args": [
            "java.util.List", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.emptyListIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.addComparator(java.util.Comparator)": {
        "args": [
            "java.util.Comparator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getInt(java.lang.String, int)": {
        "args": [
            "java.lang.String", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.getMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.putAllWriteable(BeanMap)": {
        "args": [
            "BeanMap"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.MultiKey.getKey(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getByteValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazyMap.decorate(java.util.Map, Factory)": {
        "args": [
            "java.util.Map", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.inverseBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.remove(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.entryHashCode(HashEntry)": {
        "args": [
            "HashEntry"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.decorate(java.util.Map, Transformer, Transformer)": {
        "args": [
            "java.util.Map", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getInteger(java.lang.String, java.lang.Integer)": {
        "args": [
            "java.lang.String", 
            "java.lang.Integer"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.createEntry(HashEntry, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.chainedIterator(java.util.Iterator[])": {
        "args": [
            "java.util.Iterator[]"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.FactoryTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.removeAll(java.util.Collection)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.maxSize(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.NullComparator.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.headSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getBooleanValue(java.util.Map, java.lang.Object, boolean)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": [
            "UnsupportedOperationException"
        ]
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchTransformer.getDefaultTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSet.decorate(java.util.Set, Predicate)": {
        "args": [
            "java.util.Set", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.max(java.lang.Object, java.lang.Object, java.util.Comparator)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.util.Comparator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.putAll(CompositeMap, java.util.Map[], java.util.Map)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeMap", 
            "java.util.Map[]", 
            "java.util.Map"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.subSet(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.remove(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.subtract(java.util.List, java.util.List)": {
        "args": [
            "java.util.List", 
            "java.util.List"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getLast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getInteger(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractKeyValue.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.totalSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ReverseComparator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.mapTransformer(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.getCardinalityMap(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.switchClosure(Predicate[], Closure[], Closure)": {
        "args": [
            "Predicate[]", 
            "Closure[]", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.AbstractBufferDecorator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.PredicatedCollection.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorEnumeration.setIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.put(int, java.lang.Object, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.percolateUpMinHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualHashBidiMap.createBidiMap(java.util.Map, java.util.Map, BidiMap)": {
        "args": [
            "java.util.Map", 
            "java.util.Map", 
            "BidiMap"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IfClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.typedCollection(java.util.Collection, java.lang.Class)": {
        "args": [
            "java.util.Collection", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.decorate(java.util.SortedMap)": {
        "args": [
            "java.util.SortedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedBag.getCount(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.inverseBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedMap.validate(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.readExternal(java.io.ObjectInput)": {
        "args": [
            "java.io.ObjectInput"
        ], 
        "@throws": [], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.MapUtils.getInteger(java.util.Map, java.lang.Object, java.lang.Integer)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Integer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.sum(java.util.List, java.util.List)": {
        "args": [
            "java.util.List", 
            "java.util.List"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.inverseSortedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.synchronizedSortedSet(java.util.SortedSet)": {
        "args": [
            "java.util.SortedSet"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractSortedBidiMapDecorator.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.decorate(Bag)": {
        "args": [
            "Bag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.TiedMapEntry.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.unmodifiableBag(Bag)": {
        "args": [
            "Bag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.nullTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.transformedIterator(java.util.Iterator, Transformer)": {
        "args": [
            "java.util.Iterator", 
            "Transformer"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.typedList(java.util.List, java.lang.Class)": {
        "args": [
            "java.util.List", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.setComparator(java.util.Comparator)": {
        "args": [
            "java.util.Comparator"
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnboundedFifoBuffer.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.updateEntry(HashEntry, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.andPredicate(Predicate, Predicate)": {
        "args": [
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.nullPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.remove(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SynchronizedPriorityQueue.peek()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": [
            "NoSuchElementException"
        ]
    }, 
    "org.apache.commons.collections.map.IdentityMap.hash(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.subSet(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.removeComposited(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.decorate(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.decorate(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ForClosure.getCount()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.UnboundedFifoBuffer.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.load(java.io.InputStream)": {
        "args": [
            "java.io.InputStream"
        ], 
        "@throws": [
            "IOException"
        ], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AllPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.decorate(java.util.Map, Factory)": {
        "args": [
            "java.util.Map", 
            "Factory"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ReferenceIdentityMap.isEqualValue(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.AbstractBufferDecorator.get()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Factory.create()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addNode(Node, Node)": {
        "args": [
            "Node", 
            "Node"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.addComposited(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.UnmodifiableMapEntry.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.isInitialized()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.TiedMapEntry.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractIteratorDecorator.getIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractBagDecorator.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getKeys(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedSortedBag.getSortedBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TypedSortedBag.decorate(SortedBag, java.lang.Class)": {
        "args": [
            "SortedBag", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.remove(java.lang.Object, java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.invokerClosure(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedSortedBag.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.index(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InvokerTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.InstantiateTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractBagDecorator.getBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.firePropertyChange(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.IdentityMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.broadcastNodeChanged(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": [
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.collections.MapUtils.getFloat(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.addMapping(int, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "int", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getString(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.init()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.reuseEntry(HashEntry, int, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "int", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.getKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchTransformer.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.getIterators()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.hashCodeForList(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getFirst()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.setPredicate(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getProperty(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SynchronizedPriorityQueue.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.percolateUpMaxHeap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.unmodifiableCollection(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getReadMethod(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ArrayStack.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractListIteratorDecorator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.selectRejected(java.util.Collection, Predicate, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "Predicate", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.setListIterator(java.util.ListIterator)": {
        "args": [
            "java.util.ListIterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.CloneTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.remove(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.transformedPredicate(Transformer, Predicate)": {
        "args": [
            "Transformer", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.createEntrySetIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsFalsePredicate.getInstance(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedSortedMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.falsePredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.percolateUpMaxHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.doWriteObject(java.io.ObjectOutputStream)": {
        "args": [
            "java.io.ObjectOutputStream"
        ], 
        "@throws": [
            "IOException"
        ], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.SetUtils.typedSortedSet(java.util.SortedSet, java.lang.Class)": {
        "args": [
            "java.util.SortedSet", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.EqualPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSet.decorate(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.broadcastListableInserted(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.decorate(Buffer, int)": {
        "args": [
            "Buffer", 
            "int"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.nextEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LinkedMap.getValue(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getBooleanValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BidiMap.put(java.lang.Object, java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TreeBag.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.decorate(OrderedMapIterator)": {
        "args": [
            "OrderedMapIterator"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.neitherPredicate(Predicate, Predicate)": {
        "args": [
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.createSubListListIterator(LinkedSubList, int)": {
        "args": [
            "LinkedSubList", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsFalsePredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.getFalseFirstComparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.isEqualKey(HashEntry, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BidiMap.inverseBidiMap()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.TransformedCollection.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AllPredicate.getInstance(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionFactory.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.getPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.lazySortedMap(java.util.SortedMap, Factory)": {
        "args": [
            "java.util.SortedMap", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractIteratorDecorator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NotNullPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedIterator.hasPrevious()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.iterator()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.decorate(SortedBidiMap)": {
        "args": [
            "SortedBidiMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapIterator.remove()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedFifoBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.tailSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.getMaximumSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getByte(java.util.Map, java.lang.Object, java.lang.Byte)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Byte"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.createNode(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.removeAll(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.CircularFifoBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PredicatedBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.cardinality(java.lang.Object, java.util.Collection)": {
        "args": [
            "java.lang.Object", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getLong(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayListIterator(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingIterator.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnboundedFifoBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractIteratorDecorator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.remove(CompositeCollection, java.util.Collection[], java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeCollection", 
            "java.util.Collection[]", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.collect(java.util.Collection, Transformer)": {
        "args": [
            "java.util.Collection", 
            "Transformer"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.cursor()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractSortedBidiMapDecorator.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getBoolean(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.totalSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AnyPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformedPredicate.getInstance(Transformer, Predicate)": {
        "args": [
            "Transformer", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getDouble(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazyMap.decorate(java.util.Map, Transformer)": {
        "args": [
            "java.util.Map", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.min(java.lang.Object, java.lang.Object, java.util.Comparator)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.util.Comparator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.decorate(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.decorate(Buffer)": {
        "args": [
            "Buffer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.shrinkCacheToMaximumSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchClosure.getInstance(Predicate[], Closure[], Closure)": {
        "args": [
            "Predicate[]", 
            "Closure[]", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.valueIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.UnboundedFifoBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.createEntrySetIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BidiMap.removeValue(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException", 
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.createKeySetIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.decorate(java.util.SortedSet, Predicate)": {
        "args": [
            "java.util.SortedSet", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getDouble(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.asTransformer(Factory)": {
        "args": [
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TypedList.decorate(java.util.List, java.lang.Class)": {
        "args": [
            "java.util.List", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.unmodifiableBuffer(Buffer)": {
        "args": [
            "Buffer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.createKeySetIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.nullIsTruePredicate(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.lazySortedMap(java.util.SortedMap, Transformer)": {
        "args": [
            "java.util.SortedMap", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.removeNode(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.size()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.doWriteObject(java.io.ObjectOutputStream)": {
        "args": [
            "java.io.ObjectOutputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractSortedBidiMapDecorator.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.headSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableOrderedBidiMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayListIterator(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.addComposited(java.util.Collection[])": {
        "args": [
            "java.util.Collection[]"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.SynchronizedBuffer.decorate(Buffer)": {
        "args": [
            "Buffer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SynchronizedPriorityQueue.insert(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.removeAll(java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getDouble(java.util.Map, java.lang.Object, java.lang.Double)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Double"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.addComposited(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.createBidiMap(java.util.Map, java.util.Map, BidiMap)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.util.Map", 
            "java.util.Map", 
            "BidiMap"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getByte(java.lang.String, byte)": {
        "args": [
            "java.lang.String", 
            "byte"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableBidiMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.stringValueTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException", 
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.size()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.switchTransformer(Predicate, Transformer, Transformer)": {
        "args": [
            "Predicate", 
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getFirstValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TransformedSortedSet.decorate(java.util.SortedSet, Transformer)": {
        "args": [
            "java.util.SortedSet", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractSortedBidiMapDecorator.inverseSortedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.removeAllNodes()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.PredicatedCollection.validate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedCollection.maxSize()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.size(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.inverseBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.getListableAt(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.exceptionTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.filteredListIterator(java.util.ListIterator, Predicate)": {
        "args": [
            "java.util.ListIterator", 
            "Predicate"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.decorate(java.util.List, Transformer)": {
        "args": [
            "java.util.List", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.getComparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.subSet(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.chainedComparator(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.Predicate.evaluate(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException", 
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.setFast(boolean)": {
        "args": [
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ConstantTransformer.getConstant()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.lazyList(java.util.List, Factory)": {
        "args": [
            "java.util.List", 
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TruePredicate.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getLastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getDoubleValue(java.util.Map, java.lang.Object, double)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "double"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedSortedBag.decorate(SortedBag, Transformer)": {
        "args": [
            "SortedBag", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.checkCapacity()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedSortedBag.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NonePredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.find(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.entryNext(HashEntry)": {
        "args": [
            "HashEntry"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyIterator.setIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.FixedSizeList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.filter(java.util.Collection, Predicate)": {
        "args": [
            "java.util.Collection", 
            "Predicate"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AnyPredicate.getInstance(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.removeAll(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.currentEntry()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.getTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractBidiMapDecorator.inverseBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getFloatValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.DefaultKeyValue.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.synchronizedCollection(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.emptyMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.writeExternal(java.io.ObjectOutput)": {
        "args": [
            "java.io.ObjectOutput"
        ], 
        "@throws": [
            "IOException"
        ], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.isProperSubCollection(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.containsAny(java.util.Collection, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)": {
        "args": [
            "java.io.ObjectInputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.Bag.containsAll(java.util.Collection)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.isFull(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.containsValue(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.updateCurrentIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.loopingListIterator(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.allPredicate(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NotPredicate.getInstance(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.put(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.percolateUpMinHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.transformedList(java.util.List, Transformer)": {
        "args": [
            "java.util.List", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractIteratorDecorator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.decorate(MapIterator)": {
        "args": [
            "MapIterator"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.TypedSortedSet.decorate(java.util.SortedSet, java.lang.Class)": {
        "args": [
            "java.util.SortedSet", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AndPredicate.getInstance(Predicate, Predicate)": {
        "args": [
            "Predicate", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsTruePredicate.getInstance(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.getMaximumCacheSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.decorate(java.util.List, Predicate)": {
        "args": [
            "java.util.List", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.removeEntry(HashEntry, int, HashEntry)": {
        "args": [
            "HashEntry", 
            "int", 
            "HashEntry"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.getOrderedMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.doWriteObject(java.io.ObjectOutputStream)": {
        "args": [
            "java.io.ObjectOutputStream"
        ], 
        "@throws": [], 
        "throws": [
            "IOException"
        ]
    }, 
    "org.apache.commons.collections.MapUtils.putAll(java.util.Map, java.lang.Object[])": {
        "args": [
            "java.util.Map", 
            "java.lang.Object[]"
        ], 
        "@throws": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.updateNode(Node, java.lang.Object)": {
        "args": [
            "Node", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.EqualPredicate.getInstance(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.keySetByValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.getOrderedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorEnumeration.hasMoreElements()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.NullComparator.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ResettableListIterator.reset()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ClosureTransformer.getClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.nodeRemoved(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getLong(java.util.Map, java.lang.Object, java.lang.Long)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Long"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.chainedTransformer(Transformer, Transformer)": {
        "args": [
            "Transformer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractBagDecorator.getCount(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.objectGraphIterator(java.lang.Object, Transformer)": {
        "args": [
            "java.lang.Object", 
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.asList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getInteger(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getList(java.lang.String, java.util.List)": {
        "args": [
            "java.lang.String", 
            "java.util.List"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.Buffer.remove()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectGraphIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.previousKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.ensureCapacity(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedSortedBag.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractMapEntry.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.get(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.orderedMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.invertMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableBag.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.registerCursor(Cursor)": {
        "args": [
            "Cursor"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.toArray(java.lang.Object[])": {
        "args": [
            "java.lang.Object[]"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedSortedBag.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.forClosure(int, Closure)": {
        "args": [
            "int", 
            "Closure"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.addFirst(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.remove(long)": {
        "args": [
            "long"
        ], 
        "@throws": [
            "BufferUnderflowException", 
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.OrPredicate.getPredicates()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchTransformer.getInstance(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FactoryUtils.instantiateFactory(java.lang.Class)": {
        "args": [
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.nopClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TreeBag.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PriorityQueue.insert(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getByte(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.createSubListListIterator(LinkedSubList, int)": {
        "args": [
            "LinkedSubList", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.updateNode(Node, java.lang.Object)": {
        "args": [
            "Node", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.synchronizedBuffer(Buffer)": {
        "args": [
            "Buffer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.nullIsFalsePredicate(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EntrySetMapIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.toCollection()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.UnmodifiableBuffer.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedBidiMap.inverseOrderedBidiMap()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getNumber(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractSortedBagDecorator.getSortedBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.getOrderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getStringArray(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getVector(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.remove(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractMapIteratorDecorator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.getList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.index(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "ArrayIndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.isEqualKey(HashEntry, java.lang.Object, java.lang.Object)": {
        "args": [
            "HashEntry", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.EqualPredicate.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.removeValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.inverseSortedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.addAll(int, java.util.Collection)": {
        "args": [
            "int", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getFloat(java.lang.String, float)": {
        "args": [
            "java.lang.String", 
            "float"
        ], 
        "@throws": [
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.SynchronizedBag.decorate(Bag)": {
        "args": [
            "Bag"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.createWriteMethodArguments(java.lang.reflect.Method, java.lang.Object)": {
        "args": [
            "java.lang.reflect.Method", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalAccessException", 
            "IllegalArgumentException"
        ], 
        "throws": [
            "IllegalAccessException", 
            "ClassCastException"
        ]
    }, 
    "org.apache.commons.collections.functors.IfClosure.getTrueClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.subSet(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.isLocked()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionClosure.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.StringValueTransformer.transform(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.isAscendingOrder()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.asList()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.subList(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.CompositeSet.addComposited(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.getNode(int, boolean)": {
        "args": [
            "int", 
            "boolean"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": [
            "IndexOutOfBoundsException"
        ]
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SortedBag.comparator()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getObject(java.util.Map, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.chainedClosure(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedSortedBag.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.putAll(java.lang.Object, java.util.Collection)": {
        "args": [
            "java.lang.Object", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.getValue(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "ArrayIndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.unmodifiableMapIterator(MapIterator)": {
        "args": [
            "MapIterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.isEmpty(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchTransformer.getInstance(Predicate[], Transformer[], Transformer)": {
        "args": [
            "Predicate[]", 
            "Transformer[]", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.createKeySetIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.hashIndex(int, int)": {
        "args": [
            "int", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchClosure.getDefaultClosure()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.UnboundedFifoBuffer.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AnyPredicate.getInstance(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.listIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.transformedBuffer(Buffer, Transformer)": {
        "args": [
            "Buffer", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getShortValue(java.util.Map, java.lang.Object, short)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "short"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.containsKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.transformedBag(Bag, Transformer)": {
        "args": [
            "Bag", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.invokerPredicate(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.KeyValue.getKey()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TypedSortedMap.decorate(java.util.SortedMap, java.lang.Class, java.lang.Class)": {
        "args": [
            "java.util.SortedMap", 
            "java.lang.Class", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.headMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparableComparator.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.removeAll(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.SynchronizedSortedSet.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.entryIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedSortedMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getShort(java.util.Map, java.lang.Object, java.lang.Short)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Short"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.HashedMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TransformedMap.transformValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "the"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IfClosure.getInstance(Predicate, Closure)": {
        "args": [
            "Predicate", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.getValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PredicatedBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.onePredicate(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.remove(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.asClosure(Transformer)": {
        "args": [
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedSortedBag.getSortedBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.fixedSizeList(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.TypedMap.decorate(java.util.Map, java.lang.Class, java.lang.Class)": {
        "args": [
            "java.util.Map", 
            "java.lang.Class", 
            "java.lang.Class"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.decorate(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.get(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.select(java.util.Collection, Predicate, java.util.Collection)": {
        "args": [
            "java.util.Collection", 
            "Predicate", 
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.reuseMapping(LinkEntry, int, int, java.lang.Object, java.lang.Object)": {
        "args": [
            "LinkEntry", 
            "int", 
            "int", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.put(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NonePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.MapTransformer.getMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.hash(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BlockingBuffer.get(long)": {
        "args": [
            "long"
        ], 
        "@throws": [
            "BufferUnderflowException", 
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BagUtils.predicatedSortedBag(SortedBag, Predicate)": {
        "args": [
            "SortedBag", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedTransformer.getInstance(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addLast(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.TreeBidiMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.hashEntry(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ConstantFactory.create()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.toMap(java.util.ResourceBundle)": {
        "args": [
            "java.util.ResourceBundle"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiMap.values()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CollectionUtils.addAll(java.util.Collection, java.util.Iterator)": {
        "args": [
            "java.util.Collection", 
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.percolateUpMaxHeap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.isScanUntilRemovable()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.lazyMap(java.util.Map, Transformer)": {
        "args": [
            "java.util.Map", 
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.removeLast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUnderflowException.getCause()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformerPredicate.getInstance(Transformer)": {
        "args": [
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.combine(ExtendedProperties)": {
        "args": [
            "ExtendedProperties"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SortedBidiMap.inverseSortedBidiMap()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getString(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapBag.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.multiValueMap(java.util.Map, java.lang.Class)": {
        "args": [
            "java.util.Map", 
            "java.lang.Class"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.nextIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EnumerationIterator.getEnumeration()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMap.nextKey(java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.getEntry(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.setComparator(int, java.util.Comparator, boolean)": {
        "args": [
            "int", 
            "java.util.Comparator", 
            "boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchClosure.getInstance(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMapIterator.hasPrevious()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FactoryUtils.prototypeFactory(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SetUtils.synchronizedSet(java.util.Set)": {
        "args": [
            "java.util.Set"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractOrderedBidiMapDecorator.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.hasPrevious()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.multiValueMap(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.MultiKey.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.size(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.unmodifiableIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.nodeChanged(Node)": {
        "args": [
            "Node"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.IteratorChain.getIterators()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LRUMap.maxSize()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedSortedBag.decorate(SortedBag, Predicate)": {
        "args": [
            "SortedBag", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.TransformedCollection.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.setTransformer(Transformer)": {
        "args": [
            "Transformer"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapIterator.getValue()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.valuesByValue()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedClosure.getInstance(Closure[])": {
        "args": [
            "Closure[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.CollatingIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.uniqueSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.get()": {
        "args": [
            ""
        ], 
        "@throws": [
            "BufferUnderflowException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EnumerationIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.blockingBuffer(Buffer)": {
        "args": [
            "Buffer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.decorate(Buffer, int, long)": {
        "args": [
            "Buffer", 
            "int", 
            "long"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.LRUMap.removeLRU()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.isEqualValue(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayIterator(java.lang.Object[], int)": {
        "args": [
            "java.lang.Object[]", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.removeComposited(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.contains(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSetDecorator.getSet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.DoubleOrderedMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BidiMap.mapIterator()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ClosureUtils.chainedClosure(Closure, Closure)": {
        "args": [
            "Closure", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.purge(java.lang.ref.Reference)": {
        "args": [
            "java.lang.ref.Reference"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.createMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractBidiMapDecorator.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MultiHashMap.iterator(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.boundedBuffer(Buffer, int, long)": {
        "args": [
            "Buffer", 
            "int", 
            "long"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.emptyOrderedIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.UniquePredicate.getInstance()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.chainedIterator(java.util.Iterator, java.util.Iterator)": {
        "args": [
            "java.util.Iterator", 
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.toString()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformedPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.StaticBucketMap.hashCode()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.broadcastListableRemoved(Listable)": {
        "args": [
            "Listable"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedTransformer.getInstance(Transformer[])": {
        "args": [
            "Transformer[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.removeLast()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.SynchronizedBuffer.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.addComposited(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.OrderedMapIterator.previous()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TreeBag.last()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractReferenceMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.addAll(CompositeCollection, java.util.Collection[], java.util.Collection)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeCollection", 
            "java.util.Collection[]", 
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.AbstractSortedSetDecorator.first()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.Bag.remove(java.lang.Object, int)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.FixedSizeSortedMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.BooleanComparator.getTrueFirstComparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.reset()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.truePredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.AbstractOrderedMapIteratorDecorator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.IfClosure.getPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiKeyMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.TransformedBag.getBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazyMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BoundedFifoBuffer.isFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ChainedClosure.getInstance(Closure, Closure)": {
        "args": [
            "Closure", 
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.close()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.setIterator(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayIterator(java.lang.Object[], int, int)": {
        "args": [
            "java.lang.Object[]", 
            "int", 
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.removeFirst()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getShort(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [
            "NoSuchElementException", 
            "ClassCastException", 
            "NumberFormatException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.toArray()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.decorate(OrderedMap)": {
        "args": [
            "OrderedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ReferenceMap.keySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.getValue(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.setReverseSort(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.collatedIterator(java.util.Comparator, java.util.Collection)": {
        "args": [
            "java.util.Comparator", 
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterIterator.getIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.logInfo(java.lang.Exception)": {
        "args": [
            "java.lang.Exception"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.clearProperty(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.subMap(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.Flat3Map.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.loopingIterator(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ListIteratorWrapper.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": [
            "UnsupportedOperationException"
        ]
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.DefaultKeyValue.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.iterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.asPredicate(Transformer)": {
        "args": [
            "Transformer"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractLinkedMap.nextKey(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PriorityQueue.clear()": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformerPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.PredicateTransformer.getPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.TransformingComparator.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.IdentityMap.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.TransformerClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.PredicatedSortedSet.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TreeList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.lastKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectGraphIterator.updateCurrentIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.getKeys()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.UnmodifiableList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.doReadObject(java.util.Map, java.io.ObjectInputStream)": {
        "args": [
            "java.util.Map", 
            "java.io.ObjectInputStream"
        ], 
        "@throws": [
            "IOException", 
            "ClassNotFoundException"
        ], 
        "throws": [
            "IOException", 
            "ClassNotFoundException"
        ]
    }, 
    "org.apache.commons.collections.MapUtils.getShort(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.SingletonMap.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.nullIsExceptionPredicate(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.asTransformer(Closure)": {
        "args": [
            "Closure"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparableComparator.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException", 
            "ClassCastException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BinaryHeap.insert(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastHashMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException", 
            "ClassCastException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.comparators.ComparatorChain.compare(java.lang.Object, java.lang.Object)": {
        "args": [
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": [
            "UnsupportedOperationException"
        ]
    }, 
    "org.apache.commons.collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.collatedIterator(java.util.Comparator, java.util.Iterator[])": {
        "args": [
            "java.util.Comparator", 
            "java.util.Iterator[]"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.PredicatedList.get(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.toList(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.NullIsExceptionPredicate.getInstance(Predicate)": {
        "args": [
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableMapIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.TransformIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ReverseListIterator.set(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableCollection.decorate(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.put(CompositeMap, java.util.Map[], java.lang.Object, java.lang.Object)": {
        "Abstract": [
            "Y"
        ], 
        "args": [
            "CompositeMap", 
            "java.util.Map[]", 
            "java.lang.Object", 
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException", 
            "ClassCastException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.AnyPredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ComparatorUtils.naturalComparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.toArray(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.setValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.tailMap(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.isAtCapacity()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.keyvalue.AbstractKeyValue.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableOrderedMap.orderedMapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addNodeAfter(Node, java.lang.Object)": {
        "args": [
            "Node", 
            "java.lang.Object"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.MapBackedSet.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.LazySortedMap.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.SingletonListIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.IteratorUtils.arrayIterator(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IndexOutOfBoundsException", 
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PriorityBuffer.percolateDownMinHeap(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.values()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.SwitchClosure.getClosures()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.TransformerUtils.instantiateTransformer()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.SynchronizedCollection.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.ListOrderedMap.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.cursor(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.LoopingListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.uniquePredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.CompositeCollection.setMutator(CollectionMutator)": {
        "args": [
            "CollectionMutator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.UnmodifiableBoundedCollection.retainAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.PredicatedBag.getBag()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.getWriteMethod(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractListDecorator.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.equals(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.CompositeMap.setMutator(MapMutator)": {
        "args": [
            "MapMutator"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.notNullPredicate()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.add(java.lang.Object, int)": {
        "args": [
            "java.lang.Object", 
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.TransformedList.remove(int)": {
        "args": [
            "int"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.BufferUtils.predicatedBuffer(Buffer, Predicate)": {
        "args": [
            "Buffer", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.FactoryTransformer.getInstance(Factory)": {
        "args": [
            "Factory"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.listIterator(int)": {
        "args": [
            "int"
        ], 
        "@throws": [
            "IndexOutOfBoundsException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.UnmodifiableSortedBidiMap.inverseOrderedBidiMap()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractMapDecorator.containsValue(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastTreeMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.AbstractMapBag.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.addFirst(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.FalsePredicate.evaluate(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.get(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.FastArrayList.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.CursorableLinkedList.removeAllNodes()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractOrderedMapDecorator.firstKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.functors.ExceptionClosure.execute(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [
            "FunctorException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ProxyIterator.hasNext()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.MultiValueMap.getCollection(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ListUtils.synchronizedList(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.BeanMap.clone()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": [
            "CloneNotSupportedException"
        ]
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.entrySet()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableEntrySet.remove(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.size()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.isEmpty()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.CursorableLinkedList.addAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [
            "ClassCastException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SetUniqueList.decorate(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.FactoryUtils.nullFactory()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.UnmodifiableIterator.decorate(java.util.Iterator)": {
        "args": [
            "java.util.Iterator"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.NodeCachingLinkedList.isCacheFull()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.mapIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractSortedMapDecorator.comparator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.EnumerationIterator.remove()": {
        "args": [
            ""
        ], 
        "@throws": [
            "IllegalStateException", 
            "UnsupportedOperationException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.PredicateUtils.allPredicate(Predicate[])": {
        "args": [
            "Predicate[]"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.PredicatedBuffer.decorate(Buffer, Predicate)": {
        "args": [
            "Buffer", 
            "Predicate"
        ], 
        "@throws": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.AbstractDualBidiMap.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.SynchronizedList.indexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ArrayListIterator.next()": {
        "args": [
            ""
        ], 
        "@throws": [
            "NoSuchElementException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.collection.AbstractCollectionDecorator.containsAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bag.UnmodifiableSortedBag.removeAll(java.util.Collection)": {
        "args": [
            "java.util.Collection"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.UnmodifiableSortedMap.decorate(java.util.SortedMap)": {
        "args": [
            "java.util.SortedMap"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.GrowthList.decorate(java.util.List)": {
        "args": [
            "java.util.List"
        ], 
        "@throws": [
            "IllegalArgumentException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.DefaultMapEntry.getKey()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getDoubleValue(java.util.Map, java.lang.Object)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.PredicatedMap.putAll(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.AbstractHashedMap.entryValue(HashEntry)": {
        "args": [
            "HashEntry"
        ], 
        "@throws": [
            "NullPointerException"
        ], 
        "throws": []
    }, 
    "org.apache.commons.collections.map.StaticBucketMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.SequencedHashMap.lastIndexOf(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.getListIterator()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.FilterListIterator.previous()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.ListOrderedSet.add(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.set.UnmodifiableSortedSet.tailSet(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.bidimap.DualTreeBidiMap.next()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.buffer.BoundedBuffer.add(java.lang.Object)": {
        "args": [
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ExtendedProperties.subset(java.lang.String)": {
        "args": [
            "java.lang.String"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.iterators.ObjectArrayListIterator.previousIndex()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.isNotEmpty(java.util.Map)": {
        "args": [
            "java.util.Map"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.list.AbstractLinkedList.set(int, java.lang.Object)": {
        "args": [
            "int", 
            "java.lang.Object"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.MapUtils.getBoolean(java.util.Map, java.lang.Object, java.lang.Boolean)": {
        "args": [
            "java.util.Map", 
            "java.lang.Object", 
            "java.lang.Boolean"
        ], 
        "@throws": [], 
        "throws": []
    }, 
    "org.apache.commons.collections.ProxyMap.clear()": {
        "args": [
            ""
        ], 
        "@throws": [], 
        "throws": []
    }
}