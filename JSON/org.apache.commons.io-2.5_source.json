{
    "java.nio.charset.CharsetEncoder.onMalformedInput(java.nio.charset.CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.indexOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.toArray(java.lang.Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.readLine()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.output.XmlStreamWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.getChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.skip(java.io.InputStream, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.listFiles()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedLong(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ClosedOutputStream.write(int)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.DemuxOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getName(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.PathFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.io.InputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableList(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, TailerListener, long, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getSimpleName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CountingInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReaderInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableSet(java.util.Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.ByteOrderMark.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.createTempFile(java.lang.String, java.lang.String, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.listFiles(java.io.FileFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.put(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String)": {
        "intra_proced": [
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.add(java.math.BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleStart(java.io.File, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DirectoryFileComparator.getType(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.transferFrom(java.nio.channels.ReadableByteChannel, long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.group(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, TailerListener, long, boolean, boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.endsWith(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.forceDelete(java.io.File)": {
        "intra_proced": [
            "FileNotFoundException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, int, boolean, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readLines(java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.LineIterator.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationMonitor.stop()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.comparator.CompositeFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AndFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.LastModifiedFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.XmlStreamWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream, long, long, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOCase.values()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationMonitor.start()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.getCanonicalFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.openOutputStream(java.io.File, boolean)": {
        "intra_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TeeOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.read(java.io.Reader, char[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReaderInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.DeferredFileOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.write(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filterList(IOFileFilter, java.lang.Iterable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.sleep(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.WriterOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "org.apache.commons.io.comparator.LastModifiedFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.AbstractFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readBoolean()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.RegexpClassNameMatcher.matches(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.Tracker.getPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.LastModifiedFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.compareToIgnoreCase(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.WindowsLineEndingInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.iterateFilesAndDirs(java.io.File, IOFileFilter, IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.FileChannel.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object)": {
        "intra_proced": [
            "TaggedIOException"
        ], 
        "inter_proced": []
    }, 
    "java.io.File.mkdirs()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.createLock()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.util.Stack.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.write(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.equals(byte[], byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.LineIterator.hasNext()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Enum.valueOf(java.lang.Class, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.matches()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.net.URL, java.nio.charset.Charset)": {
        "intra_proced": [
            "InputStream"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, TailerListener)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.ValidatingObjectInputStream.invalidClassNameFound(java.lang.String)": {
        "intra_proced": [
            "InvalidClassException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.touch(java.io.File)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.net.URLConnection)": {
        "intra_proced": [
            "InputStream"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(byte[], java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.getTempDirectoryPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileSystemUtils.openProcess(java.lang.String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.PrefixFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.net.URL)": {
        "intra_proced": [], 
        "inter_proced": [
            "InputStream"
        ]
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.processChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.1.compare(ByteOrderMark, ByteOrderMark)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.Charsets.toCharset(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.sort(java.lang.Object[], java.util.Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.DemuxInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readChar()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationMonitor.stop(long)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.io.Writer.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readFully(java.io.InputStream, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.forName(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.compile(java.lang.String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaner.track(java.lang.String, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.input.NullInputStream.read()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.normalize(java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Thread.currentThread()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.array()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, boolean, boolean, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.Java7Support.delete(java.io.File)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullInputStream.reset()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[], int, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.HiddenFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.EndianUtils.swapFloat(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.rewind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.TailerListenerAdapter.endOfFileReached()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.FileCleaner.track(java.lang.String, java.lang.Object, FileDeleteStrategy)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.lineIterator(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOUtils", 
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "java.util.zip.CRC32.getValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DirectoryFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readLines(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.equals(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.ByteOrderMark.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.comparator.NameFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)": {
        "intra_proced": [
            "IOException", 
            "IOUtils"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.comparator.PathFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.StringBuilderWriter.write(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isBrokenSymlink(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.flip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IOUtils"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.StringBuilderWriter.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.rewind()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.SizeFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.equals(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.io.StringWriter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException"
        ]
    }, 
    "java.io.File.exists()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.toSuffixes(java.lang.String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.toURLs(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.substring(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.AutoCloseInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer, char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.Java7Support.isAtLeastJava7()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, boolean)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.reflect.Proxy.getProxyClass(java.lang.ClassLoader, java.lang.Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream, short)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.CanWriteFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DefaultFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.getUserDirectoryPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AgeFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.read()": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.divide(java.math.BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.net.ServerSocket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.text.MessageFormat.format(java.lang.String, java.lang.Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.ExtensionFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.isUnderflow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Arrays.asList(java.lang.Object[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.access$100(ReversedLinesFileReader.FilePart)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.NameFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.input.Tailer.lookupswitch(b4)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.ThreadMonitor.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.getErrorStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.openInputStream(java.io.File)": {
        "intra_proced": [
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File, boolean)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.Charsets.requiredCharsets()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String, java.lang.String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getPath(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Thread.start()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, int, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedReader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.openOutputStream(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.String.substring(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.deleteOnExit()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TeeOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TeeOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.LineIterator.isValidLine(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.equalsIgnoreCase(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, byte[], int, int, boolean)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.forceMkdirParent(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.getInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.CompositeFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.writeChunked(char[], java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "FileNotFoundException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String, XmlStreamReaderException)": {
        "intra_proced": [], 
        "inter_proced": [
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException"
        ]
    }, 
    "org.apache.commons.io.comparator.NameFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.net.ServerSocket.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read(java.nio.CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.readFully(java.io.Reader, char[], int, int)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedFloat(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "java.lang.String.indexOf(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.matches(ByteOrderMark)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.setLength(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectStreamClass.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.TaggedIOException.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.nio.charset.Charset, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.waitFor(java.io.File, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean, java.util.List)": {
        "intra_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.iterateFiles(java.io.File, IOFileFilter, IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.comparator.NameFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.ExtensionFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.DemuxOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isFileOlder(java.io.File, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.toUpperCase(java.util.Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readFully(java.io.InputStream, byte[], int, int)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "java.lang.System.getProperty(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isHidden()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.read(java.io.InputStream, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.CopyUtils.copy(byte[], java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(java.io.ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.DirectoryFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TeeOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.ByteOrderMark.get(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.allocate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Double.longBitsToDouble(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceReader.read(char[], int, int)": {
        "intra_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.Process.destroy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationMonitor.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.position()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.SizeFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.run()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.StringBuilder.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.openStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.matcher(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.isEmpty()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.DemuxInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOfAsBigInteger(java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File, IOFileFilter, IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.isSeparator(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.newDecoder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.InheritableThreadLocal.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.readLines(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getAbsolutePath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.ReverseComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DirectoryFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.close(java.net.URLConnection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.ThreadMonitor.start(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.synchronizedSet(java.util.Set)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.size()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DirectoryFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.read(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.RegexFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils"
        ]
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter, java.io.File[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullInputStream.doEndOfFile()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, boolean)": {
        "intra_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, boolean)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "FileExistsException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.output.LockableFileWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, java.nio.charset.Charset, TailerListener, long, boolean, boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.read(java.io.InputStream)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.replace(char, char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.readLines(java.io.File, java.nio.charset.Charset)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOf0(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.input.BoundedInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedFloat(byte[], int, float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.getBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.flip()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.min(long, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.createLeftOver()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceKb(long)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.comparator.ReverseComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getAbsoluteFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ChunkedOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getCanonicalPath()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.min(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.valueOf(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.net.URL)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "InputStream"
        ]
    }, 
    "java.nio.ByteBuffer.mark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.CompositeFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.write(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URL.getProtocol()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileEntry.isExists()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.StringTokenizer.countTokens()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStreamWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.OrFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException", 
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.FileCleaner.track(java.io.File, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.output.WriterOutputStream.checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "UnsupportedOperationException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.normalize(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.input.WindowsLineEndingInputStream.readWithUpdate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, boolean, IOCase)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.input.CountingInputStream.resetCount()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(FileEntry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.XmlStreamWriter.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(java.lang.CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, IOCase)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TeeOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedInteger(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.afterRead(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.newEncoder()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaner.track(java.io.File, java.lang.Object, FileDeleteStrategy)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.input.NullReader.processChars(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, char, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.doEndOfFile()": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetEncoder.maxBytesPerChar()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullInputStream.read(byte[], int, int)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DirectoryFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getParentFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Double.doubleToLongBits(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.throwException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.lastModified()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Boolean.booleanValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.deleteCharAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileDeleteStrategy.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(byte[], java.io.Writer, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.PathFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.decode(java.nio.ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toCharArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedDouble(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readFloat()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.byteCountToDisplaySize(java.math.BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaner.exitWhenFinished()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.ValidatingObjectInputStream.resolveClass(java.io.ObjectStreamClass)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException"
        ]
    }, 
    "java.lang.Object.hashCode()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "org.apache.commons.io.ByteOrderMark.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Date.getTime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.RandomAccessFile.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, FileDeleteStrategy)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toString(java.net.URI, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "InputStream"
        ]
    }, 
    "org.apache.commons.io.FileUtils.getUserDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOExceptionWithCause.getCause()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.getStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.getOutputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.toFiles(java.net.URL[])": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DefaultFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.or(IOFileFilter[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, FileDeleteStrategy)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.LastModifiedFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.getTrackCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.RandomAccessFile.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.NameFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileEntry.getLevel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(byte[], java.io.Writer, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.ref.ReferenceQueue.remove()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.doHttpStream(BOMInputStream, BOMInputStream, java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException"
        ]
    }, 
    "org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, int, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, boolean)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "FileExistsException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Character.toUpperCase(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File, java.io.File)": {
        "intra_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "NullPointerException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.rollOver()": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "java.net.HttpURLConnection.disconnect()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.charAt(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.toFile(java.net.URL)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullInputStream.processBytes(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.getRuntime()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.WindowsLineEndingInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CountingInputStream.resetByteCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.wrap(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.AbstractFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOUtils"
        ]
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(FileEntry, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.readFileToString(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.input.XmlStreamReader.doRawStream(BOMInputStream, BOMInputStream, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "IOException", 
            "IOException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, FileDeleteStrategy)": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, TailerListener, long, boolean, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Matcher.find()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.output.DeferredFileOutputStream.getData()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.net.URL, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "InputStream"
        ]
    }, 
    "org.apache.commons.io.input.BOMInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.delete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.hasRemaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DefaultFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isSymlink(java.io.File)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "java.util.StringTokenizer.nextToken()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.beforeRead(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": []
    }, 
    "java.util.Collections.synchronizedList(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.compareTo(java.math.BigInteger)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.isFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.RandomAccessFile.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.UnixLineEndingInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.charset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String, java.lang.String)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.regionMatches(boolean, int, java.lang.String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedReader.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(java.lang.String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.ThreadMonitor.sleep(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.Java7Support.exists(java.io.File)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "java.io.RandomAccessFile.seek(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.StringWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.write(java.lang.String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.equals(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.CountingOutputStream.resetByteCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[], int, int)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.OutputStream)": {
        "intra_proced": [
            "FileInputStream"
        ], 
        "inter_proced": []
    }, 
    "java.io.Reader.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyToFile(java.io.InputStream, java.io.File)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.Thread.setDaemon(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.join(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.canRead()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceKb()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.compareTo(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DefaultFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.unmodifiableSortedMap(java.util.SortedMap)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.limit(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(IOFileFilter, java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.Java7Support.isSymLink(java.io.File)": {
        "intra_proced": [
            "RuntimeException", 
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AgeFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.nio.charset.Charset)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.input.TeeInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.run()": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(IOFileFilter, java.lang.Iterable)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream, byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.monitor.FileEntry.setChildren(FileEntry[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.access$200(ReversedLinesFileReader.FilePart)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.SizeFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.ValidatingObjectInputStream.accept(java.lang.Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DirectoryFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.swapLong(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.SuffixFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.skip(java.io.Reader, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)": {
        "intra_proced": [], 
        "inter_proced": [
            "TaggedIOException"
        ]
    }, 
    "org.apache.commons.io.input.BoundedInputStream.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.write(char[], java.io.OutputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "FileNotFoundException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.failIfNullBytePresent(java.lang.String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.Java7Support.readSymbolicLink(java.io.File)": {
        "intra_proced": [
            "RuntimeException", 
            "RuntimeException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullInputStream.skip(long)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.get()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toBufferedReader(java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.swapDouble(double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.HexDump.dump(byte[], long, java.io.OutputStream, int)": {
        "intra_proced": [
            "ArrayIndexOutOfBoundsException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.String.lastIndexOf(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.verifiedListFiles(java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.append(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.Process.getInputStream()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.WriterOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[], int, long)": {
        "intra_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(byte[], java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isFileNewer(java.io.File, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.InheritableThreadLocal.set(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.toURI()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.validateListFilesParameters(java.io.File, IOFileFilter)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "java.io.InputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.Charset.name()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.compare(ByteOrderMark, ByteOrderMark)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.reset()": {
        "intra_proced": [
            "IllegalStateException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readFully(java.io.InputStream, byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.skipFully(java.nio.channels.ReadableByteChannel, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "EOFException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.output.ProxyWriter.write(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.and(IOFileFilter[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.CharBuffer.hasRemaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.intBitsToFloat(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CoderResult.isOverflow()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.enumeration(java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.toByteArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.startsWith(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.NotFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.canWrite()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Float.floatToIntBits(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaner.getTrackCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Math.max(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.TeeInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, TailerListener, long, boolean, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.isSystemWindows()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.contentEquals(java.io.Reader, java.io.Reader)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.StringBuilderWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.listFiles(java.io.File, java.lang.String[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.comparator.CompositeFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.listFiles(java.io.File, IOFileFilter, IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.LineIterator.nextLine()": {
        "intra_proced": [
            "NoSuchElementException"
        ], 
        "inter_proced": [
            "IllegalStateException"
        ]
    }, 
    "org.apache.commons.io.output.StringBuilderWriter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.TeeInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.skipFully(java.io.InputStream, long)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "EOFException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedInteger(byte[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)": {
        "intra_proced": [
            "IOException", 
            "IOUtils"
        ], 
        "inter_proced": []
    }, 
    "java.io.CharArrayWriter.toCharArray()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.output.ChunkedWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(char[], java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(FileEntry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.WriterOutputStream.processInput(boolean)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Collections.sort(java.util.List, java.util.Comparator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.write(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File, java.nio.charset.Charset, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.input.CountingInputStream.getByteCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readFully(java.io.Reader, char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "java.io.Reader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getChars(int, int, char[], int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream, double)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "FileExistsException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException"
        ]
    }, 
    "java.io.RandomAccessFile.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.mark()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.writeChunked(byte[], java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.checkDirectory(java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.Tracker.delete()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.System.currentTimeMillis()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.readFully(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.input.NullInputStream.processByte()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.read(char[], int, int)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.indexOf(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(FileEntry, FileEntry[], java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.getRun()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URI.toURL()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toUpperCase()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.getBytes(java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.net.URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "InputStream"
        ]
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.getChannel()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReaderInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IndexOutOfBoundsException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.ready()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReaderInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(char[], java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.SizeFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()": {
        "intra_proced": [
            "FileOutputStream"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.WriterOutputStream.write(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter, java.lang.Iterable)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.ByteBuffer.get(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.output.ProxyWriter.afterWrite(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream, java.io.File)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, boolean)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.initialize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReversedLinesFileReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer, long, long, char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.monitor.FileEntry.getChildren()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleFile(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.skipFully(java.io.Reader, long)": {
        "intra_proced": [
            "EOFException"
        ], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.input.ProxyInputStream.beforeRead(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.TreeMap.put(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.tableswitch(i0)": {
        "intra_proced": [
            "IllegalStateException", 
            "IllegalStateException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IllegalArgumentException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.input.UnixLineEndingInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.substring(int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.ExtensionFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(byte[], java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.find()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOfBig0(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.input.BOMInputStream.hasBOM(ByteOrderMark)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.indexOf(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.allocate(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.compareTo(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readLong()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.compact()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.SizeFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.beforeWrite(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.math.BigInteger.valueOf(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.skip(java.nio.channels.ReadableByteChannel, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, int)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.TeeInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.lang.StringBuilder.append(float)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FilterInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.stop()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.DelegateFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.NameFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "java.net.URL.openConnection()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedReader.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.output.DemuxOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, boolean)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readDouble()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, int, java.util.Collection)": {
        "intra_proced": [
            "CancelException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "FileNotFoundException", 
            "IOException", 
            "IOException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.output.WriterOutputStream.close()": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException"
        ]
    }, 
    "org.apache.commons.io.ThreadMonitor.start(java.lang.Thread, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.sizeOf(java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "RuntimeException", 
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyReader.afterRead(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.remaining()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Object.getClass()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.push(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Runtime.exec(java.lang.String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.ReverseComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File, int, int)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOUtils"
        ]
    }, 
    "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)": {
        "intra_proced": [
            "IOException", 
            "IOUtils"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.WildcardFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.exitWhenFinished()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.ByteOrderMark.getCharsetName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CountingInputStream.getCount()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.LineIterator.next()": {
        "intra_proced": [], 
        "inter_proced": [
            "NoSuchElementException", 
            "IllegalStateException", 
            "NoSuchElementException", 
            "IllegalStateException"
        ]
    }, 
    "java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ByteArrayOutputStream.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceReader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.trim()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.SizeFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuilder.append(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.ObjectInputStream.resolveProxyClass(java.lang.String[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readShort()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.input.Tailer.stop(java.lang.Exception)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.io.Reader, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.length()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.CountingOutputStream.resetCount()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.reset()": {
        "intra_proced": [
            "UnsupportedOperationException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.nio.charset.Charset, boolean)": {
        "intra_proced": [
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer, long, long)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.EndianUtils.swapInteger(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.ValidatingObjectInputStream.reject(java.lang.Class[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.read(java.io.InputStream, byte[], int, int)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.delete()": {
        "intra_proced": [], 
        "inter_proced": [
            "FileNotFoundException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.IOCase.isCaseSensitive()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.AutoCloseInputStream.finalize()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceReader.skip(long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.Tracker.clear()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.CountingOutputStream.getCount()": {
        "intra_proced": [
            "ArithmeticException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.destroy()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter, java.lang.Iterable, java.util.Collection)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.append(java.lang.CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.filterDirectoryContents(java.io.File, int, java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)": {
        "intra_proced": [
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException", 
            "XmlStreamReaderException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.skipBytes(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileEntry.isDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.getParent()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.comparator.PathFileComparator.sort(java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.IOCase.readResolve()": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.lang.Character.isDigit(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.createNewFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.Reaper.setPriority(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.parseInt(java.lang.String, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.CanReadFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.DefaultFileComparator.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.replaceWith(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.StringBuffer.append(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.iterateFiles(java.io.File, java.lang.String[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.FileUtils.forceMkdir(java.io.File)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.ByteBuffer.put(byte)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.ArrayList.add(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileEntry.newChildInstance(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.filterList(IOFileFilter, java.io.File[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.read(java.io.Reader, char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.comparator.LastModifiedFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.UnixLineEndingInputStream.readWithUpdate()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.io.Reader, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.equals(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.reset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.DeferredFileOutputStream.isThresholdExceeded()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.nio.charset.CoderResult.isError()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Writer.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.checkFileRequirements(java.io.File, java.io.File)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.getBOM()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.read(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.write(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.AbstractFileFilter.toString()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.channels.Selector.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.read(char[])": {
        "intra_proced": [], 
        "inter_proced": [
            "IOException", 
            "EOFException"
        ]
    }, 
    "java.io.Writer.write(char[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BoundedInputStream.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.ValidatingObjectInputStream.validateClassName(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "InvalidClassException"
        ]
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.EndianUtils.writeSwappedLong(byte[], int, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.LineIterator.closeQuietly(LineIterator)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, long)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IllegalArgumentException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(IOFileFilter)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.AutoCloseInputStream.afterRead(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)": {
        "intra_proced": [], 
        "inter_proced": [
            "TaggedIOException"
        ]
    }, 
    "org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.write(java.lang.String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.InputStream.available()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File, java.util.Collection, CancelException)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.setConnectTimeout(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Thread.interrupt()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toString(java.net.URI, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": [
            "InputStream"
        ]
    }, 
    "org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IOUtils"
        ]
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(FileEntry, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.regex.Pattern.compile(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.hasBOM()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ReaderInputStream.fillBuffer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, long)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toString(java.io.InputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Integer.toHexString(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.URLConnection.setReadTimeout(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.LockableFileWriter.write(java.lang.String, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.OutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.PathFileComparator.compare(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.IOUtils.toInputStream(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(FileAlterationObserver)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.getTempDirectory()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, IOFileFilter, boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileCleaningTracker.Reaper.setDaemon(boolean)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.reflect.InvocationTargetException.getTargetException()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.serialization.WildcardClassNameMatcher.matches(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.NullReader.skip(long)": {
        "intra_proced": [
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.byteCountToDisplaySize(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.toString(java.nio.charset.Charset)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.setLastModified(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream, java.lang.String)": {
        "intra_proced": [
            "IOException", 
            "IOException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, byte[], boolean)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "org.apache.commons.io.output.ByteArrayOutputStream.write(byte[], int, int)": {
        "intra_proced": [
            "IndexOutOfBoundsException"
        ], 
        "inter_proced": []
    }, 
    "java.nio.CharBuffer.position(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.WriterOutputStream.flushOutput()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.WriterOutputStream.flush()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.write(char[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(byte[], java.io.Writer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.CountingOutputStream.getByteCount()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)": {
        "intra_proced": [], 
        "inter_proced": [
            "NullPointerException", 
            "IllegalArgumentException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ]
    }, 
    "java.lang.Long.parseLong(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.toByteArray(java.net.URI)": {
        "intra_proced": [], 
        "inter_proced": [
            "IOUtils", 
            "InputStream"
        ]
    }, 
    "java.io.RandomAccessFile.getFilePointer()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.waitFor()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileEntry.getFile()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": [
            "IllegalArgumentException", 
            "NullPointerException"
        ]
    }, 
    "org.apache.commons.io.DirectoryWalker.walk(java.io.File, int, java.util.Collection)": {
        "intra_proced": [], 
        "inter_proced": [
            "CancelException", 
            "CancelException"
        ]
    }, 
    "org.apache.commons.io.input.BoundedInputStream.read(byte[])": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.String.toLowerCase(java.util.Locale)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Class.getName()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.write(char[], java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.read(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.nio.charset.CharsetDecoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.net.Socket.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, boolean)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException"
        ], 
        "inter_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "FileExistsException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "FileExistsException", 
            "IOException", 
            "IOException", 
            "IOException"
        ]
    }, 
    "java.io.InputStream.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFileFilter.accept(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.ProxyWriter.write(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.Tailer.create(java.io.File, TailerListener, long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)": {
        "intra_proced": [
            "IOUtils", 
            "IOUtils"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "FileNotFoundException"
        ]
    }, 
    "org.apache.commons.io.input.ProxyReader.skip(long)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.read(byte[], int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.comparator.CompositeFileComparator.compare(java.lang.Object, java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.CharSequenceInputStream.read()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.ProxyInputStream.mark(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.FileInputStream.close()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.UUID.randomUUID()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence, int, int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)": {
        "intra_proced": [
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IOException", 
            "FileExistsException", 
            "IOException", 
            "IOException"
        ], 
        "inter_proced": [
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "IOException", 
            "NullPointerException", 
            "NullPointerException", 
            "FileNotFoundException", 
            "IllegalArgumentException", 
            "IllegalArgumentException", 
            "IOException", 
            "FileNotFoundException", 
            "IOException"
        ]
    }, 
    "java.lang.Object.clone()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOUtils.closeQuietly(java.net.Socket)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.filefilter.FileFilterUtils.toList(IOFileFilter[])": {
        "intra_proced": [
            "IllegalArgumentException", 
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.SwappedDataInputStream.readInt()": {
        "intra_proced": [], 
        "inter_proced": [
            "EOFException"
        ]
    }, 
    "org.apache.commons.io.output.ProxyOutputStream.afterWrite(int)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(byte[], java.io.Writer, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.IOCase.forName(java.lang.String)": {
        "intra_proced": [
            "IllegalArgumentException"
        ], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": [
            "IllegalArgumentException"
        ]
    }, 
    "java.nio.charset.Charset.defaultCharset()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.Java7Support.createSymbolicLink(java.io.File, java.io.File)": {
        "intra_proced": [
            "RuntimeException"
        ], 
        "inter_proced": [
            "RuntimeException"
        ]
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.lang.Process.exitValue()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.OutputStream)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.File.renameTo(java.io.File)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.Reader.markSupported()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.monitor.FileAlterationObserver.doListFiles(java.io.File, FileEntry)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.io.BufferedReader.readLine()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.input.BOMInputStream.readFirstBytes()": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.output.NullWriter.append(char)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)": {
        "intra_proced": [
            "NullPointerException"
        ], 
        "inter_proced": [
            "CancelException"
        ]
    }, 
    "java.lang.String.valueOf(java.lang.Object)": {
        "intra_proced": [], 
        "inter_proced": []
    }, 
    "java.util.Stack.pop()": {
        "intra_proced": [], 
        "inter_proced": []
    }
}